
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASSIGN BOOL CHAR CLOSEBRAC CLOSEPAR COMMA CTEC CTEF CTEI CTES DESDE DIVIDE ENTONCES EQ ESCRIBE FALSE FLOAT FUNCION GT GTE HACER HASTA HAZ ID INT LCURLYB LEE LT LTE MIENTRAS MINUS NEQ OPENBRAC OPENPAR OR PLUS PRINCIPAL PROGRAMA RCURLYB RETORNO SEMICOLON SI SINO TIMES TRUE VARprogram_declaration : PROGRAMA ID SEMICOLON declare_vars declare_func PRINCIPAL OPENPAR CLOSEPAR bloquedeclare_vars : VAR vars\n                    | emptyvars : tipo ID dimensions more_vars SEMICOLON vars\n            | emptymore_vars : COMMA ID dimensions more_vars\n                 | emptydimensions : OPENBRAC CTEI CLOSEBRAC \n                  | OPENBRAC CTEI CLOSEBRAC OPENBRAC CTEI CLOSEBRAC\n                  | emptydeclare_func : FUNCION tipo ID OPENPAR declare_func_params CLOSEPAR declare_vars bloque\n                    | emptydeclare_func_params : tipo ID more_params\n                           | emptymore_params : COMMA tipo ID more_params\n                  | emptytipo : INT \n            | FLOAT\n            | CHAR\n            | BOOLbloque : LCURLYB estatuto RCURLYBestatuto : asignacion \n                | condicion \n                | func_void\n                | retorno\n                | escribe\n                | lee \n                | desde\n                | mientras\n                | emptyasignacion : id ASSIGN megaexp SEMICOLONcondicion : SI OPENPAR megaexp CLOSEPAR ENTONCES bloque bloque_sinobloque_sino : SINO bloque \n              | emptyfunc_call_params : megaexp more_call_params\n                       | emptymore_call_params : COMMA megaexp\n                        | emptyfunc_void : ID OPENPAR CLOSEPAR func_call_params SEMICOLONescribe : ESCRIBE OPENPAR print_options CLOSEPAR SEMICOLONprint_options : CTES more_print\n                     | megaexp more_printmore_print : COMMA CTES\n                  | COMMA megaexp\n                  | emptylee : LEE OPENPAR ID read_more CLOSEPAR SEMICOLONread_more : COMMA ID read_more\n                 | emptyretorno : RETORNO OPENPAR ID CLOSEPARdesde : DESDE ID ASSIGN exp HASTA exp HACER bloquemientras : MIENTRAS OPENPAR megaexp CLOSEPAR HAZ bloqueid : ID\n          | ID OPENBRAC exp CLOSEBRAC\n          | ID OPENBRAC exp CLOSEBRAC OPENBRAC exp CLOSEBRACboolean_op : OR \n                  | ANDlogical_op : GT\n                  | GTE\n                  | LT\n                  | LTE\n                  | NEQ\n                  | EQsums : MINUS \n            | PLUS multdiv : TIMES \n               | DIVIDE megaexp : superexp\n               | megaexp boolean_op superexpsuperexp : exp\n                | superexp logical_op expexp : termino\n           | exp sums terminotermino : factor\n               | termino multdiv factorfactor : vcte\n              | openpar megaexp closeparopenpar : OPENPARclosepar : CLOSEPARvcte : id\n            | CTEI\n            | CTEF\n            | CTEC\n            | TRUE\n            | FALSEempty :'
    
_lr_action_items = {'PROGRAMA':([0,],[2,]),'$end':([1,32,63,],[0,-1,-21,]),'ID':([2,12,14,15,16,17,19,29,33,34,56,64,65,67,68,69,70,72,86,92,95,102,104,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,133,137,151,153,159,],[3,20,-17,-18,-19,-20,22,38,52,58,71,93,93,93,97,93,101,93,93,-77,93,93,141,93,-55,-56,93,-57,-58,-59,-60,-61,-62,93,-63,-64,93,-65,-66,93,158,93,93,93,]),'SEMICOLON':([3,20,23,25,28,30,38,39,61,77,79,80,81,82,83,84,85,87,88,89,90,91,93,95,106,126,127,128,129,131,142,143,144,145,146,147,150,152,157,163,172,],[4,-85,-85,-10,37,-7,-85,-8,-85,-6,-79,107,-67,-69,-71,-73,-75,-80,-81,-82,-83,-84,-52,-85,-9,149,-85,-36,-53,154,-68,-70,-72,-74,-76,-78,-35,-38,165,-37,-54,]),'VAR':([4,59,],[6,6,]),'FUNCION':([4,5,6,7,11,13,37,60,],[-85,9,-85,-3,-2,-5,-85,-4,]),'PRINCIPAL':([4,5,6,7,8,10,11,13,37,60,63,105,],[-85,-85,-85,-3,18,-12,-2,-5,-85,-4,-21,-11,]),'INT':([6,9,27,37,74,],[14,14,14,14,14,]),'FLOAT':([6,9,27,37,74,],[15,15,15,15,15,]),'CHAR':([6,9,27,37,74,],[16,16,16,16,16,]),'BOOL':([6,9,27,37,74,],[17,17,17,17,17,]),'LCURLYB':([6,7,11,13,26,37,59,60,76,148,160,170,173,],[-85,-3,-2,-5,33,-85,-85,-4,33,33,33,33,33,]),'OPENPAR':([18,22,51,52,53,54,55,57,64,65,67,69,72,86,92,95,102,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,133,151,153,159,],[21,27,65,66,68,69,70,72,92,92,92,92,92,92,-77,92,92,92,-55,-56,92,-57,-58,-59,-60,-61,-62,92,-63,-64,92,-65,-66,92,92,92,92,]),'OPENBRAC':([20,38,39,52,93,129,],[24,24,62,67,67,153,]),'COMMA':([20,23,25,38,39,58,61,79,81,82,83,84,85,87,88,89,90,91,93,99,100,101,106,127,129,141,142,143,144,145,146,147,158,172,],[-85,29,-10,-85,-8,74,29,-79,-67,-69,-71,-73,-75,-80,-81,-82,-83,-84,-52,133,133,137,-9,151,-53,74,-68,-70,-72,-74,-76,-78,137,-54,]),'CLOSEPAR':([21,27,35,36,58,66,73,75,79,81,82,83,84,85,87,88,89,90,91,93,94,97,98,99,100,101,103,124,129,132,134,135,136,138,141,142,143,144,145,146,147,155,156,158,161,166,172,],[26,-85,59,-14,-85,95,-13,-16,-79,-67,-69,-71,-73,-75,-80,-81,-82,-83,-84,-52,125,130,131,-85,-85,-85,140,147,-53,-41,-45,-42,157,-48,-85,-68,-70,-72,-74,-76,-78,-43,-44,-85,-15,-47,-54,]),'CTEI':([24,62,64,65,67,69,72,86,92,95,102,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,133,151,153,159,],[31,78,87,87,87,87,87,87,-77,87,87,87,-55,-56,87,-57,-58,-59,-60,-61,-62,87,-63,-64,87,-65,-66,87,87,87,87,]),'CLOSEBRAC':([31,78,79,83,84,85,87,88,89,90,91,93,96,129,144,145,146,147,164,172,],[39,106,-79,-71,-73,-75,-80,-81,-82,-83,-84,-52,129,-53,-72,-74,-76,-78,172,-54,]),'SI':([33,],[51,]),'RETORNO':([33,],[53,]),'ESCRIBE':([33,],[54,]),'LEE':([33,],[55,]),'DESDE':([33,],[56,]),'MIENTRAS':([33,],[57,]),'RCURLYB':([33,40,41,42,43,44,45,46,47,48,49,63,107,130,149,154,162,165,168,169,171,174,175,],[-85,63,-22,-23,-24,-25,-26,-27,-28,-29,-30,-21,-31,-49,-39,-40,-85,-46,-51,-32,-34,-33,-50,]),'ASSIGN':([50,52,71,129,172,],[64,-52,102,-53,-54,]),'SINO':([63,162,],[-21,170,]),'CTEF':([64,65,67,69,72,86,92,95,102,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,133,151,153,159,],[88,88,88,88,88,88,-77,88,88,88,-55,-56,88,-57,-58,-59,-60,-61,-62,88,-63,-64,88,-65,-66,88,88,88,88,]),'CTEC':([64,65,67,69,72,86,92,95,102,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,133,151,153,159,],[89,89,89,89,89,89,-77,89,89,89,-55,-56,89,-57,-58,-59,-60,-61,-62,89,-63,-64,89,-65,-66,89,89,89,89,]),'TRUE':([64,65,67,69,72,86,92,95,102,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,133,151,153,159,],[90,90,90,90,90,90,-77,90,90,90,-55,-56,90,-57,-58,-59,-60,-61,-62,90,-63,-64,90,-65,-66,90,90,90,90,]),'FALSE':([64,65,67,69,72,86,92,95,102,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,133,151,153,159,],[91,91,91,91,91,91,-77,91,91,91,-55,-56,91,-57,-58,-59,-60,-61,-62,91,-63,-64,91,-65,-66,91,91,91,91,]),'CTES':([69,133,],[99,155,]),'TIMES':([79,83,84,85,87,88,89,90,91,93,129,144,145,146,147,172,],[-79,122,-73,-75,-80,-81,-82,-83,-84,-52,-53,122,-74,-76,-78,-54,]),'DIVIDE':([79,83,84,85,87,88,89,90,91,93,129,144,145,146,147,172,],[-79,123,-73,-75,-80,-81,-82,-83,-84,-52,-53,123,-74,-76,-78,-54,]),'MINUS':([79,82,83,84,85,87,88,89,90,91,93,96,129,139,143,144,145,146,147,164,167,172,],[-79,119,-71,-73,-75,-80,-81,-82,-83,-84,-52,119,-53,119,119,-72,-74,-76,-78,119,119,-54,]),'PLUS':([79,82,83,84,85,87,88,89,90,91,93,96,129,139,143,144,145,146,147,164,167,172,],[-79,120,-71,-73,-75,-80,-81,-82,-83,-84,-52,120,-53,120,120,-72,-74,-76,-78,120,120,-54,]),'GT':([79,81,82,83,84,85,87,88,89,90,91,93,129,142,143,144,145,146,147,172,],[-79,112,-69,-71,-73,-75,-80,-81,-82,-83,-84,-52,-53,112,-70,-72,-74,-76,-78,-54,]),'GTE':([79,81,82,83,84,85,87,88,89,90,91,93,129,142,143,144,145,146,147,172,],[-79,113,-69,-71,-73,-75,-80,-81,-82,-83,-84,-52,-53,113,-70,-72,-74,-76,-78,-54,]),'LT':([79,81,82,83,84,85,87,88,89,90,91,93,129,142,143,144,145,146,147,172,],[-79,114,-69,-71,-73,-75,-80,-81,-82,-83,-84,-52,-53,114,-70,-72,-74,-76,-78,-54,]),'LTE':([79,81,82,83,84,85,87,88,89,90,91,93,129,142,143,144,145,146,147,172,],[-79,115,-69,-71,-73,-75,-80,-81,-82,-83,-84,-52,-53,115,-70,-72,-74,-76,-78,-54,]),'NEQ':([79,81,82,83,84,85,87,88,89,90,91,93,129,142,143,144,145,146,147,172,],[-79,116,-69,-71,-73,-75,-80,-81,-82,-83,-84,-52,-53,116,-70,-72,-74,-76,-78,-54,]),'EQ':([79,81,82,83,84,85,87,88,89,90,91,93,129,142,143,144,145,146,147,172,],[-79,117,-69,-71,-73,-75,-80,-81,-82,-83,-84,-52,-53,117,-70,-72,-74,-76,-78,-54,]),'OR':([79,80,81,82,83,84,85,87,88,89,90,91,93,94,100,103,124,127,129,142,143,144,145,146,147,156,163,172,],[-79,109,-67,-69,-71,-73,-75,-80,-81,-82,-83,-84,-52,109,109,109,109,109,-53,-68,-70,-72,-74,-76,-78,109,109,-54,]),'AND':([79,80,81,82,83,84,85,87,88,89,90,91,93,94,100,103,124,127,129,142,143,144,145,146,147,156,163,172,],[-79,110,-67,-69,-71,-73,-75,-80,-81,-82,-83,-84,-52,110,110,110,110,110,-53,-68,-70,-72,-74,-76,-78,110,110,-54,]),'HASTA':([79,83,84,85,87,88,89,90,91,93,129,139,144,145,146,147,172,],[-79,-71,-73,-75,-80,-81,-82,-83,-84,-52,-53,159,-72,-74,-76,-78,-54,]),'HACER':([79,83,84,85,87,88,89,90,91,93,129,144,145,146,147,167,172,],[-79,-71,-73,-75,-80,-81,-82,-83,-84,-52,-53,-72,-74,-76,-78,173,-54,]),'ENTONCES':([125,],[148,]),'HAZ':([140,],[160,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program_declaration':([0,],[1,]),'declare_vars':([4,59,],[5,76,]),'empty':([4,5,6,20,23,27,33,37,38,58,59,61,95,99,100,101,127,141,158,162,],[7,10,13,25,30,36,49,13,25,75,7,30,128,134,134,138,152,75,138,171,]),'declare_func':([5,],[8,]),'vars':([6,37,],[11,60,]),'tipo':([6,9,27,37,74,],[12,19,34,12,104,]),'dimensions':([20,38,],[23,61,]),'more_vars':([23,61,],[28,77,]),'bloque':([26,76,148,160,170,173,],[32,105,162,168,174,175,]),'declare_func_params':([27,],[35,]),'estatuto':([33,],[40,]),'asignacion':([33,],[41,]),'condicion':([33,],[42,]),'func_void':([33,],[43,]),'retorno':([33,],[44,]),'escribe':([33,],[45,]),'lee':([33,],[46,]),'desde':([33,],[47,]),'mientras':([33,],[48,]),'id':([33,64,65,67,69,72,86,95,102,108,111,118,121,133,151,153,159,],[50,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'more_params':([58,141,],[73,161,]),'megaexp':([64,65,69,72,86,95,133,151,],[80,94,100,103,124,127,156,163,]),'superexp':([64,65,69,72,86,95,108,133,151,],[81,81,81,81,81,81,142,81,81,]),'exp':([64,65,67,69,72,86,95,102,108,111,133,151,153,159,],[82,82,96,82,82,82,82,139,82,143,82,82,164,167,]),'termino':([64,65,67,69,72,86,95,102,108,111,118,133,151,153,159,],[83,83,83,83,83,83,83,83,83,83,144,83,83,83,83,]),'factor':([64,65,67,69,72,86,95,102,108,111,118,121,133,151,153,159,],[84,84,84,84,84,84,84,84,84,84,84,145,84,84,84,84,]),'vcte':([64,65,67,69,72,86,95,102,108,111,118,121,133,151,153,159,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'openpar':([64,65,67,69,72,86,95,102,108,111,118,121,133,151,153,159,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'print_options':([69,],[98,]),'boolean_op':([80,94,100,103,124,127,156,163,],[108,108,108,108,108,108,108,108,]),'logical_op':([81,142,],[111,111,]),'sums':([82,96,139,143,164,167,],[118,118,118,118,118,118,]),'multdiv':([83,144,],[121,121,]),'func_call_params':([95,],[126,]),'more_print':([99,100,],[132,135,]),'read_more':([101,158,],[136,166,]),'closepar':([124,],[146,]),'more_call_params':([127,],[150,]),'bloque_sino':([162,],[169,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program_declaration","S'",1,None,None,None),
  ('program_declaration -> PROGRAMA ID SEMICOLON declare_vars declare_func PRINCIPAL OPENPAR CLOSEPAR bloque','program_declaration',9,'p_program_declaration','patitoParser.py',11),
  ('declare_vars -> VAR vars','declare_vars',2,'p_declare_vars','patitoParser.py',16),
  ('declare_vars -> empty','declare_vars',1,'p_declare_vars','patitoParser.py',17),
  ('vars -> tipo ID dimensions more_vars SEMICOLON vars','vars',6,'p_vars','patitoParser.py',20),
  ('vars -> empty','vars',1,'p_vars','patitoParser.py',21),
  ('more_vars -> COMMA ID dimensions more_vars','more_vars',4,'p_more_vars','patitoParser.py',24),
  ('more_vars -> empty','more_vars',1,'p_more_vars','patitoParser.py',25),
  ('dimensions -> OPENBRAC CTEI CLOSEBRAC','dimensions',3,'p_dimensions','patitoParser.py',28),
  ('dimensions -> OPENBRAC CTEI CLOSEBRAC OPENBRAC CTEI CLOSEBRAC','dimensions',6,'p_dimensions','patitoParser.py',29),
  ('dimensions -> empty','dimensions',1,'p_dimensions','patitoParser.py',30),
  ('declare_func -> FUNCION tipo ID OPENPAR declare_func_params CLOSEPAR declare_vars bloque','declare_func',8,'p_declare_func','patitoParser.py',33),
  ('declare_func -> empty','declare_func',1,'p_declare_func','patitoParser.py',34),
  ('declare_func_params -> tipo ID more_params','declare_func_params',3,'p_declare_func_params','patitoParser.py',37),
  ('declare_func_params -> empty','declare_func_params',1,'p_declare_func_params','patitoParser.py',38),
  ('more_params -> COMMA tipo ID more_params','more_params',4,'p_more_params','patitoParser.py',41),
  ('more_params -> empty','more_params',1,'p_more_params','patitoParser.py',42),
  ('tipo -> INT','tipo',1,'p_tipo','patitoParser.py',45),
  ('tipo -> FLOAT','tipo',1,'p_tipo','patitoParser.py',46),
  ('tipo -> CHAR','tipo',1,'p_tipo','patitoParser.py',47),
  ('tipo -> BOOL','tipo',1,'p_tipo','patitoParser.py',48),
  ('bloque -> LCURLYB estatuto RCURLYB','bloque',3,'p_bloque','patitoParser.py',52),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','patitoParser.py',55),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','patitoParser.py',56),
  ('estatuto -> func_void','estatuto',1,'p_estatuto','patitoParser.py',57),
  ('estatuto -> retorno','estatuto',1,'p_estatuto','patitoParser.py',58),
  ('estatuto -> escribe','estatuto',1,'p_estatuto','patitoParser.py',59),
  ('estatuto -> lee','estatuto',1,'p_estatuto','patitoParser.py',60),
  ('estatuto -> desde','estatuto',1,'p_estatuto','patitoParser.py',61),
  ('estatuto -> mientras','estatuto',1,'p_estatuto','patitoParser.py',62),
  ('estatuto -> empty','estatuto',1,'p_estatuto','patitoParser.py',63),
  ('asignacion -> id ASSIGN megaexp SEMICOLON','asignacion',4,'p_asignacion','patitoParser.py',67),
  ('condicion -> SI OPENPAR megaexp CLOSEPAR ENTONCES bloque bloque_sino','condicion',7,'p_condicion','patitoParser.py',71),
  ('bloque_sino -> SINO bloque','bloque_sino',2,'p_bloque_sino','patitoParser.py',74),
  ('bloque_sino -> empty','bloque_sino',1,'p_bloque_sino','patitoParser.py',75),
  ('func_call_params -> megaexp more_call_params','func_call_params',2,'p_func_call_params','patitoParser.py',79),
  ('func_call_params -> empty','func_call_params',1,'p_func_call_params','patitoParser.py',80),
  ('more_call_params -> COMMA megaexp','more_call_params',2,'p_more_call_params','patitoParser.py',83),
  ('more_call_params -> empty','more_call_params',1,'p_more_call_params','patitoParser.py',84),
  ('func_void -> ID OPENPAR CLOSEPAR func_call_params SEMICOLON','func_void',5,'p_func_void','patitoParser.py',87),
  ('escribe -> ESCRIBE OPENPAR print_options CLOSEPAR SEMICOLON','escribe',5,'p_escribe','patitoParser.py',91),
  ('print_options -> CTES more_print','print_options',2,'p_print_options','patitoParser.py',94),
  ('print_options -> megaexp more_print','print_options',2,'p_print_options','patitoParser.py',95),
  ('more_print -> COMMA CTES','more_print',2,'p_more_print','patitoParser.py',98),
  ('more_print -> COMMA megaexp','more_print',2,'p_more_print','patitoParser.py',99),
  ('more_print -> empty','more_print',1,'p_more_print','patitoParser.py',100),
  ('lee -> LEE OPENPAR ID read_more CLOSEPAR SEMICOLON','lee',6,'p_lee','patitoParser.py',104),
  ('read_more -> COMMA ID read_more','read_more',3,'p_read_more','patitoParser.py',107),
  ('read_more -> empty','read_more',1,'p_read_more','patitoParser.py',108),
  ('retorno -> RETORNO OPENPAR ID CLOSEPAR','retorno',4,'p_retorno','patitoParser.py',112),
  ('desde -> DESDE ID ASSIGN exp HASTA exp HACER bloque','desde',8,'p_desde','patitoParser.py',116),
  ('mientras -> MIENTRAS OPENPAR megaexp CLOSEPAR HAZ bloque','mientras',6,'p_mientras','patitoParser.py',120),
  ('id -> ID','id',1,'p_id','patitoParser.py',124),
  ('id -> ID OPENBRAC exp CLOSEBRAC','id',4,'p_id','patitoParser.py',125),
  ('id -> ID OPENBRAC exp CLOSEBRAC OPENBRAC exp CLOSEBRAC','id',7,'p_id','patitoParser.py',126),
  ('boolean_op -> OR','boolean_op',1,'p_boolean_op','patitoParser.py',130),
  ('boolean_op -> AND','boolean_op',1,'p_boolean_op','patitoParser.py',131),
  ('logical_op -> GT','logical_op',1,'p_logical_op','patitoParser.py',136),
  ('logical_op -> GTE','logical_op',1,'p_logical_op','patitoParser.py',137),
  ('logical_op -> LT','logical_op',1,'p_logical_op','patitoParser.py',138),
  ('logical_op -> LTE','logical_op',1,'p_logical_op','patitoParser.py',139),
  ('logical_op -> NEQ','logical_op',1,'p_logical_op','patitoParser.py',140),
  ('logical_op -> EQ','logical_op',1,'p_logical_op','patitoParser.py',141),
  ('sums -> MINUS','sums',1,'p_sums','patitoParser.py',146),
  ('sums -> PLUS','sums',1,'p_sums','patitoParser.py',147),
  ('multdiv -> TIMES','multdiv',1,'p_multdiv','patitoParser.py',152),
  ('multdiv -> DIVIDE','multdiv',1,'p_multdiv','patitoParser.py',153),
  ('megaexp -> superexp','megaexp',1,'p_megaexp','patitoParser.py',159),
  ('megaexp -> megaexp boolean_op superexp','megaexp',3,'p_megaexp','patitoParser.py',160),
  ('superexp -> exp','superexp',1,'p_superexp','patitoParser.py',166),
  ('superexp -> superexp logical_op exp','superexp',3,'p_superexp','patitoParser.py',167),
  ('exp -> termino','exp',1,'p_exp','patitoParser.py',173),
  ('exp -> exp sums termino','exp',3,'p_exp','patitoParser.py',174),
  ('termino -> factor','termino',1,'p_termino','patitoParser.py',180),
  ('termino -> termino multdiv factor','termino',3,'p_termino','patitoParser.py',181),
  ('factor -> vcte','factor',1,'p_factor','patitoParser.py',187),
  ('factor -> openpar megaexp closepar','factor',3,'p_factor','patitoParser.py',188),
  ('openpar -> OPENPAR','openpar',1,'p_openpar','patitoParser.py',192),
  ('closepar -> CLOSEPAR','closepar',1,'p_closepar','patitoParser.py',197),
  ('vcte -> id','vcte',1,'p_vcte','patitoParser.py',201),
  ('vcte -> CTEI','vcte',1,'p_vcte','patitoParser.py',202),
  ('vcte -> CTEF','vcte',1,'p_vcte','patitoParser.py',203),
  ('vcte -> CTEC','vcte',1,'p_vcte','patitoParser.py',204),
  ('vcte -> TRUE','vcte',1,'p_vcte','patitoParser.py',205),
  ('vcte -> FALSE','vcte',1,'p_vcte','patitoParser.py',206),
  ('empty -> <empty>','empty',0,'p_empty','patitoParser.py',212),
]
