Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program_declaration
Rule 1     program_declaration -> PROGRAMA ID SEMICOLON declare_vars declare_func_rec declare_main OPENPAR CLOSEPAR bloque_funcion
Rule 2     declare_main -> PRINCIPAL
Rule 3     declare_vars -> VAR vars
Rule 4     declare_vars -> empty
Rule 5     vars -> var_id dimensions more_vars SEMICOLON vars
Rule 6     vars -> empty
Rule 7     var_id -> tipo ID
Rule 8     more_vars -> more_var_id dimensions more_vars
Rule 9     more_vars -> empty
Rule 10    more_var_id -> COMMA ID
Rule 11    dimensions -> OPENBRAC CTEI CLOSEBRAC
Rule 12    dimensions -> OPENBRAC CTEI CLOSEBRAC OPENBRAC CTEI CLOSEBRAC
Rule 13    dimensions -> empty
Rule 14    declare_func_rec -> declare_func_rec declare_func
Rule 15    declare_func_rec -> empty
Rule 16    declare_func -> FUNCION func_id OPENPAR declare_func_params CLOSEPAR bloque_funcion
Rule 17    func_id -> tipo ID
Rule 18    func_id -> VOID ID
Rule 19    declare_func_params -> get_func_params more_params
Rule 20    declare_func_params -> empty
Rule 21    get_func_params -> tipo ID
Rule 22    more_params -> more_var_id more_params
Rule 23    more_params -> empty
Rule 24    more_var_id -> COMMA tipo ID
Rule 25    tipo -> INT
Rule 26    tipo -> FLOAT
Rule 27    tipo -> CHAR
Rule 28    tipo -> BOOL
Rule 29    bloque_funcion -> LCURLYB declare_vars estatutos_rec RCURLYB
Rule 30    bloque -> LCURLYB estatutos_rec RCURLYB
Rule 31    estatutos_rec -> estatuto estatutos_rec
Rule 32    estatutos_rec -> empty
Rule 33    estatuto -> asignacion
Rule 34    estatuto -> condicion
Rule 35    estatuto -> func_void
Rule 36    estatuto -> retorno
Rule 37    estatuto -> escribe
Rule 38    estatuto -> lee
Rule 39    estatuto -> desde
Rule 40    estatuto -> mientras_estatuto
Rule 41    asignacion -> id ASSIGN megaexp SEMICOLON
Rule 42    condicion -> SI OPENPAR megaexp CLOSEPAR entonces bloque_entonces
Rule 43    entonces -> ENTONCES
Rule 44    bloque_entonces -> bloque bloque_sino
Rule 45    bloque_sino -> sino bloque
Rule 46    bloque_sino -> empty
Rule 47    sino -> SINO
Rule 48    func_void -> func_call_id OPENPAR func_call_params CLOSEPAR SEMICOLON
Rule 49    func_call_id -> ID
Rule 50    func_call_params -> func_call_params COMMA func_call_params
Rule 51    func_call_params -> empty
Rule 52    func_call_params -> megaexp
Rule 53    escribe -> QUACKOUT OPENPAR print_options CLOSEPAR SEMICOLON
Rule 54    print_options -> CTES more_print
Rule 55    print_options -> megaexp more_print
Rule 56    more_print -> COMMA CTES
Rule 57    more_print -> COMMA megaexp
Rule 58    more_print -> empty
Rule 59    lee -> QUACKIN OPENPAR ID read_more CLOSEPAR SEMICOLON
Rule 60    read_more -> COMMA ID read_more
Rule 61    read_more -> empty
Rule 62    retorno -> RETORNO OPENPAR megaexp CLOSEPAR SEMICOLON
Rule 63    desde -> DESDE forId ASSIGN exp hasta exp hacer bloque
Rule 64    forId -> ID
Rule 65    hasta -> HASTA
Rule 66    hacer -> HACER
Rule 67    mientras_estatuto -> mientras OPENPAR megaexp CLOSEPAR haz bloque
Rule 68    mientras -> MIENTRAS
Rule 69    haz -> HAZ
Rule 70    megaexp -> superexp
Rule 71    megaexp -> megaexp boolean_op superexp
Rule 72    superexp -> exp
Rule 73    superexp -> superexp logical_op exp
Rule 74    exp -> termino
Rule 75    exp -> exp sums termino
Rule 76    termino -> factor
Rule 77    termino -> termino multdiv factor
Rule 78    factor -> vcte
Rule 79    factor -> openpar megaexp closepar
Rule 80    factor -> unary_ops vcte
Rule 81    factor -> unary_ops openpar megaexp closepar
Rule 82    openpar -> OPENPAR
Rule 83    closepar -> CLOSEPAR
Rule 84    vcte -> id
Rule 85    id -> ID
Rule 86    id -> ID OPENBRAC exp CLOSEBRAC
Rule 87    id -> ID OPENBRAC exp CLOSEBRAC OPENBRAC exp CLOSEBRAC
Rule 88    vcte -> CTEI
Rule 89    vcte -> CTEF
Rule 90    vcte -> TRUE
Rule 91    vcte -> FALSE
Rule 92    vcte -> CTEC
Rule 93    boolean_op -> OR
Rule 94    boolean_op -> AND
Rule 95    logical_op -> GT
Rule 96    logical_op -> GTE
Rule 97    logical_op -> LT
Rule 98    logical_op -> LTE
Rule 99    logical_op -> NEQ
Rule 100   logical_op -> EQ
Rule 101   sums -> MINUS
Rule 102   sums -> PLUS
Rule 103   multdiv -> TIMES
Rule 104   multdiv -> DIVIDE
Rule 105   unary_ops -> MINUS
Rule 106   unary_ops -> PLUS
Rule 107   unary_ops -> DETERM
Rule 108   unary_ops -> TRANSPOSE
Rule 109   unary_ops -> INVERSE
Rule 110   empty -> <empty>

Terminals, with rules where they appear

AND                  : 94
ASSIGN               : 41 63
BOOL                 : 28
CHAR                 : 27
CLOSEBRAC            : 11 12 12 86 87 87
CLOSEPAR             : 1 16 42 48 53 59 62 67 83
COMMA                : 10 24 50 56 57 60
CTEC                 : 92
CTEF                 : 89
CTEI                 : 11 12 12 88
CTES                 : 54 56
DESDE                : 63
DETERM               : 107
DIVIDE               : 104
ENTONCES             : 43
EQ                   : 100
FALSE                : 91
FLOAT                : 26
FUNCION              : 16
GT                   : 95
GTE                  : 96
HACER                : 66
HASTA                : 65
HAZ                  : 69
ID                   : 1 7 10 17 18 21 24 49 59 60 64 85 86 87
INT                  : 25
INVERSE              : 109
LCURLYB              : 29 30
LT                   : 97
LTE                  : 98
MIENTRAS             : 68
MINUS                : 101 105
NEQ                  : 99
OPENBRAC             : 11 12 12 86 87 87
OPENPAR              : 1 16 42 48 53 59 62 67 82
OR                   : 93
PLUS                 : 102 106
PRINCIPAL            : 2
PROGRAMA             : 1
QUACKIN              : 59
QUACKOUT             : 53
RCURLYB              : 29 30
RETORNO              : 62
SEMICOLON            : 1 5 41 48 53 59 62
SI                   : 42
SINO                 : 47
TIMES                : 103
TRANSPOSE            : 108
TRUE                 : 90
VAR                  : 3
VOID                 : 18
error                : 

Nonterminals, with rules where they appear

asignacion           : 33
bloque               : 44 45 63 67
bloque_entonces      : 42
bloque_funcion       : 1 16
bloque_sino          : 44
boolean_op           : 71
closepar             : 79 81
condicion            : 34
declare_func         : 14
declare_func_params  : 16
declare_func_rec     : 1 14
declare_main         : 1
declare_vars         : 1 29
desde                : 39
dimensions           : 5 8
empty                : 4 6 9 13 15 20 23 32 46 51 58 61
entonces             : 42
escribe              : 37
estatuto             : 31
estatutos_rec        : 29 30 31
exp                  : 63 63 72 73 75 86 87 87
factor               : 76 77
forId                : 63
func_call_id         : 48
func_call_params     : 48 50 50
func_id              : 16
func_void            : 35
get_func_params      : 19
hacer                : 63
hasta                : 63
haz                  : 67
id                   : 41 84
lee                  : 38
logical_op           : 73
megaexp              : 41 42 52 55 57 62 67 71 79 81
mientras             : 67
mientras_estatuto    : 40
more_params          : 19 22
more_print           : 54 55
more_var_id          : 8 22
more_vars            : 5 8
multdiv              : 77
openpar              : 79 81
print_options        : 53
program_declaration  : 0
read_more            : 59 60
retorno              : 36
sino                 : 45
sums                 : 75
superexp             : 70 71 73
termino              : 74 75 77
tipo                 : 7 17 21 24
unary_ops            : 80 81
var_id               : 5
vars                 : 3 5
vcte                 : 78 80

Parsing method: LALR

state 0

    (0) S' -> . program_declaration
    (1) program_declaration -> . PROGRAMA ID SEMICOLON declare_vars declare_func_rec declare_main OPENPAR CLOSEPAR bloque_funcion

    PROGRAMA        shift and go to state 2

    program_declaration            shift and go to state 1

state 1

    (0) S' -> program_declaration .



state 2

    (1) program_declaration -> PROGRAMA . ID SEMICOLON declare_vars declare_func_rec declare_main OPENPAR CLOSEPAR bloque_funcion

    ID              shift and go to state 3


state 3

    (1) program_declaration -> PROGRAMA ID . SEMICOLON declare_vars declare_func_rec declare_main OPENPAR CLOSEPAR bloque_funcion

    SEMICOLON       shift and go to state 4


state 4

    (1) program_declaration -> PROGRAMA ID SEMICOLON . declare_vars declare_func_rec declare_main OPENPAR CLOSEPAR bloque_funcion
    (3) declare_vars -> . VAR vars
    (4) declare_vars -> . empty
    (110) empty -> .

    VAR             shift and go to state 6
    PRINCIPAL       reduce using rule 110 (empty -> .)
    FUNCION         reduce using rule 110 (empty -> .)

    declare_vars                   shift and go to state 5
    empty                          shift and go to state 7

state 5

    (1) program_declaration -> PROGRAMA ID SEMICOLON declare_vars . declare_func_rec declare_main OPENPAR CLOSEPAR bloque_funcion
    (14) declare_func_rec -> . declare_func_rec declare_func
    (15) declare_func_rec -> . empty
    (110) empty -> .

    PRINCIPAL       reduce using rule 110 (empty -> .)
    FUNCION         reduce using rule 110 (empty -> .)

    declare_func_rec               shift and go to state 8
    empty                          shift and go to state 9

state 6

    (3) declare_vars -> VAR . vars
    (5) vars -> . var_id dimensions more_vars SEMICOLON vars
    (6) vars -> . empty
    (7) var_id -> . tipo ID
    (110) empty -> .
    (25) tipo -> . INT
    (26) tipo -> . FLOAT
    (27) tipo -> . CHAR
    (28) tipo -> . BOOL

    PRINCIPAL       reduce using rule 110 (empty -> .)
    FUNCION         reduce using rule 110 (empty -> .)
    SI              reduce using rule 110 (empty -> .)
    RETORNO         reduce using rule 110 (empty -> .)
    QUACKOUT        reduce using rule 110 (empty -> .)
    QUACKIN         reduce using rule 110 (empty -> .)
    DESDE           reduce using rule 110 (empty -> .)
    ID              reduce using rule 110 (empty -> .)
    MIENTRAS        reduce using rule 110 (empty -> .)
    RCURLYB         reduce using rule 110 (empty -> .)
    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16
    BOOL            shift and go to state 17

    vars                           shift and go to state 10
    var_id                         shift and go to state 11
    empty                          shift and go to state 12
    tipo                           shift and go to state 13

state 7

    (4) declare_vars -> empty .

    PRINCIPAL       reduce using rule 4 (declare_vars -> empty .)
    FUNCION         reduce using rule 4 (declare_vars -> empty .)
    SI              reduce using rule 4 (declare_vars -> empty .)
    RETORNO         reduce using rule 4 (declare_vars -> empty .)
    QUACKOUT        reduce using rule 4 (declare_vars -> empty .)
    QUACKIN         reduce using rule 4 (declare_vars -> empty .)
    DESDE           reduce using rule 4 (declare_vars -> empty .)
    ID              reduce using rule 4 (declare_vars -> empty .)
    MIENTRAS        reduce using rule 4 (declare_vars -> empty .)
    RCURLYB         reduce using rule 4 (declare_vars -> empty .)


state 8

    (1) program_declaration -> PROGRAMA ID SEMICOLON declare_vars declare_func_rec . declare_main OPENPAR CLOSEPAR bloque_funcion
    (14) declare_func_rec -> declare_func_rec . declare_func
    (2) declare_main -> . PRINCIPAL
    (16) declare_func -> . FUNCION func_id OPENPAR declare_func_params CLOSEPAR bloque_funcion

    PRINCIPAL       shift and go to state 20
    FUNCION         shift and go to state 21

    declare_main                   shift and go to state 18
    declare_func                   shift and go to state 19

state 9

    (15) declare_func_rec -> empty .

    PRINCIPAL       reduce using rule 15 (declare_func_rec -> empty .)
    FUNCION         reduce using rule 15 (declare_func_rec -> empty .)


state 10

    (3) declare_vars -> VAR vars .

    PRINCIPAL       reduce using rule 3 (declare_vars -> VAR vars .)
    FUNCION         reduce using rule 3 (declare_vars -> VAR vars .)
    SI              reduce using rule 3 (declare_vars -> VAR vars .)
    RETORNO         reduce using rule 3 (declare_vars -> VAR vars .)
    QUACKOUT        reduce using rule 3 (declare_vars -> VAR vars .)
    QUACKIN         reduce using rule 3 (declare_vars -> VAR vars .)
    DESDE           reduce using rule 3 (declare_vars -> VAR vars .)
    ID              reduce using rule 3 (declare_vars -> VAR vars .)
    MIENTRAS        reduce using rule 3 (declare_vars -> VAR vars .)
    RCURLYB         reduce using rule 3 (declare_vars -> VAR vars .)


state 11

    (5) vars -> var_id . dimensions more_vars SEMICOLON vars
    (11) dimensions -> . OPENBRAC CTEI CLOSEBRAC
    (12) dimensions -> . OPENBRAC CTEI CLOSEBRAC OPENBRAC CTEI CLOSEBRAC
    (13) dimensions -> . empty
    (110) empty -> .

    OPENBRAC        shift and go to state 23
    COMMA           reduce using rule 110 (empty -> .)
    SEMICOLON       reduce using rule 110 (empty -> .)

    dimensions                     shift and go to state 22
    empty                          shift and go to state 24

state 12

    (6) vars -> empty .

    PRINCIPAL       reduce using rule 6 (vars -> empty .)
    FUNCION         reduce using rule 6 (vars -> empty .)
    SI              reduce using rule 6 (vars -> empty .)
    RETORNO         reduce using rule 6 (vars -> empty .)
    QUACKOUT        reduce using rule 6 (vars -> empty .)
    QUACKIN         reduce using rule 6 (vars -> empty .)
    DESDE           reduce using rule 6 (vars -> empty .)
    ID              reduce using rule 6 (vars -> empty .)
    MIENTRAS        reduce using rule 6 (vars -> empty .)
    RCURLYB         reduce using rule 6 (vars -> empty .)


state 13

    (7) var_id -> tipo . ID

    ID              shift and go to state 25


state 14

    (25) tipo -> INT .

    ID              reduce using rule 25 (tipo -> INT .)


state 15

    (26) tipo -> FLOAT .

    ID              reduce using rule 26 (tipo -> FLOAT .)


state 16

    (27) tipo -> CHAR .

    ID              reduce using rule 27 (tipo -> CHAR .)


state 17

    (28) tipo -> BOOL .

    ID              reduce using rule 28 (tipo -> BOOL .)


state 18

    (1) program_declaration -> PROGRAMA ID SEMICOLON declare_vars declare_func_rec declare_main . OPENPAR CLOSEPAR bloque_funcion

    OPENPAR         shift and go to state 26


state 19

    (14) declare_func_rec -> declare_func_rec declare_func .

    PRINCIPAL       reduce using rule 14 (declare_func_rec -> declare_func_rec declare_func .)
    FUNCION         reduce using rule 14 (declare_func_rec -> declare_func_rec declare_func .)


state 20

    (2) declare_main -> PRINCIPAL .

    OPENPAR         reduce using rule 2 (declare_main -> PRINCIPAL .)


state 21

    (16) declare_func -> FUNCION . func_id OPENPAR declare_func_params CLOSEPAR bloque_funcion
    (17) func_id -> . tipo ID
    (18) func_id -> . VOID ID
    (25) tipo -> . INT
    (26) tipo -> . FLOAT
    (27) tipo -> . CHAR
    (28) tipo -> . BOOL

    VOID            shift and go to state 29
    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16
    BOOL            shift and go to state 17

    func_id                        shift and go to state 27
    tipo                           shift and go to state 28

state 22

    (5) vars -> var_id dimensions . more_vars SEMICOLON vars
    (8) more_vars -> . more_var_id dimensions more_vars
    (9) more_vars -> . empty
    (10) more_var_id -> . COMMA ID
    (24) more_var_id -> . COMMA tipo ID
    (110) empty -> .

    COMMA           shift and go to state 33
    SEMICOLON       reduce using rule 110 (empty -> .)

    more_vars                      shift and go to state 30
    more_var_id                    shift and go to state 31
    empty                          shift and go to state 32

state 23

    (11) dimensions -> OPENBRAC . CTEI CLOSEBRAC
    (12) dimensions -> OPENBRAC . CTEI CLOSEBRAC OPENBRAC CTEI CLOSEBRAC

    CTEI            shift and go to state 34


state 24

    (13) dimensions -> empty .

    COMMA           reduce using rule 13 (dimensions -> empty .)
    SEMICOLON       reduce using rule 13 (dimensions -> empty .)


state 25

    (7) var_id -> tipo ID .

    OPENBRAC        reduce using rule 7 (var_id -> tipo ID .)
    COMMA           reduce using rule 7 (var_id -> tipo ID .)
    SEMICOLON       reduce using rule 7 (var_id -> tipo ID .)


state 26

    (1) program_declaration -> PROGRAMA ID SEMICOLON declare_vars declare_func_rec declare_main OPENPAR . CLOSEPAR bloque_funcion

    CLOSEPAR        shift and go to state 35


state 27

    (16) declare_func -> FUNCION func_id . OPENPAR declare_func_params CLOSEPAR bloque_funcion

    OPENPAR         shift and go to state 36


state 28

    (17) func_id -> tipo . ID

    ID              shift and go to state 37


state 29

    (18) func_id -> VOID . ID

    ID              shift and go to state 38


state 30

    (5) vars -> var_id dimensions more_vars . SEMICOLON vars

    SEMICOLON       shift and go to state 39


state 31

    (8) more_vars -> more_var_id . dimensions more_vars
    (11) dimensions -> . OPENBRAC CTEI CLOSEBRAC
    (12) dimensions -> . OPENBRAC CTEI CLOSEBRAC OPENBRAC CTEI CLOSEBRAC
    (13) dimensions -> . empty
    (110) empty -> .

    OPENBRAC        shift and go to state 23
    COMMA           reduce using rule 110 (empty -> .)
    SEMICOLON       reduce using rule 110 (empty -> .)

    dimensions                     shift and go to state 40
    empty                          shift and go to state 24

state 32

    (9) more_vars -> empty .

    SEMICOLON       reduce using rule 9 (more_vars -> empty .)


state 33

    (10) more_var_id -> COMMA . ID
    (24) more_var_id -> COMMA . tipo ID
    (25) tipo -> . INT
    (26) tipo -> . FLOAT
    (27) tipo -> . CHAR
    (28) tipo -> . BOOL

    ID              shift and go to state 41
    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16
    BOOL            shift and go to state 17

    tipo                           shift and go to state 42

state 34

    (11) dimensions -> OPENBRAC CTEI . CLOSEBRAC
    (12) dimensions -> OPENBRAC CTEI . CLOSEBRAC OPENBRAC CTEI CLOSEBRAC

    CLOSEBRAC       shift and go to state 43


state 35

    (1) program_declaration -> PROGRAMA ID SEMICOLON declare_vars declare_func_rec declare_main OPENPAR CLOSEPAR . bloque_funcion
    (29) bloque_funcion -> . LCURLYB declare_vars estatutos_rec RCURLYB

    LCURLYB         shift and go to state 45

    bloque_funcion                 shift and go to state 44

state 36

    (16) declare_func -> FUNCION func_id OPENPAR . declare_func_params CLOSEPAR bloque_funcion
    (19) declare_func_params -> . get_func_params more_params
    (20) declare_func_params -> . empty
    (21) get_func_params -> . tipo ID
    (110) empty -> .
    (25) tipo -> . INT
    (26) tipo -> . FLOAT
    (27) tipo -> . CHAR
    (28) tipo -> . BOOL

    CLOSEPAR        reduce using rule 110 (empty -> .)
    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16
    BOOL            shift and go to state 17

    declare_func_params            shift and go to state 46
    get_func_params                shift and go to state 47
    empty                          shift and go to state 48
    tipo                           shift and go to state 49

state 37

    (17) func_id -> tipo ID .

    OPENPAR         reduce using rule 17 (func_id -> tipo ID .)


state 38

    (18) func_id -> VOID ID .

    OPENPAR         reduce using rule 18 (func_id -> VOID ID .)


state 39

    (5) vars -> var_id dimensions more_vars SEMICOLON . vars
    (5) vars -> . var_id dimensions more_vars SEMICOLON vars
    (6) vars -> . empty
    (7) var_id -> . tipo ID
    (110) empty -> .
    (25) tipo -> . INT
    (26) tipo -> . FLOAT
    (27) tipo -> . CHAR
    (28) tipo -> . BOOL

    PRINCIPAL       reduce using rule 110 (empty -> .)
    FUNCION         reduce using rule 110 (empty -> .)
    SI              reduce using rule 110 (empty -> .)
    RETORNO         reduce using rule 110 (empty -> .)
    QUACKOUT        reduce using rule 110 (empty -> .)
    QUACKIN         reduce using rule 110 (empty -> .)
    DESDE           reduce using rule 110 (empty -> .)
    ID              reduce using rule 110 (empty -> .)
    MIENTRAS        reduce using rule 110 (empty -> .)
    RCURLYB         reduce using rule 110 (empty -> .)
    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16
    BOOL            shift and go to state 17

    var_id                         shift and go to state 11
    vars                           shift and go to state 50
    empty                          shift and go to state 12
    tipo                           shift and go to state 13

state 40

    (8) more_vars -> more_var_id dimensions . more_vars
    (8) more_vars -> . more_var_id dimensions more_vars
    (9) more_vars -> . empty
    (10) more_var_id -> . COMMA ID
    (24) more_var_id -> . COMMA tipo ID
    (110) empty -> .

    COMMA           shift and go to state 33
    SEMICOLON       reduce using rule 110 (empty -> .)

    more_var_id                    shift and go to state 31
    more_vars                      shift and go to state 51
    empty                          shift and go to state 32

state 41

    (10) more_var_id -> COMMA ID .

    OPENBRAC        reduce using rule 10 (more_var_id -> COMMA ID .)
    COMMA           reduce using rule 10 (more_var_id -> COMMA ID .)
    SEMICOLON       reduce using rule 10 (more_var_id -> COMMA ID .)
    CLOSEPAR        reduce using rule 10 (more_var_id -> COMMA ID .)


state 42

    (24) more_var_id -> COMMA tipo . ID

    ID              shift and go to state 52


state 43

    (11) dimensions -> OPENBRAC CTEI CLOSEBRAC .
    (12) dimensions -> OPENBRAC CTEI CLOSEBRAC . OPENBRAC CTEI CLOSEBRAC

    COMMA           reduce using rule 11 (dimensions -> OPENBRAC CTEI CLOSEBRAC .)
    SEMICOLON       reduce using rule 11 (dimensions -> OPENBRAC CTEI CLOSEBRAC .)
    OPENBRAC        shift and go to state 53


state 44

    (1) program_declaration -> PROGRAMA ID SEMICOLON declare_vars declare_func_rec declare_main OPENPAR CLOSEPAR bloque_funcion .

    $end            reduce using rule 1 (program_declaration -> PROGRAMA ID SEMICOLON declare_vars declare_func_rec declare_main OPENPAR CLOSEPAR bloque_funcion .)


state 45

    (29) bloque_funcion -> LCURLYB . declare_vars estatutos_rec RCURLYB
    (3) declare_vars -> . VAR vars
    (4) declare_vars -> . empty
    (110) empty -> .

    VAR             shift and go to state 6
    SI              reduce using rule 110 (empty -> .)
    RETORNO         reduce using rule 110 (empty -> .)
    QUACKOUT        reduce using rule 110 (empty -> .)
    QUACKIN         reduce using rule 110 (empty -> .)
    DESDE           reduce using rule 110 (empty -> .)
    ID              reduce using rule 110 (empty -> .)
    MIENTRAS        reduce using rule 110 (empty -> .)
    RCURLYB         reduce using rule 110 (empty -> .)

    declare_vars                   shift and go to state 54
    empty                          shift and go to state 7

state 46

    (16) declare_func -> FUNCION func_id OPENPAR declare_func_params . CLOSEPAR bloque_funcion

    CLOSEPAR        shift and go to state 55


state 47

    (19) declare_func_params -> get_func_params . more_params
    (22) more_params -> . more_var_id more_params
    (23) more_params -> . empty
    (10) more_var_id -> . COMMA ID
    (24) more_var_id -> . COMMA tipo ID
    (110) empty -> .

    COMMA           shift and go to state 33
    CLOSEPAR        reduce using rule 110 (empty -> .)

    more_params                    shift and go to state 56
    more_var_id                    shift and go to state 57
    empty                          shift and go to state 58

state 48

    (20) declare_func_params -> empty .

    CLOSEPAR        reduce using rule 20 (declare_func_params -> empty .)


state 49

    (21) get_func_params -> tipo . ID

    ID              shift and go to state 59


state 50

    (5) vars -> var_id dimensions more_vars SEMICOLON vars .

    PRINCIPAL       reduce using rule 5 (vars -> var_id dimensions more_vars SEMICOLON vars .)
    FUNCION         reduce using rule 5 (vars -> var_id dimensions more_vars SEMICOLON vars .)
    SI              reduce using rule 5 (vars -> var_id dimensions more_vars SEMICOLON vars .)
    RETORNO         reduce using rule 5 (vars -> var_id dimensions more_vars SEMICOLON vars .)
    QUACKOUT        reduce using rule 5 (vars -> var_id dimensions more_vars SEMICOLON vars .)
    QUACKIN         reduce using rule 5 (vars -> var_id dimensions more_vars SEMICOLON vars .)
    DESDE           reduce using rule 5 (vars -> var_id dimensions more_vars SEMICOLON vars .)
    ID              reduce using rule 5 (vars -> var_id dimensions more_vars SEMICOLON vars .)
    MIENTRAS        reduce using rule 5 (vars -> var_id dimensions more_vars SEMICOLON vars .)
    RCURLYB         reduce using rule 5 (vars -> var_id dimensions more_vars SEMICOLON vars .)


state 51

    (8) more_vars -> more_var_id dimensions more_vars .

    SEMICOLON       reduce using rule 8 (more_vars -> more_var_id dimensions more_vars .)


state 52

    (24) more_var_id -> COMMA tipo ID .

    OPENBRAC        reduce using rule 24 (more_var_id -> COMMA tipo ID .)
    COMMA           reduce using rule 24 (more_var_id -> COMMA tipo ID .)
    SEMICOLON       reduce using rule 24 (more_var_id -> COMMA tipo ID .)
    CLOSEPAR        reduce using rule 24 (more_var_id -> COMMA tipo ID .)


state 53

    (12) dimensions -> OPENBRAC CTEI CLOSEBRAC OPENBRAC . CTEI CLOSEBRAC

    CTEI            shift and go to state 60


state 54

    (29) bloque_funcion -> LCURLYB declare_vars . estatutos_rec RCURLYB
    (31) estatutos_rec -> . estatuto estatutos_rec
    (32) estatutos_rec -> . empty
    (33) estatuto -> . asignacion
    (34) estatuto -> . condicion
    (35) estatuto -> . func_void
    (36) estatuto -> . retorno
    (37) estatuto -> . escribe
    (38) estatuto -> . lee
    (39) estatuto -> . desde
    (40) estatuto -> . mientras_estatuto
    (110) empty -> .
    (41) asignacion -> . id ASSIGN megaexp SEMICOLON
    (42) condicion -> . SI OPENPAR megaexp CLOSEPAR entonces bloque_entonces
    (48) func_void -> . func_call_id OPENPAR func_call_params CLOSEPAR SEMICOLON
    (62) retorno -> . RETORNO OPENPAR megaexp CLOSEPAR SEMICOLON
    (53) escribe -> . QUACKOUT OPENPAR print_options CLOSEPAR SEMICOLON
    (59) lee -> . QUACKIN OPENPAR ID read_more CLOSEPAR SEMICOLON
    (63) desde -> . DESDE forId ASSIGN exp hasta exp hacer bloque
    (67) mientras_estatuto -> . mientras OPENPAR megaexp CLOSEPAR haz bloque
    (85) id -> . ID
    (86) id -> . ID OPENBRAC exp CLOSEBRAC
    (87) id -> . ID OPENBRAC exp CLOSEBRAC OPENBRAC exp CLOSEBRAC
    (49) func_call_id -> . ID
    (68) mientras -> . MIENTRAS

    RCURLYB         reduce using rule 110 (empty -> .)
    SI              shift and go to state 73
    RETORNO         shift and go to state 75
    QUACKOUT        shift and go to state 76
    QUACKIN         shift and go to state 77
    DESDE           shift and go to state 79
    ID              shift and go to state 78
    MIENTRAS        shift and go to state 81

    estatutos_rec                  shift and go to state 61
    estatuto                       shift and go to state 62
    empty                          shift and go to state 63
    asignacion                     shift and go to state 64
    condicion                      shift and go to state 65
    func_void                      shift and go to state 66
    retorno                        shift and go to state 67
    escribe                        shift and go to state 68
    lee                            shift and go to state 69
    desde                          shift and go to state 70
    mientras_estatuto              shift and go to state 71
    id                             shift and go to state 72
    func_call_id                   shift and go to state 74
    mientras                       shift and go to state 80

state 55

    (16) declare_func -> FUNCION func_id OPENPAR declare_func_params CLOSEPAR . bloque_funcion
    (29) bloque_funcion -> . LCURLYB declare_vars estatutos_rec RCURLYB

    LCURLYB         shift and go to state 45

    bloque_funcion                 shift and go to state 82

state 56

    (19) declare_func_params -> get_func_params more_params .

    CLOSEPAR        reduce using rule 19 (declare_func_params -> get_func_params more_params .)


state 57

    (22) more_params -> more_var_id . more_params
    (22) more_params -> . more_var_id more_params
    (23) more_params -> . empty
    (10) more_var_id -> . COMMA ID
    (24) more_var_id -> . COMMA tipo ID
    (110) empty -> .

    COMMA           shift and go to state 33
    CLOSEPAR        reduce using rule 110 (empty -> .)

    more_var_id                    shift and go to state 57
    more_params                    shift and go to state 83
    empty                          shift and go to state 58

state 58

    (23) more_params -> empty .

    CLOSEPAR        reduce using rule 23 (more_params -> empty .)


state 59

    (21) get_func_params -> tipo ID .

    COMMA           reduce using rule 21 (get_func_params -> tipo ID .)
    CLOSEPAR        reduce using rule 21 (get_func_params -> tipo ID .)


state 60

    (12) dimensions -> OPENBRAC CTEI CLOSEBRAC OPENBRAC CTEI . CLOSEBRAC

    CLOSEBRAC       shift and go to state 84


state 61

    (29) bloque_funcion -> LCURLYB declare_vars estatutos_rec . RCURLYB

    RCURLYB         shift and go to state 85


state 62

    (31) estatutos_rec -> estatuto . estatutos_rec
    (31) estatutos_rec -> . estatuto estatutos_rec
    (32) estatutos_rec -> . empty
    (33) estatuto -> . asignacion
    (34) estatuto -> . condicion
    (35) estatuto -> . func_void
    (36) estatuto -> . retorno
    (37) estatuto -> . escribe
    (38) estatuto -> . lee
    (39) estatuto -> . desde
    (40) estatuto -> . mientras_estatuto
    (110) empty -> .
    (41) asignacion -> . id ASSIGN megaexp SEMICOLON
    (42) condicion -> . SI OPENPAR megaexp CLOSEPAR entonces bloque_entonces
    (48) func_void -> . func_call_id OPENPAR func_call_params CLOSEPAR SEMICOLON
    (62) retorno -> . RETORNO OPENPAR megaexp CLOSEPAR SEMICOLON
    (53) escribe -> . QUACKOUT OPENPAR print_options CLOSEPAR SEMICOLON
    (59) lee -> . QUACKIN OPENPAR ID read_more CLOSEPAR SEMICOLON
    (63) desde -> . DESDE forId ASSIGN exp hasta exp hacer bloque
    (67) mientras_estatuto -> . mientras OPENPAR megaexp CLOSEPAR haz bloque
    (85) id -> . ID
    (86) id -> . ID OPENBRAC exp CLOSEBRAC
    (87) id -> . ID OPENBRAC exp CLOSEBRAC OPENBRAC exp CLOSEBRAC
    (49) func_call_id -> . ID
    (68) mientras -> . MIENTRAS

    RCURLYB         reduce using rule 110 (empty -> .)
    SI              shift and go to state 73
    RETORNO         shift and go to state 75
    QUACKOUT        shift and go to state 76
    QUACKIN         shift and go to state 77
    DESDE           shift and go to state 79
    ID              shift and go to state 78
    MIENTRAS        shift and go to state 81

    estatuto                       shift and go to state 62
    estatutos_rec                  shift and go to state 86
    empty                          shift and go to state 63
    asignacion                     shift and go to state 64
    condicion                      shift and go to state 65
    func_void                      shift and go to state 66
    retorno                        shift and go to state 67
    escribe                        shift and go to state 68
    lee                            shift and go to state 69
    desde                          shift and go to state 70
    mientras_estatuto              shift and go to state 71
    id                             shift and go to state 72
    func_call_id                   shift and go to state 74
    mientras                       shift and go to state 80

state 63

    (32) estatutos_rec -> empty .

    RCURLYB         reduce using rule 32 (estatutos_rec -> empty .)


state 64

    (33) estatuto -> asignacion .

    SI              reduce using rule 33 (estatuto -> asignacion .)
    RETORNO         reduce using rule 33 (estatuto -> asignacion .)
    QUACKOUT        reduce using rule 33 (estatuto -> asignacion .)
    QUACKIN         reduce using rule 33 (estatuto -> asignacion .)
    DESDE           reduce using rule 33 (estatuto -> asignacion .)
    ID              reduce using rule 33 (estatuto -> asignacion .)
    MIENTRAS        reduce using rule 33 (estatuto -> asignacion .)
    RCURLYB         reduce using rule 33 (estatuto -> asignacion .)


state 65

    (34) estatuto -> condicion .

    SI              reduce using rule 34 (estatuto -> condicion .)
    RETORNO         reduce using rule 34 (estatuto -> condicion .)
    QUACKOUT        reduce using rule 34 (estatuto -> condicion .)
    QUACKIN         reduce using rule 34 (estatuto -> condicion .)
    DESDE           reduce using rule 34 (estatuto -> condicion .)
    ID              reduce using rule 34 (estatuto -> condicion .)
    MIENTRAS        reduce using rule 34 (estatuto -> condicion .)
    RCURLYB         reduce using rule 34 (estatuto -> condicion .)


state 66

    (35) estatuto -> func_void .

    SI              reduce using rule 35 (estatuto -> func_void .)
    RETORNO         reduce using rule 35 (estatuto -> func_void .)
    QUACKOUT        reduce using rule 35 (estatuto -> func_void .)
    QUACKIN         reduce using rule 35 (estatuto -> func_void .)
    DESDE           reduce using rule 35 (estatuto -> func_void .)
    ID              reduce using rule 35 (estatuto -> func_void .)
    MIENTRAS        reduce using rule 35 (estatuto -> func_void .)
    RCURLYB         reduce using rule 35 (estatuto -> func_void .)


state 67

    (36) estatuto -> retorno .

    SI              reduce using rule 36 (estatuto -> retorno .)
    RETORNO         reduce using rule 36 (estatuto -> retorno .)
    QUACKOUT        reduce using rule 36 (estatuto -> retorno .)
    QUACKIN         reduce using rule 36 (estatuto -> retorno .)
    DESDE           reduce using rule 36 (estatuto -> retorno .)
    ID              reduce using rule 36 (estatuto -> retorno .)
    MIENTRAS        reduce using rule 36 (estatuto -> retorno .)
    RCURLYB         reduce using rule 36 (estatuto -> retorno .)


state 68

    (37) estatuto -> escribe .

    SI              reduce using rule 37 (estatuto -> escribe .)
    RETORNO         reduce using rule 37 (estatuto -> escribe .)
    QUACKOUT        reduce using rule 37 (estatuto -> escribe .)
    QUACKIN         reduce using rule 37 (estatuto -> escribe .)
    DESDE           reduce using rule 37 (estatuto -> escribe .)
    ID              reduce using rule 37 (estatuto -> escribe .)
    MIENTRAS        reduce using rule 37 (estatuto -> escribe .)
    RCURLYB         reduce using rule 37 (estatuto -> escribe .)


state 69

    (38) estatuto -> lee .

    SI              reduce using rule 38 (estatuto -> lee .)
    RETORNO         reduce using rule 38 (estatuto -> lee .)
    QUACKOUT        reduce using rule 38 (estatuto -> lee .)
    QUACKIN         reduce using rule 38 (estatuto -> lee .)
    DESDE           reduce using rule 38 (estatuto -> lee .)
    ID              reduce using rule 38 (estatuto -> lee .)
    MIENTRAS        reduce using rule 38 (estatuto -> lee .)
    RCURLYB         reduce using rule 38 (estatuto -> lee .)


state 70

    (39) estatuto -> desde .

    SI              reduce using rule 39 (estatuto -> desde .)
    RETORNO         reduce using rule 39 (estatuto -> desde .)
    QUACKOUT        reduce using rule 39 (estatuto -> desde .)
    QUACKIN         reduce using rule 39 (estatuto -> desde .)
    DESDE           reduce using rule 39 (estatuto -> desde .)
    ID              reduce using rule 39 (estatuto -> desde .)
    MIENTRAS        reduce using rule 39 (estatuto -> desde .)
    RCURLYB         reduce using rule 39 (estatuto -> desde .)


state 71

    (40) estatuto -> mientras_estatuto .

    SI              reduce using rule 40 (estatuto -> mientras_estatuto .)
    RETORNO         reduce using rule 40 (estatuto -> mientras_estatuto .)
    QUACKOUT        reduce using rule 40 (estatuto -> mientras_estatuto .)
    QUACKIN         reduce using rule 40 (estatuto -> mientras_estatuto .)
    DESDE           reduce using rule 40 (estatuto -> mientras_estatuto .)
    ID              reduce using rule 40 (estatuto -> mientras_estatuto .)
    MIENTRAS        reduce using rule 40 (estatuto -> mientras_estatuto .)
    RCURLYB         reduce using rule 40 (estatuto -> mientras_estatuto .)


state 72

    (41) asignacion -> id . ASSIGN megaexp SEMICOLON

    ASSIGN          shift and go to state 87


state 73

    (42) condicion -> SI . OPENPAR megaexp CLOSEPAR entonces bloque_entonces

    OPENPAR         shift and go to state 88


state 74

    (48) func_void -> func_call_id . OPENPAR func_call_params CLOSEPAR SEMICOLON

    OPENPAR         shift and go to state 89


state 75

    (62) retorno -> RETORNO . OPENPAR megaexp CLOSEPAR SEMICOLON

    OPENPAR         shift and go to state 90


state 76

    (53) escribe -> QUACKOUT . OPENPAR print_options CLOSEPAR SEMICOLON

    OPENPAR         shift and go to state 91


state 77

    (59) lee -> QUACKIN . OPENPAR ID read_more CLOSEPAR SEMICOLON

    OPENPAR         shift and go to state 92


state 78

    (85) id -> ID .
    (86) id -> ID . OPENBRAC exp CLOSEBRAC
    (87) id -> ID . OPENBRAC exp CLOSEBRAC OPENBRAC exp CLOSEBRAC
    (49) func_call_id -> ID .

    ASSIGN          reduce using rule 85 (id -> ID .)
    OPENBRAC        shift and go to state 93
    OPENPAR         reduce using rule 49 (func_call_id -> ID .)


state 79

    (63) desde -> DESDE . forId ASSIGN exp hasta exp hacer bloque
    (64) forId -> . ID

    ID              shift and go to state 95

    forId                          shift and go to state 94

state 80

    (67) mientras_estatuto -> mientras . OPENPAR megaexp CLOSEPAR haz bloque

    OPENPAR         shift and go to state 96


state 81

    (68) mientras -> MIENTRAS .

    OPENPAR         reduce using rule 68 (mientras -> MIENTRAS .)


state 82

    (16) declare_func -> FUNCION func_id OPENPAR declare_func_params CLOSEPAR bloque_funcion .

    PRINCIPAL       reduce using rule 16 (declare_func -> FUNCION func_id OPENPAR declare_func_params CLOSEPAR bloque_funcion .)
    FUNCION         reduce using rule 16 (declare_func -> FUNCION func_id OPENPAR declare_func_params CLOSEPAR bloque_funcion .)


state 83

    (22) more_params -> more_var_id more_params .

    CLOSEPAR        reduce using rule 22 (more_params -> more_var_id more_params .)


state 84

    (12) dimensions -> OPENBRAC CTEI CLOSEBRAC OPENBRAC CTEI CLOSEBRAC .

    COMMA           reduce using rule 12 (dimensions -> OPENBRAC CTEI CLOSEBRAC OPENBRAC CTEI CLOSEBRAC .)
    SEMICOLON       reduce using rule 12 (dimensions -> OPENBRAC CTEI CLOSEBRAC OPENBRAC CTEI CLOSEBRAC .)


state 85

    (29) bloque_funcion -> LCURLYB declare_vars estatutos_rec RCURLYB .

    $end            reduce using rule 29 (bloque_funcion -> LCURLYB declare_vars estatutos_rec RCURLYB .)
    PRINCIPAL       reduce using rule 29 (bloque_funcion -> LCURLYB declare_vars estatutos_rec RCURLYB .)
    FUNCION         reduce using rule 29 (bloque_funcion -> LCURLYB declare_vars estatutos_rec RCURLYB .)


state 86

    (31) estatutos_rec -> estatuto estatutos_rec .

    RCURLYB         reduce using rule 31 (estatutos_rec -> estatuto estatutos_rec .)


state 87

    (41) asignacion -> id ASSIGN . megaexp SEMICOLON
    (70) megaexp -> . superexp
    (71) megaexp -> . megaexp boolean_op superexp
    (72) superexp -> . exp
    (73) superexp -> . superexp logical_op exp
    (74) exp -> . termino
    (75) exp -> . exp sums termino
    (76) termino -> . factor
    (77) termino -> . termino multdiv factor
    (78) factor -> . vcte
    (79) factor -> . openpar megaexp closepar
    (80) factor -> . unary_ops vcte
    (81) factor -> . unary_ops openpar megaexp closepar
    (84) vcte -> . id
    (88) vcte -> . CTEI
    (89) vcte -> . CTEF
    (90) vcte -> . TRUE
    (91) vcte -> . FALSE
    (92) vcte -> . CTEC
    (82) openpar -> . OPENPAR
    (105) unary_ops -> . MINUS
    (106) unary_ops -> . PLUS
    (107) unary_ops -> . DETERM
    (108) unary_ops -> . TRANSPOSE
    (109) unary_ops -> . INVERSE
    (85) id -> . ID
    (86) id -> . ID OPENBRAC exp CLOSEBRAC
    (87) id -> . ID OPENBRAC exp CLOSEBRAC OPENBRAC exp CLOSEBRAC

    CTEI            shift and go to state 106
    CTEF            shift and go to state 107
    TRUE            shift and go to state 108
    FALSE           shift and go to state 109
    CTEC            shift and go to state 110
    OPENPAR         shift and go to state 111
    MINUS           shift and go to state 112
    PLUS            shift and go to state 113
    DETERM          shift and go to state 114
    TRANSPOSE       shift and go to state 115
    INVERSE         shift and go to state 116
    ID              shift and go to state 117

    id                             shift and go to state 97
    megaexp                        shift and go to state 98
    superexp                       shift and go to state 99
    exp                            shift and go to state 100
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    vcte                           shift and go to state 103
    openpar                        shift and go to state 104
    unary_ops                      shift and go to state 105

state 88

    (42) condicion -> SI OPENPAR . megaexp CLOSEPAR entonces bloque_entonces
    (70) megaexp -> . superexp
    (71) megaexp -> . megaexp boolean_op superexp
    (72) superexp -> . exp
    (73) superexp -> . superexp logical_op exp
    (74) exp -> . termino
    (75) exp -> . exp sums termino
    (76) termino -> . factor
    (77) termino -> . termino multdiv factor
    (78) factor -> . vcte
    (79) factor -> . openpar megaexp closepar
    (80) factor -> . unary_ops vcte
    (81) factor -> . unary_ops openpar megaexp closepar
    (84) vcte -> . id
    (88) vcte -> . CTEI
    (89) vcte -> . CTEF
    (90) vcte -> . TRUE
    (91) vcte -> . FALSE
    (92) vcte -> . CTEC
    (82) openpar -> . OPENPAR
    (105) unary_ops -> . MINUS
    (106) unary_ops -> . PLUS
    (107) unary_ops -> . DETERM
    (108) unary_ops -> . TRANSPOSE
    (109) unary_ops -> . INVERSE
    (85) id -> . ID
    (86) id -> . ID OPENBRAC exp CLOSEBRAC
    (87) id -> . ID OPENBRAC exp CLOSEBRAC OPENBRAC exp CLOSEBRAC

    CTEI            shift and go to state 106
    CTEF            shift and go to state 107
    TRUE            shift and go to state 108
    FALSE           shift and go to state 109
    CTEC            shift and go to state 110
    OPENPAR         shift and go to state 111
    MINUS           shift and go to state 112
    PLUS            shift and go to state 113
    DETERM          shift and go to state 114
    TRANSPOSE       shift and go to state 115
    INVERSE         shift and go to state 116
    ID              shift and go to state 117

    megaexp                        shift and go to state 118
    superexp                       shift and go to state 99
    exp                            shift and go to state 100
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    vcte                           shift and go to state 103
    openpar                        shift and go to state 104
    unary_ops                      shift and go to state 105
    id                             shift and go to state 97

state 89

    (48) func_void -> func_call_id OPENPAR . func_call_params CLOSEPAR SEMICOLON
    (50) func_call_params -> . func_call_params COMMA func_call_params
    (51) func_call_params -> . empty
    (52) func_call_params -> . megaexp
    (110) empty -> .
    (70) megaexp -> . superexp
    (71) megaexp -> . megaexp boolean_op superexp
    (72) superexp -> . exp
    (73) superexp -> . superexp logical_op exp
    (74) exp -> . termino
    (75) exp -> . exp sums termino
    (76) termino -> . factor
    (77) termino -> . termino multdiv factor
    (78) factor -> . vcte
    (79) factor -> . openpar megaexp closepar
    (80) factor -> . unary_ops vcte
    (81) factor -> . unary_ops openpar megaexp closepar
    (84) vcte -> . id
    (88) vcte -> . CTEI
    (89) vcte -> . CTEF
    (90) vcte -> . TRUE
    (91) vcte -> . FALSE
    (92) vcte -> . CTEC
    (82) openpar -> . OPENPAR
    (105) unary_ops -> . MINUS
    (106) unary_ops -> . PLUS
    (107) unary_ops -> . DETERM
    (108) unary_ops -> . TRANSPOSE
    (109) unary_ops -> . INVERSE
    (85) id -> . ID
    (86) id -> . ID OPENBRAC exp CLOSEBRAC
    (87) id -> . ID OPENBRAC exp CLOSEBRAC OPENBRAC exp CLOSEBRAC

    CLOSEPAR        reduce using rule 110 (empty -> .)
    COMMA           reduce using rule 110 (empty -> .)
    CTEI            shift and go to state 106
    CTEF            shift and go to state 107
    TRUE            shift and go to state 108
    FALSE           shift and go to state 109
    CTEC            shift and go to state 110
    OPENPAR         shift and go to state 111
    MINUS           shift and go to state 112
    PLUS            shift and go to state 113
    DETERM          shift and go to state 114
    TRANSPOSE       shift and go to state 115
    INVERSE         shift and go to state 116
    ID              shift and go to state 117

    func_call_params               shift and go to state 119
    empty                          shift and go to state 120
    megaexp                        shift and go to state 121
    superexp                       shift and go to state 99
    exp                            shift and go to state 100
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    vcte                           shift and go to state 103
    openpar                        shift and go to state 104
    unary_ops                      shift and go to state 105
    id                             shift and go to state 97

state 90

    (62) retorno -> RETORNO OPENPAR . megaexp CLOSEPAR SEMICOLON
    (70) megaexp -> . superexp
    (71) megaexp -> . megaexp boolean_op superexp
    (72) superexp -> . exp
    (73) superexp -> . superexp logical_op exp
    (74) exp -> . termino
    (75) exp -> . exp sums termino
    (76) termino -> . factor
    (77) termino -> . termino multdiv factor
    (78) factor -> . vcte
    (79) factor -> . openpar megaexp closepar
    (80) factor -> . unary_ops vcte
    (81) factor -> . unary_ops openpar megaexp closepar
    (84) vcte -> . id
    (88) vcte -> . CTEI
    (89) vcte -> . CTEF
    (90) vcte -> . TRUE
    (91) vcte -> . FALSE
    (92) vcte -> . CTEC
    (82) openpar -> . OPENPAR
    (105) unary_ops -> . MINUS
    (106) unary_ops -> . PLUS
    (107) unary_ops -> . DETERM
    (108) unary_ops -> . TRANSPOSE
    (109) unary_ops -> . INVERSE
    (85) id -> . ID
    (86) id -> . ID OPENBRAC exp CLOSEBRAC
    (87) id -> . ID OPENBRAC exp CLOSEBRAC OPENBRAC exp CLOSEBRAC

    CTEI            shift and go to state 106
    CTEF            shift and go to state 107
    TRUE            shift and go to state 108
    FALSE           shift and go to state 109
    CTEC            shift and go to state 110
    OPENPAR         shift and go to state 111
    MINUS           shift and go to state 112
    PLUS            shift and go to state 113
    DETERM          shift and go to state 114
    TRANSPOSE       shift and go to state 115
    INVERSE         shift and go to state 116
    ID              shift and go to state 117

    megaexp                        shift and go to state 122
    superexp                       shift and go to state 99
    exp                            shift and go to state 100
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    vcte                           shift and go to state 103
    openpar                        shift and go to state 104
    unary_ops                      shift and go to state 105
    id                             shift and go to state 97

state 91

    (53) escribe -> QUACKOUT OPENPAR . print_options CLOSEPAR SEMICOLON
    (54) print_options -> . CTES more_print
    (55) print_options -> . megaexp more_print
    (70) megaexp -> . superexp
    (71) megaexp -> . megaexp boolean_op superexp
    (72) superexp -> . exp
    (73) superexp -> . superexp logical_op exp
    (74) exp -> . termino
    (75) exp -> . exp sums termino
    (76) termino -> . factor
    (77) termino -> . termino multdiv factor
    (78) factor -> . vcte
    (79) factor -> . openpar megaexp closepar
    (80) factor -> . unary_ops vcte
    (81) factor -> . unary_ops openpar megaexp closepar
    (84) vcte -> . id
    (88) vcte -> . CTEI
    (89) vcte -> . CTEF
    (90) vcte -> . TRUE
    (91) vcte -> . FALSE
    (92) vcte -> . CTEC
    (82) openpar -> . OPENPAR
    (105) unary_ops -> . MINUS
    (106) unary_ops -> . PLUS
    (107) unary_ops -> . DETERM
    (108) unary_ops -> . TRANSPOSE
    (109) unary_ops -> . INVERSE
    (85) id -> . ID
    (86) id -> . ID OPENBRAC exp CLOSEBRAC
    (87) id -> . ID OPENBRAC exp CLOSEBRAC OPENBRAC exp CLOSEBRAC

    CTES            shift and go to state 124
    CTEI            shift and go to state 106
    CTEF            shift and go to state 107
    TRUE            shift and go to state 108
    FALSE           shift and go to state 109
    CTEC            shift and go to state 110
    OPENPAR         shift and go to state 111
    MINUS           shift and go to state 112
    PLUS            shift and go to state 113
    DETERM          shift and go to state 114
    TRANSPOSE       shift and go to state 115
    INVERSE         shift and go to state 116
    ID              shift and go to state 117

    print_options                  shift and go to state 123
    megaexp                        shift and go to state 125
    superexp                       shift and go to state 99
    exp                            shift and go to state 100
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    vcte                           shift and go to state 103
    openpar                        shift and go to state 104
    unary_ops                      shift and go to state 105
    id                             shift and go to state 97

state 92

    (59) lee -> QUACKIN OPENPAR . ID read_more CLOSEPAR SEMICOLON

    ID              shift and go to state 126


state 93

    (86) id -> ID OPENBRAC . exp CLOSEBRAC
    (87) id -> ID OPENBRAC . exp CLOSEBRAC OPENBRAC exp CLOSEBRAC
    (74) exp -> . termino
    (75) exp -> . exp sums termino
    (76) termino -> . factor
    (77) termino -> . termino multdiv factor
    (78) factor -> . vcte
    (79) factor -> . openpar megaexp closepar
    (80) factor -> . unary_ops vcte
    (81) factor -> . unary_ops openpar megaexp closepar
    (84) vcte -> . id
    (88) vcte -> . CTEI
    (89) vcte -> . CTEF
    (90) vcte -> . TRUE
    (91) vcte -> . FALSE
    (92) vcte -> . CTEC
    (82) openpar -> . OPENPAR
    (105) unary_ops -> . MINUS
    (106) unary_ops -> . PLUS
    (107) unary_ops -> . DETERM
    (108) unary_ops -> . TRANSPOSE
    (109) unary_ops -> . INVERSE
    (85) id -> . ID
    (86) id -> . ID OPENBRAC exp CLOSEBRAC
    (87) id -> . ID OPENBRAC exp CLOSEBRAC OPENBRAC exp CLOSEBRAC

    CTEI            shift and go to state 106
    CTEF            shift and go to state 107
    TRUE            shift and go to state 108
    FALSE           shift and go to state 109
    CTEC            shift and go to state 110
    OPENPAR         shift and go to state 111
    MINUS           shift and go to state 112
    PLUS            shift and go to state 113
    DETERM          shift and go to state 114
    TRANSPOSE       shift and go to state 115
    INVERSE         shift and go to state 116
    ID              shift and go to state 117

    exp                            shift and go to state 127
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    vcte                           shift and go to state 103
    openpar                        shift and go to state 104
    unary_ops                      shift and go to state 105
    id                             shift and go to state 97

state 94

    (63) desde -> DESDE forId . ASSIGN exp hasta exp hacer bloque

    ASSIGN          shift and go to state 128


state 95

    (64) forId -> ID .

    ASSIGN          reduce using rule 64 (forId -> ID .)


state 96

    (67) mientras_estatuto -> mientras OPENPAR . megaexp CLOSEPAR haz bloque
    (70) megaexp -> . superexp
    (71) megaexp -> . megaexp boolean_op superexp
    (72) superexp -> . exp
    (73) superexp -> . superexp logical_op exp
    (74) exp -> . termino
    (75) exp -> . exp sums termino
    (76) termino -> . factor
    (77) termino -> . termino multdiv factor
    (78) factor -> . vcte
    (79) factor -> . openpar megaexp closepar
    (80) factor -> . unary_ops vcte
    (81) factor -> . unary_ops openpar megaexp closepar
    (84) vcte -> . id
    (88) vcte -> . CTEI
    (89) vcte -> . CTEF
    (90) vcte -> . TRUE
    (91) vcte -> . FALSE
    (92) vcte -> . CTEC
    (82) openpar -> . OPENPAR
    (105) unary_ops -> . MINUS
    (106) unary_ops -> . PLUS
    (107) unary_ops -> . DETERM
    (108) unary_ops -> . TRANSPOSE
    (109) unary_ops -> . INVERSE
    (85) id -> . ID
    (86) id -> . ID OPENBRAC exp CLOSEBRAC
    (87) id -> . ID OPENBRAC exp CLOSEBRAC OPENBRAC exp CLOSEBRAC

    CTEI            shift and go to state 106
    CTEF            shift and go to state 107
    TRUE            shift and go to state 108
    FALSE           shift and go to state 109
    CTEC            shift and go to state 110
    OPENPAR         shift and go to state 111
    MINUS           shift and go to state 112
    PLUS            shift and go to state 113
    DETERM          shift and go to state 114
    TRANSPOSE       shift and go to state 115
    INVERSE         shift and go to state 116
    ID              shift and go to state 117

    megaexp                        shift and go to state 129
    superexp                       shift and go to state 99
    exp                            shift and go to state 100
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    vcte                           shift and go to state 103
    openpar                        shift and go to state 104
    unary_ops                      shift and go to state 105
    id                             shift and go to state 97

state 97

    (84) vcte -> id .

    TIMES           reduce using rule 84 (vcte -> id .)
    DIVIDE          reduce using rule 84 (vcte -> id .)
    MINUS           reduce using rule 84 (vcte -> id .)
    PLUS            reduce using rule 84 (vcte -> id .)
    GT              reduce using rule 84 (vcte -> id .)
    GTE             reduce using rule 84 (vcte -> id .)
    LT              reduce using rule 84 (vcte -> id .)
    LTE             reduce using rule 84 (vcte -> id .)
    NEQ             reduce using rule 84 (vcte -> id .)
    EQ              reduce using rule 84 (vcte -> id .)
    SEMICOLON       reduce using rule 84 (vcte -> id .)
    OR              reduce using rule 84 (vcte -> id .)
    AND             reduce using rule 84 (vcte -> id .)
    CLOSEPAR        reduce using rule 84 (vcte -> id .)
    COMMA           reduce using rule 84 (vcte -> id .)
    CLOSEBRAC       reduce using rule 84 (vcte -> id .)
    HASTA           reduce using rule 84 (vcte -> id .)
    HACER           reduce using rule 84 (vcte -> id .)


state 98

    (41) asignacion -> id ASSIGN megaexp . SEMICOLON
    (71) megaexp -> megaexp . boolean_op superexp
    (93) boolean_op -> . OR
    (94) boolean_op -> . AND

    SEMICOLON       shift and go to state 130
    OR              shift and go to state 132
    AND             shift and go to state 133

    boolean_op                     shift and go to state 131

state 99

    (70) megaexp -> superexp .
    (73) superexp -> superexp . logical_op exp
    (95) logical_op -> . GT
    (96) logical_op -> . GTE
    (97) logical_op -> . LT
    (98) logical_op -> . LTE
    (99) logical_op -> . NEQ
    (100) logical_op -> . EQ

    SEMICOLON       reduce using rule 70 (megaexp -> superexp .)
    OR              reduce using rule 70 (megaexp -> superexp .)
    AND             reduce using rule 70 (megaexp -> superexp .)
    CLOSEPAR        reduce using rule 70 (megaexp -> superexp .)
    COMMA           reduce using rule 70 (megaexp -> superexp .)
    GT              shift and go to state 135
    GTE             shift and go to state 136
    LT              shift and go to state 137
    LTE             shift and go to state 138
    NEQ             shift and go to state 139
    EQ              shift and go to state 140

    logical_op                     shift and go to state 134

state 100

    (72) superexp -> exp .
    (75) exp -> exp . sums termino
    (101) sums -> . MINUS
    (102) sums -> . PLUS

    GT              reduce using rule 72 (superexp -> exp .)
    GTE             reduce using rule 72 (superexp -> exp .)
    LT              reduce using rule 72 (superexp -> exp .)
    LTE             reduce using rule 72 (superexp -> exp .)
    NEQ             reduce using rule 72 (superexp -> exp .)
    EQ              reduce using rule 72 (superexp -> exp .)
    SEMICOLON       reduce using rule 72 (superexp -> exp .)
    OR              reduce using rule 72 (superexp -> exp .)
    AND             reduce using rule 72 (superexp -> exp .)
    CLOSEPAR        reduce using rule 72 (superexp -> exp .)
    COMMA           reduce using rule 72 (superexp -> exp .)
    MINUS           shift and go to state 142
    PLUS            shift and go to state 143

    sums                           shift and go to state 141

state 101

    (74) exp -> termino .
    (77) termino -> termino . multdiv factor
    (103) multdiv -> . TIMES
    (104) multdiv -> . DIVIDE

    MINUS           reduce using rule 74 (exp -> termino .)
    PLUS            reduce using rule 74 (exp -> termino .)
    GT              reduce using rule 74 (exp -> termino .)
    GTE             reduce using rule 74 (exp -> termino .)
    LT              reduce using rule 74 (exp -> termino .)
    LTE             reduce using rule 74 (exp -> termino .)
    NEQ             reduce using rule 74 (exp -> termino .)
    EQ              reduce using rule 74 (exp -> termino .)
    SEMICOLON       reduce using rule 74 (exp -> termino .)
    OR              reduce using rule 74 (exp -> termino .)
    AND             reduce using rule 74 (exp -> termino .)
    CLOSEPAR        reduce using rule 74 (exp -> termino .)
    COMMA           reduce using rule 74 (exp -> termino .)
    CLOSEBRAC       reduce using rule 74 (exp -> termino .)
    HASTA           reduce using rule 74 (exp -> termino .)
    HACER           reduce using rule 74 (exp -> termino .)
    TIMES           shift and go to state 145
    DIVIDE          shift and go to state 146

    multdiv                        shift and go to state 144

state 102

    (76) termino -> factor .

    TIMES           reduce using rule 76 (termino -> factor .)
    DIVIDE          reduce using rule 76 (termino -> factor .)
    MINUS           reduce using rule 76 (termino -> factor .)
    PLUS            reduce using rule 76 (termino -> factor .)
    GT              reduce using rule 76 (termino -> factor .)
    GTE             reduce using rule 76 (termino -> factor .)
    LT              reduce using rule 76 (termino -> factor .)
    LTE             reduce using rule 76 (termino -> factor .)
    NEQ             reduce using rule 76 (termino -> factor .)
    EQ              reduce using rule 76 (termino -> factor .)
    SEMICOLON       reduce using rule 76 (termino -> factor .)
    OR              reduce using rule 76 (termino -> factor .)
    AND             reduce using rule 76 (termino -> factor .)
    CLOSEPAR        reduce using rule 76 (termino -> factor .)
    COMMA           reduce using rule 76 (termino -> factor .)
    CLOSEBRAC       reduce using rule 76 (termino -> factor .)
    HASTA           reduce using rule 76 (termino -> factor .)
    HACER           reduce using rule 76 (termino -> factor .)


state 103

    (78) factor -> vcte .

    TIMES           reduce using rule 78 (factor -> vcte .)
    DIVIDE          reduce using rule 78 (factor -> vcte .)
    MINUS           reduce using rule 78 (factor -> vcte .)
    PLUS            reduce using rule 78 (factor -> vcte .)
    GT              reduce using rule 78 (factor -> vcte .)
    GTE             reduce using rule 78 (factor -> vcte .)
    LT              reduce using rule 78 (factor -> vcte .)
    LTE             reduce using rule 78 (factor -> vcte .)
    NEQ             reduce using rule 78 (factor -> vcte .)
    EQ              reduce using rule 78 (factor -> vcte .)
    SEMICOLON       reduce using rule 78 (factor -> vcte .)
    OR              reduce using rule 78 (factor -> vcte .)
    AND             reduce using rule 78 (factor -> vcte .)
    CLOSEPAR        reduce using rule 78 (factor -> vcte .)
    COMMA           reduce using rule 78 (factor -> vcte .)
    CLOSEBRAC       reduce using rule 78 (factor -> vcte .)
    HASTA           reduce using rule 78 (factor -> vcte .)
    HACER           reduce using rule 78 (factor -> vcte .)


state 104

    (79) factor -> openpar . megaexp closepar
    (70) megaexp -> . superexp
    (71) megaexp -> . megaexp boolean_op superexp
    (72) superexp -> . exp
    (73) superexp -> . superexp logical_op exp
    (74) exp -> . termino
    (75) exp -> . exp sums termino
    (76) termino -> . factor
    (77) termino -> . termino multdiv factor
    (78) factor -> . vcte
    (79) factor -> . openpar megaexp closepar
    (80) factor -> . unary_ops vcte
    (81) factor -> . unary_ops openpar megaexp closepar
    (84) vcte -> . id
    (88) vcte -> . CTEI
    (89) vcte -> . CTEF
    (90) vcte -> . TRUE
    (91) vcte -> . FALSE
    (92) vcte -> . CTEC
    (82) openpar -> . OPENPAR
    (105) unary_ops -> . MINUS
    (106) unary_ops -> . PLUS
    (107) unary_ops -> . DETERM
    (108) unary_ops -> . TRANSPOSE
    (109) unary_ops -> . INVERSE
    (85) id -> . ID
    (86) id -> . ID OPENBRAC exp CLOSEBRAC
    (87) id -> . ID OPENBRAC exp CLOSEBRAC OPENBRAC exp CLOSEBRAC

    CTEI            shift and go to state 106
    CTEF            shift and go to state 107
    TRUE            shift and go to state 108
    FALSE           shift and go to state 109
    CTEC            shift and go to state 110
    OPENPAR         shift and go to state 111
    MINUS           shift and go to state 112
    PLUS            shift and go to state 113
    DETERM          shift and go to state 114
    TRANSPOSE       shift and go to state 115
    INVERSE         shift and go to state 116
    ID              shift and go to state 117

    openpar                        shift and go to state 104
    megaexp                        shift and go to state 147
    superexp                       shift and go to state 99
    exp                            shift and go to state 100
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    vcte                           shift and go to state 103
    unary_ops                      shift and go to state 105
    id                             shift and go to state 97

state 105

    (80) factor -> unary_ops . vcte
    (81) factor -> unary_ops . openpar megaexp closepar
    (84) vcte -> . id
    (88) vcte -> . CTEI
    (89) vcte -> . CTEF
    (90) vcte -> . TRUE
    (91) vcte -> . FALSE
    (92) vcte -> . CTEC
    (82) openpar -> . OPENPAR
    (85) id -> . ID
    (86) id -> . ID OPENBRAC exp CLOSEBRAC
    (87) id -> . ID OPENBRAC exp CLOSEBRAC OPENBRAC exp CLOSEBRAC

    CTEI            shift and go to state 106
    CTEF            shift and go to state 107
    TRUE            shift and go to state 108
    FALSE           shift and go to state 109
    CTEC            shift and go to state 110
    OPENPAR         shift and go to state 111
    ID              shift and go to state 117

    vcte                           shift and go to state 148
    openpar                        shift and go to state 149
    id                             shift and go to state 97

state 106

    (88) vcte -> CTEI .

    TIMES           reduce using rule 88 (vcte -> CTEI .)
    DIVIDE          reduce using rule 88 (vcte -> CTEI .)
    MINUS           reduce using rule 88 (vcte -> CTEI .)
    PLUS            reduce using rule 88 (vcte -> CTEI .)
    GT              reduce using rule 88 (vcte -> CTEI .)
    GTE             reduce using rule 88 (vcte -> CTEI .)
    LT              reduce using rule 88 (vcte -> CTEI .)
    LTE             reduce using rule 88 (vcte -> CTEI .)
    NEQ             reduce using rule 88 (vcte -> CTEI .)
    EQ              reduce using rule 88 (vcte -> CTEI .)
    SEMICOLON       reduce using rule 88 (vcte -> CTEI .)
    OR              reduce using rule 88 (vcte -> CTEI .)
    AND             reduce using rule 88 (vcte -> CTEI .)
    CLOSEPAR        reduce using rule 88 (vcte -> CTEI .)
    COMMA           reduce using rule 88 (vcte -> CTEI .)
    CLOSEBRAC       reduce using rule 88 (vcte -> CTEI .)
    HASTA           reduce using rule 88 (vcte -> CTEI .)
    HACER           reduce using rule 88 (vcte -> CTEI .)


state 107

    (89) vcte -> CTEF .

    TIMES           reduce using rule 89 (vcte -> CTEF .)
    DIVIDE          reduce using rule 89 (vcte -> CTEF .)
    MINUS           reduce using rule 89 (vcte -> CTEF .)
    PLUS            reduce using rule 89 (vcte -> CTEF .)
    GT              reduce using rule 89 (vcte -> CTEF .)
    GTE             reduce using rule 89 (vcte -> CTEF .)
    LT              reduce using rule 89 (vcte -> CTEF .)
    LTE             reduce using rule 89 (vcte -> CTEF .)
    NEQ             reduce using rule 89 (vcte -> CTEF .)
    EQ              reduce using rule 89 (vcte -> CTEF .)
    SEMICOLON       reduce using rule 89 (vcte -> CTEF .)
    OR              reduce using rule 89 (vcte -> CTEF .)
    AND             reduce using rule 89 (vcte -> CTEF .)
    CLOSEPAR        reduce using rule 89 (vcte -> CTEF .)
    COMMA           reduce using rule 89 (vcte -> CTEF .)
    CLOSEBRAC       reduce using rule 89 (vcte -> CTEF .)
    HASTA           reduce using rule 89 (vcte -> CTEF .)
    HACER           reduce using rule 89 (vcte -> CTEF .)


state 108

    (90) vcte -> TRUE .

    TIMES           reduce using rule 90 (vcte -> TRUE .)
    DIVIDE          reduce using rule 90 (vcte -> TRUE .)
    MINUS           reduce using rule 90 (vcte -> TRUE .)
    PLUS            reduce using rule 90 (vcte -> TRUE .)
    GT              reduce using rule 90 (vcte -> TRUE .)
    GTE             reduce using rule 90 (vcte -> TRUE .)
    LT              reduce using rule 90 (vcte -> TRUE .)
    LTE             reduce using rule 90 (vcte -> TRUE .)
    NEQ             reduce using rule 90 (vcte -> TRUE .)
    EQ              reduce using rule 90 (vcte -> TRUE .)
    SEMICOLON       reduce using rule 90 (vcte -> TRUE .)
    OR              reduce using rule 90 (vcte -> TRUE .)
    AND             reduce using rule 90 (vcte -> TRUE .)
    CLOSEPAR        reduce using rule 90 (vcte -> TRUE .)
    COMMA           reduce using rule 90 (vcte -> TRUE .)
    CLOSEBRAC       reduce using rule 90 (vcte -> TRUE .)
    HASTA           reduce using rule 90 (vcte -> TRUE .)
    HACER           reduce using rule 90 (vcte -> TRUE .)


state 109

    (91) vcte -> FALSE .

    TIMES           reduce using rule 91 (vcte -> FALSE .)
    DIVIDE          reduce using rule 91 (vcte -> FALSE .)
    MINUS           reduce using rule 91 (vcte -> FALSE .)
    PLUS            reduce using rule 91 (vcte -> FALSE .)
    GT              reduce using rule 91 (vcte -> FALSE .)
    GTE             reduce using rule 91 (vcte -> FALSE .)
    LT              reduce using rule 91 (vcte -> FALSE .)
    LTE             reduce using rule 91 (vcte -> FALSE .)
    NEQ             reduce using rule 91 (vcte -> FALSE .)
    EQ              reduce using rule 91 (vcte -> FALSE .)
    SEMICOLON       reduce using rule 91 (vcte -> FALSE .)
    OR              reduce using rule 91 (vcte -> FALSE .)
    AND             reduce using rule 91 (vcte -> FALSE .)
    CLOSEPAR        reduce using rule 91 (vcte -> FALSE .)
    COMMA           reduce using rule 91 (vcte -> FALSE .)
    CLOSEBRAC       reduce using rule 91 (vcte -> FALSE .)
    HASTA           reduce using rule 91 (vcte -> FALSE .)
    HACER           reduce using rule 91 (vcte -> FALSE .)


state 110

    (92) vcte -> CTEC .

    TIMES           reduce using rule 92 (vcte -> CTEC .)
    DIVIDE          reduce using rule 92 (vcte -> CTEC .)
    MINUS           reduce using rule 92 (vcte -> CTEC .)
    PLUS            reduce using rule 92 (vcte -> CTEC .)
    GT              reduce using rule 92 (vcte -> CTEC .)
    GTE             reduce using rule 92 (vcte -> CTEC .)
    LT              reduce using rule 92 (vcte -> CTEC .)
    LTE             reduce using rule 92 (vcte -> CTEC .)
    NEQ             reduce using rule 92 (vcte -> CTEC .)
    EQ              reduce using rule 92 (vcte -> CTEC .)
    SEMICOLON       reduce using rule 92 (vcte -> CTEC .)
    OR              reduce using rule 92 (vcte -> CTEC .)
    AND             reduce using rule 92 (vcte -> CTEC .)
    CLOSEPAR        reduce using rule 92 (vcte -> CTEC .)
    COMMA           reduce using rule 92 (vcte -> CTEC .)
    CLOSEBRAC       reduce using rule 92 (vcte -> CTEC .)
    HASTA           reduce using rule 92 (vcte -> CTEC .)
    HACER           reduce using rule 92 (vcte -> CTEC .)


state 111

    (82) openpar -> OPENPAR .

    CTEI            reduce using rule 82 (openpar -> OPENPAR .)
    CTEF            reduce using rule 82 (openpar -> OPENPAR .)
    TRUE            reduce using rule 82 (openpar -> OPENPAR .)
    FALSE           reduce using rule 82 (openpar -> OPENPAR .)
    CTEC            reduce using rule 82 (openpar -> OPENPAR .)
    OPENPAR         reduce using rule 82 (openpar -> OPENPAR .)
    MINUS           reduce using rule 82 (openpar -> OPENPAR .)
    PLUS            reduce using rule 82 (openpar -> OPENPAR .)
    DETERM          reduce using rule 82 (openpar -> OPENPAR .)
    TRANSPOSE       reduce using rule 82 (openpar -> OPENPAR .)
    INVERSE         reduce using rule 82 (openpar -> OPENPAR .)
    ID              reduce using rule 82 (openpar -> OPENPAR .)


state 112

    (105) unary_ops -> MINUS .

    CTEI            reduce using rule 105 (unary_ops -> MINUS .)
    CTEF            reduce using rule 105 (unary_ops -> MINUS .)
    TRUE            reduce using rule 105 (unary_ops -> MINUS .)
    FALSE           reduce using rule 105 (unary_ops -> MINUS .)
    CTEC            reduce using rule 105 (unary_ops -> MINUS .)
    OPENPAR         reduce using rule 105 (unary_ops -> MINUS .)
    ID              reduce using rule 105 (unary_ops -> MINUS .)


state 113

    (106) unary_ops -> PLUS .

    CTEI            reduce using rule 106 (unary_ops -> PLUS .)
    CTEF            reduce using rule 106 (unary_ops -> PLUS .)
    TRUE            reduce using rule 106 (unary_ops -> PLUS .)
    FALSE           reduce using rule 106 (unary_ops -> PLUS .)
    CTEC            reduce using rule 106 (unary_ops -> PLUS .)
    OPENPAR         reduce using rule 106 (unary_ops -> PLUS .)
    ID              reduce using rule 106 (unary_ops -> PLUS .)


state 114

    (107) unary_ops -> DETERM .

    CTEI            reduce using rule 107 (unary_ops -> DETERM .)
    CTEF            reduce using rule 107 (unary_ops -> DETERM .)
    TRUE            reduce using rule 107 (unary_ops -> DETERM .)
    FALSE           reduce using rule 107 (unary_ops -> DETERM .)
    CTEC            reduce using rule 107 (unary_ops -> DETERM .)
    OPENPAR         reduce using rule 107 (unary_ops -> DETERM .)
    ID              reduce using rule 107 (unary_ops -> DETERM .)


state 115

    (108) unary_ops -> TRANSPOSE .

    CTEI            reduce using rule 108 (unary_ops -> TRANSPOSE .)
    CTEF            reduce using rule 108 (unary_ops -> TRANSPOSE .)
    TRUE            reduce using rule 108 (unary_ops -> TRANSPOSE .)
    FALSE           reduce using rule 108 (unary_ops -> TRANSPOSE .)
    CTEC            reduce using rule 108 (unary_ops -> TRANSPOSE .)
    OPENPAR         reduce using rule 108 (unary_ops -> TRANSPOSE .)
    ID              reduce using rule 108 (unary_ops -> TRANSPOSE .)


state 116

    (109) unary_ops -> INVERSE .

    CTEI            reduce using rule 109 (unary_ops -> INVERSE .)
    CTEF            reduce using rule 109 (unary_ops -> INVERSE .)
    TRUE            reduce using rule 109 (unary_ops -> INVERSE .)
    FALSE           reduce using rule 109 (unary_ops -> INVERSE .)
    CTEC            reduce using rule 109 (unary_ops -> INVERSE .)
    OPENPAR         reduce using rule 109 (unary_ops -> INVERSE .)
    ID              reduce using rule 109 (unary_ops -> INVERSE .)


state 117

    (85) id -> ID .
    (86) id -> ID . OPENBRAC exp CLOSEBRAC
    (87) id -> ID . OPENBRAC exp CLOSEBRAC OPENBRAC exp CLOSEBRAC

    TIMES           reduce using rule 85 (id -> ID .)
    DIVIDE          reduce using rule 85 (id -> ID .)
    MINUS           reduce using rule 85 (id -> ID .)
    PLUS            reduce using rule 85 (id -> ID .)
    GT              reduce using rule 85 (id -> ID .)
    GTE             reduce using rule 85 (id -> ID .)
    LT              reduce using rule 85 (id -> ID .)
    LTE             reduce using rule 85 (id -> ID .)
    NEQ             reduce using rule 85 (id -> ID .)
    EQ              reduce using rule 85 (id -> ID .)
    SEMICOLON       reduce using rule 85 (id -> ID .)
    OR              reduce using rule 85 (id -> ID .)
    AND             reduce using rule 85 (id -> ID .)
    CLOSEPAR        reduce using rule 85 (id -> ID .)
    COMMA           reduce using rule 85 (id -> ID .)
    CLOSEBRAC       reduce using rule 85 (id -> ID .)
    HASTA           reduce using rule 85 (id -> ID .)
    HACER           reduce using rule 85 (id -> ID .)
    OPENBRAC        shift and go to state 93


state 118

    (42) condicion -> SI OPENPAR megaexp . CLOSEPAR entonces bloque_entonces
    (71) megaexp -> megaexp . boolean_op superexp
    (93) boolean_op -> . OR
    (94) boolean_op -> . AND

    CLOSEPAR        shift and go to state 150
    OR              shift and go to state 132
    AND             shift and go to state 133

    boolean_op                     shift and go to state 131

state 119

    (48) func_void -> func_call_id OPENPAR func_call_params . CLOSEPAR SEMICOLON
    (50) func_call_params -> func_call_params . COMMA func_call_params

    CLOSEPAR        shift and go to state 151
    COMMA           shift and go to state 152


state 120

    (51) func_call_params -> empty .

    CLOSEPAR        reduce using rule 51 (func_call_params -> empty .)
    COMMA           reduce using rule 51 (func_call_params -> empty .)


state 121

    (52) func_call_params -> megaexp .
    (71) megaexp -> megaexp . boolean_op superexp
    (93) boolean_op -> . OR
    (94) boolean_op -> . AND

    CLOSEPAR        reduce using rule 52 (func_call_params -> megaexp .)
    COMMA           reduce using rule 52 (func_call_params -> megaexp .)
    OR              shift and go to state 132
    AND             shift and go to state 133

    boolean_op                     shift and go to state 131

state 122

    (62) retorno -> RETORNO OPENPAR megaexp . CLOSEPAR SEMICOLON
    (71) megaexp -> megaexp . boolean_op superexp
    (93) boolean_op -> . OR
    (94) boolean_op -> . AND

    CLOSEPAR        shift and go to state 153
    OR              shift and go to state 132
    AND             shift and go to state 133

    boolean_op                     shift and go to state 131

state 123

    (53) escribe -> QUACKOUT OPENPAR print_options . CLOSEPAR SEMICOLON

    CLOSEPAR        shift and go to state 154


state 124

    (54) print_options -> CTES . more_print
    (56) more_print -> . COMMA CTES
    (57) more_print -> . COMMA megaexp
    (58) more_print -> . empty
    (110) empty -> .

    COMMA           shift and go to state 156
    CLOSEPAR        reduce using rule 110 (empty -> .)

    more_print                     shift and go to state 155
    empty                          shift and go to state 157

state 125

    (55) print_options -> megaexp . more_print
    (71) megaexp -> megaexp . boolean_op superexp
    (56) more_print -> . COMMA CTES
    (57) more_print -> . COMMA megaexp
    (58) more_print -> . empty
    (93) boolean_op -> . OR
    (94) boolean_op -> . AND
    (110) empty -> .

    COMMA           shift and go to state 156
    OR              shift and go to state 132
    AND             shift and go to state 133
    CLOSEPAR        reduce using rule 110 (empty -> .)

    more_print                     shift and go to state 158
    boolean_op                     shift and go to state 131
    empty                          shift and go to state 157

state 126

    (59) lee -> QUACKIN OPENPAR ID . read_more CLOSEPAR SEMICOLON
    (60) read_more -> . COMMA ID read_more
    (61) read_more -> . empty
    (110) empty -> .

    COMMA           shift and go to state 160
    CLOSEPAR        reduce using rule 110 (empty -> .)

    read_more                      shift and go to state 159
    empty                          shift and go to state 161

state 127

    (86) id -> ID OPENBRAC exp . CLOSEBRAC
    (87) id -> ID OPENBRAC exp . CLOSEBRAC OPENBRAC exp CLOSEBRAC
    (75) exp -> exp . sums termino
    (101) sums -> . MINUS
    (102) sums -> . PLUS

    CLOSEBRAC       shift and go to state 162
    MINUS           shift and go to state 142
    PLUS            shift and go to state 143

    sums                           shift and go to state 141

state 128

    (63) desde -> DESDE forId ASSIGN . exp hasta exp hacer bloque
    (74) exp -> . termino
    (75) exp -> . exp sums termino
    (76) termino -> . factor
    (77) termino -> . termino multdiv factor
    (78) factor -> . vcte
    (79) factor -> . openpar megaexp closepar
    (80) factor -> . unary_ops vcte
    (81) factor -> . unary_ops openpar megaexp closepar
    (84) vcte -> . id
    (88) vcte -> . CTEI
    (89) vcte -> . CTEF
    (90) vcte -> . TRUE
    (91) vcte -> . FALSE
    (92) vcte -> . CTEC
    (82) openpar -> . OPENPAR
    (105) unary_ops -> . MINUS
    (106) unary_ops -> . PLUS
    (107) unary_ops -> . DETERM
    (108) unary_ops -> . TRANSPOSE
    (109) unary_ops -> . INVERSE
    (85) id -> . ID
    (86) id -> . ID OPENBRAC exp CLOSEBRAC
    (87) id -> . ID OPENBRAC exp CLOSEBRAC OPENBRAC exp CLOSEBRAC

    CTEI            shift and go to state 106
    CTEF            shift and go to state 107
    TRUE            shift and go to state 108
    FALSE           shift and go to state 109
    CTEC            shift and go to state 110
    OPENPAR         shift and go to state 111
    MINUS           shift and go to state 112
    PLUS            shift and go to state 113
    DETERM          shift and go to state 114
    TRANSPOSE       shift and go to state 115
    INVERSE         shift and go to state 116
    ID              shift and go to state 117

    exp                            shift and go to state 163
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    vcte                           shift and go to state 103
    openpar                        shift and go to state 104
    unary_ops                      shift and go to state 105
    id                             shift and go to state 97

state 129

    (67) mientras_estatuto -> mientras OPENPAR megaexp . CLOSEPAR haz bloque
    (71) megaexp -> megaexp . boolean_op superexp
    (93) boolean_op -> . OR
    (94) boolean_op -> . AND

    CLOSEPAR        shift and go to state 164
    OR              shift and go to state 132
    AND             shift and go to state 133

    boolean_op                     shift and go to state 131

state 130

    (41) asignacion -> id ASSIGN megaexp SEMICOLON .

    SI              reduce using rule 41 (asignacion -> id ASSIGN megaexp SEMICOLON .)
    RETORNO         reduce using rule 41 (asignacion -> id ASSIGN megaexp SEMICOLON .)
    QUACKOUT        reduce using rule 41 (asignacion -> id ASSIGN megaexp SEMICOLON .)
    QUACKIN         reduce using rule 41 (asignacion -> id ASSIGN megaexp SEMICOLON .)
    DESDE           reduce using rule 41 (asignacion -> id ASSIGN megaexp SEMICOLON .)
    ID              reduce using rule 41 (asignacion -> id ASSIGN megaexp SEMICOLON .)
    MIENTRAS        reduce using rule 41 (asignacion -> id ASSIGN megaexp SEMICOLON .)
    RCURLYB         reduce using rule 41 (asignacion -> id ASSIGN megaexp SEMICOLON .)


state 131

    (71) megaexp -> megaexp boolean_op . superexp
    (72) superexp -> . exp
    (73) superexp -> . superexp logical_op exp
    (74) exp -> . termino
    (75) exp -> . exp sums termino
    (76) termino -> . factor
    (77) termino -> . termino multdiv factor
    (78) factor -> . vcte
    (79) factor -> . openpar megaexp closepar
    (80) factor -> . unary_ops vcte
    (81) factor -> . unary_ops openpar megaexp closepar
    (84) vcte -> . id
    (88) vcte -> . CTEI
    (89) vcte -> . CTEF
    (90) vcte -> . TRUE
    (91) vcte -> . FALSE
    (92) vcte -> . CTEC
    (82) openpar -> . OPENPAR
    (105) unary_ops -> . MINUS
    (106) unary_ops -> . PLUS
    (107) unary_ops -> . DETERM
    (108) unary_ops -> . TRANSPOSE
    (109) unary_ops -> . INVERSE
    (85) id -> . ID
    (86) id -> . ID OPENBRAC exp CLOSEBRAC
    (87) id -> . ID OPENBRAC exp CLOSEBRAC OPENBRAC exp CLOSEBRAC

    CTEI            shift and go to state 106
    CTEF            shift and go to state 107
    TRUE            shift and go to state 108
    FALSE           shift and go to state 109
    CTEC            shift and go to state 110
    OPENPAR         shift and go to state 111
    MINUS           shift and go to state 112
    PLUS            shift and go to state 113
    DETERM          shift and go to state 114
    TRANSPOSE       shift and go to state 115
    INVERSE         shift and go to state 116
    ID              shift and go to state 117

    superexp                       shift and go to state 165
    exp                            shift and go to state 100
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    vcte                           shift and go to state 103
    openpar                        shift and go to state 104
    unary_ops                      shift and go to state 105
    id                             shift and go to state 97

state 132

    (93) boolean_op -> OR .

    CTEI            reduce using rule 93 (boolean_op -> OR .)
    CTEF            reduce using rule 93 (boolean_op -> OR .)
    TRUE            reduce using rule 93 (boolean_op -> OR .)
    FALSE           reduce using rule 93 (boolean_op -> OR .)
    CTEC            reduce using rule 93 (boolean_op -> OR .)
    OPENPAR         reduce using rule 93 (boolean_op -> OR .)
    MINUS           reduce using rule 93 (boolean_op -> OR .)
    PLUS            reduce using rule 93 (boolean_op -> OR .)
    DETERM          reduce using rule 93 (boolean_op -> OR .)
    TRANSPOSE       reduce using rule 93 (boolean_op -> OR .)
    INVERSE         reduce using rule 93 (boolean_op -> OR .)
    ID              reduce using rule 93 (boolean_op -> OR .)


state 133

    (94) boolean_op -> AND .

    CTEI            reduce using rule 94 (boolean_op -> AND .)
    CTEF            reduce using rule 94 (boolean_op -> AND .)
    TRUE            reduce using rule 94 (boolean_op -> AND .)
    FALSE           reduce using rule 94 (boolean_op -> AND .)
    CTEC            reduce using rule 94 (boolean_op -> AND .)
    OPENPAR         reduce using rule 94 (boolean_op -> AND .)
    MINUS           reduce using rule 94 (boolean_op -> AND .)
    PLUS            reduce using rule 94 (boolean_op -> AND .)
    DETERM          reduce using rule 94 (boolean_op -> AND .)
    TRANSPOSE       reduce using rule 94 (boolean_op -> AND .)
    INVERSE         reduce using rule 94 (boolean_op -> AND .)
    ID              reduce using rule 94 (boolean_op -> AND .)


state 134

    (73) superexp -> superexp logical_op . exp
    (74) exp -> . termino
    (75) exp -> . exp sums termino
    (76) termino -> . factor
    (77) termino -> . termino multdiv factor
    (78) factor -> . vcte
    (79) factor -> . openpar megaexp closepar
    (80) factor -> . unary_ops vcte
    (81) factor -> . unary_ops openpar megaexp closepar
    (84) vcte -> . id
    (88) vcte -> . CTEI
    (89) vcte -> . CTEF
    (90) vcte -> . TRUE
    (91) vcte -> . FALSE
    (92) vcte -> . CTEC
    (82) openpar -> . OPENPAR
    (105) unary_ops -> . MINUS
    (106) unary_ops -> . PLUS
    (107) unary_ops -> . DETERM
    (108) unary_ops -> . TRANSPOSE
    (109) unary_ops -> . INVERSE
    (85) id -> . ID
    (86) id -> . ID OPENBRAC exp CLOSEBRAC
    (87) id -> . ID OPENBRAC exp CLOSEBRAC OPENBRAC exp CLOSEBRAC

    CTEI            shift and go to state 106
    CTEF            shift and go to state 107
    TRUE            shift and go to state 108
    FALSE           shift and go to state 109
    CTEC            shift and go to state 110
    OPENPAR         shift and go to state 111
    MINUS           shift and go to state 112
    PLUS            shift and go to state 113
    DETERM          shift and go to state 114
    TRANSPOSE       shift and go to state 115
    INVERSE         shift and go to state 116
    ID              shift and go to state 117

    exp                            shift and go to state 166
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    vcte                           shift and go to state 103
    openpar                        shift and go to state 104
    unary_ops                      shift and go to state 105
    id                             shift and go to state 97

state 135

    (95) logical_op -> GT .

    CTEI            reduce using rule 95 (logical_op -> GT .)
    CTEF            reduce using rule 95 (logical_op -> GT .)
    TRUE            reduce using rule 95 (logical_op -> GT .)
    FALSE           reduce using rule 95 (logical_op -> GT .)
    CTEC            reduce using rule 95 (logical_op -> GT .)
    OPENPAR         reduce using rule 95 (logical_op -> GT .)
    MINUS           reduce using rule 95 (logical_op -> GT .)
    PLUS            reduce using rule 95 (logical_op -> GT .)
    DETERM          reduce using rule 95 (logical_op -> GT .)
    TRANSPOSE       reduce using rule 95 (logical_op -> GT .)
    INVERSE         reduce using rule 95 (logical_op -> GT .)
    ID              reduce using rule 95 (logical_op -> GT .)


state 136

    (96) logical_op -> GTE .

    CTEI            reduce using rule 96 (logical_op -> GTE .)
    CTEF            reduce using rule 96 (logical_op -> GTE .)
    TRUE            reduce using rule 96 (logical_op -> GTE .)
    FALSE           reduce using rule 96 (logical_op -> GTE .)
    CTEC            reduce using rule 96 (logical_op -> GTE .)
    OPENPAR         reduce using rule 96 (logical_op -> GTE .)
    MINUS           reduce using rule 96 (logical_op -> GTE .)
    PLUS            reduce using rule 96 (logical_op -> GTE .)
    DETERM          reduce using rule 96 (logical_op -> GTE .)
    TRANSPOSE       reduce using rule 96 (logical_op -> GTE .)
    INVERSE         reduce using rule 96 (logical_op -> GTE .)
    ID              reduce using rule 96 (logical_op -> GTE .)


state 137

    (97) logical_op -> LT .

    CTEI            reduce using rule 97 (logical_op -> LT .)
    CTEF            reduce using rule 97 (logical_op -> LT .)
    TRUE            reduce using rule 97 (logical_op -> LT .)
    FALSE           reduce using rule 97 (logical_op -> LT .)
    CTEC            reduce using rule 97 (logical_op -> LT .)
    OPENPAR         reduce using rule 97 (logical_op -> LT .)
    MINUS           reduce using rule 97 (logical_op -> LT .)
    PLUS            reduce using rule 97 (logical_op -> LT .)
    DETERM          reduce using rule 97 (logical_op -> LT .)
    TRANSPOSE       reduce using rule 97 (logical_op -> LT .)
    INVERSE         reduce using rule 97 (logical_op -> LT .)
    ID              reduce using rule 97 (logical_op -> LT .)


state 138

    (98) logical_op -> LTE .

    CTEI            reduce using rule 98 (logical_op -> LTE .)
    CTEF            reduce using rule 98 (logical_op -> LTE .)
    TRUE            reduce using rule 98 (logical_op -> LTE .)
    FALSE           reduce using rule 98 (logical_op -> LTE .)
    CTEC            reduce using rule 98 (logical_op -> LTE .)
    OPENPAR         reduce using rule 98 (logical_op -> LTE .)
    MINUS           reduce using rule 98 (logical_op -> LTE .)
    PLUS            reduce using rule 98 (logical_op -> LTE .)
    DETERM          reduce using rule 98 (logical_op -> LTE .)
    TRANSPOSE       reduce using rule 98 (logical_op -> LTE .)
    INVERSE         reduce using rule 98 (logical_op -> LTE .)
    ID              reduce using rule 98 (logical_op -> LTE .)


state 139

    (99) logical_op -> NEQ .

    CTEI            reduce using rule 99 (logical_op -> NEQ .)
    CTEF            reduce using rule 99 (logical_op -> NEQ .)
    TRUE            reduce using rule 99 (logical_op -> NEQ .)
    FALSE           reduce using rule 99 (logical_op -> NEQ .)
    CTEC            reduce using rule 99 (logical_op -> NEQ .)
    OPENPAR         reduce using rule 99 (logical_op -> NEQ .)
    MINUS           reduce using rule 99 (logical_op -> NEQ .)
    PLUS            reduce using rule 99 (logical_op -> NEQ .)
    DETERM          reduce using rule 99 (logical_op -> NEQ .)
    TRANSPOSE       reduce using rule 99 (logical_op -> NEQ .)
    INVERSE         reduce using rule 99 (logical_op -> NEQ .)
    ID              reduce using rule 99 (logical_op -> NEQ .)


state 140

    (100) logical_op -> EQ .

    CTEI            reduce using rule 100 (logical_op -> EQ .)
    CTEF            reduce using rule 100 (logical_op -> EQ .)
    TRUE            reduce using rule 100 (logical_op -> EQ .)
    FALSE           reduce using rule 100 (logical_op -> EQ .)
    CTEC            reduce using rule 100 (logical_op -> EQ .)
    OPENPAR         reduce using rule 100 (logical_op -> EQ .)
    MINUS           reduce using rule 100 (logical_op -> EQ .)
    PLUS            reduce using rule 100 (logical_op -> EQ .)
    DETERM          reduce using rule 100 (logical_op -> EQ .)
    TRANSPOSE       reduce using rule 100 (logical_op -> EQ .)
    INVERSE         reduce using rule 100 (logical_op -> EQ .)
    ID              reduce using rule 100 (logical_op -> EQ .)


state 141

    (75) exp -> exp sums . termino
    (76) termino -> . factor
    (77) termino -> . termino multdiv factor
    (78) factor -> . vcte
    (79) factor -> . openpar megaexp closepar
    (80) factor -> . unary_ops vcte
    (81) factor -> . unary_ops openpar megaexp closepar
    (84) vcte -> . id
    (88) vcte -> . CTEI
    (89) vcte -> . CTEF
    (90) vcte -> . TRUE
    (91) vcte -> . FALSE
    (92) vcte -> . CTEC
    (82) openpar -> . OPENPAR
    (105) unary_ops -> . MINUS
    (106) unary_ops -> . PLUS
    (107) unary_ops -> . DETERM
    (108) unary_ops -> . TRANSPOSE
    (109) unary_ops -> . INVERSE
    (85) id -> . ID
    (86) id -> . ID OPENBRAC exp CLOSEBRAC
    (87) id -> . ID OPENBRAC exp CLOSEBRAC OPENBRAC exp CLOSEBRAC

    CTEI            shift and go to state 106
    CTEF            shift and go to state 107
    TRUE            shift and go to state 108
    FALSE           shift and go to state 109
    CTEC            shift and go to state 110
    OPENPAR         shift and go to state 111
    MINUS           shift and go to state 112
    PLUS            shift and go to state 113
    DETERM          shift and go to state 114
    TRANSPOSE       shift and go to state 115
    INVERSE         shift and go to state 116
    ID              shift and go to state 117

    termino                        shift and go to state 167
    factor                         shift and go to state 102
    vcte                           shift and go to state 103
    openpar                        shift and go to state 104
    unary_ops                      shift and go to state 105
    id                             shift and go to state 97

state 142

    (101) sums -> MINUS .

    CTEI            reduce using rule 101 (sums -> MINUS .)
    CTEF            reduce using rule 101 (sums -> MINUS .)
    TRUE            reduce using rule 101 (sums -> MINUS .)
    FALSE           reduce using rule 101 (sums -> MINUS .)
    CTEC            reduce using rule 101 (sums -> MINUS .)
    OPENPAR         reduce using rule 101 (sums -> MINUS .)
    MINUS           reduce using rule 101 (sums -> MINUS .)
    PLUS            reduce using rule 101 (sums -> MINUS .)
    DETERM          reduce using rule 101 (sums -> MINUS .)
    TRANSPOSE       reduce using rule 101 (sums -> MINUS .)
    INVERSE         reduce using rule 101 (sums -> MINUS .)
    ID              reduce using rule 101 (sums -> MINUS .)


state 143

    (102) sums -> PLUS .

    CTEI            reduce using rule 102 (sums -> PLUS .)
    CTEF            reduce using rule 102 (sums -> PLUS .)
    TRUE            reduce using rule 102 (sums -> PLUS .)
    FALSE           reduce using rule 102 (sums -> PLUS .)
    CTEC            reduce using rule 102 (sums -> PLUS .)
    OPENPAR         reduce using rule 102 (sums -> PLUS .)
    MINUS           reduce using rule 102 (sums -> PLUS .)
    PLUS            reduce using rule 102 (sums -> PLUS .)
    DETERM          reduce using rule 102 (sums -> PLUS .)
    TRANSPOSE       reduce using rule 102 (sums -> PLUS .)
    INVERSE         reduce using rule 102 (sums -> PLUS .)
    ID              reduce using rule 102 (sums -> PLUS .)


state 144

    (77) termino -> termino multdiv . factor
    (78) factor -> . vcte
    (79) factor -> . openpar megaexp closepar
    (80) factor -> . unary_ops vcte
    (81) factor -> . unary_ops openpar megaexp closepar
    (84) vcte -> . id
    (88) vcte -> . CTEI
    (89) vcte -> . CTEF
    (90) vcte -> . TRUE
    (91) vcte -> . FALSE
    (92) vcte -> . CTEC
    (82) openpar -> . OPENPAR
    (105) unary_ops -> . MINUS
    (106) unary_ops -> . PLUS
    (107) unary_ops -> . DETERM
    (108) unary_ops -> . TRANSPOSE
    (109) unary_ops -> . INVERSE
    (85) id -> . ID
    (86) id -> . ID OPENBRAC exp CLOSEBRAC
    (87) id -> . ID OPENBRAC exp CLOSEBRAC OPENBRAC exp CLOSEBRAC

    CTEI            shift and go to state 106
    CTEF            shift and go to state 107
    TRUE            shift and go to state 108
    FALSE           shift and go to state 109
    CTEC            shift and go to state 110
    OPENPAR         shift and go to state 111
    MINUS           shift and go to state 112
    PLUS            shift and go to state 113
    DETERM          shift and go to state 114
    TRANSPOSE       shift and go to state 115
    INVERSE         shift and go to state 116
    ID              shift and go to state 117

    factor                         shift and go to state 168
    vcte                           shift and go to state 103
    openpar                        shift and go to state 104
    unary_ops                      shift and go to state 105
    id                             shift and go to state 97

state 145

    (103) multdiv -> TIMES .

    CTEI            reduce using rule 103 (multdiv -> TIMES .)
    CTEF            reduce using rule 103 (multdiv -> TIMES .)
    TRUE            reduce using rule 103 (multdiv -> TIMES .)
    FALSE           reduce using rule 103 (multdiv -> TIMES .)
    CTEC            reduce using rule 103 (multdiv -> TIMES .)
    OPENPAR         reduce using rule 103 (multdiv -> TIMES .)
    MINUS           reduce using rule 103 (multdiv -> TIMES .)
    PLUS            reduce using rule 103 (multdiv -> TIMES .)
    DETERM          reduce using rule 103 (multdiv -> TIMES .)
    TRANSPOSE       reduce using rule 103 (multdiv -> TIMES .)
    INVERSE         reduce using rule 103 (multdiv -> TIMES .)
    ID              reduce using rule 103 (multdiv -> TIMES .)


state 146

    (104) multdiv -> DIVIDE .

    CTEI            reduce using rule 104 (multdiv -> DIVIDE .)
    CTEF            reduce using rule 104 (multdiv -> DIVIDE .)
    TRUE            reduce using rule 104 (multdiv -> DIVIDE .)
    FALSE           reduce using rule 104 (multdiv -> DIVIDE .)
    CTEC            reduce using rule 104 (multdiv -> DIVIDE .)
    OPENPAR         reduce using rule 104 (multdiv -> DIVIDE .)
    MINUS           reduce using rule 104 (multdiv -> DIVIDE .)
    PLUS            reduce using rule 104 (multdiv -> DIVIDE .)
    DETERM          reduce using rule 104 (multdiv -> DIVIDE .)
    TRANSPOSE       reduce using rule 104 (multdiv -> DIVIDE .)
    INVERSE         reduce using rule 104 (multdiv -> DIVIDE .)
    ID              reduce using rule 104 (multdiv -> DIVIDE .)


state 147

    (79) factor -> openpar megaexp . closepar
    (71) megaexp -> megaexp . boolean_op superexp
    (83) closepar -> . CLOSEPAR
    (93) boolean_op -> . OR
    (94) boolean_op -> . AND

    CLOSEPAR        shift and go to state 170
    OR              shift and go to state 132
    AND             shift and go to state 133

    closepar                       shift and go to state 169
    boolean_op                     shift and go to state 131

state 148

    (80) factor -> unary_ops vcte .

    TIMES           reduce using rule 80 (factor -> unary_ops vcte .)
    DIVIDE          reduce using rule 80 (factor -> unary_ops vcte .)
    MINUS           reduce using rule 80 (factor -> unary_ops vcte .)
    PLUS            reduce using rule 80 (factor -> unary_ops vcte .)
    GT              reduce using rule 80 (factor -> unary_ops vcte .)
    GTE             reduce using rule 80 (factor -> unary_ops vcte .)
    LT              reduce using rule 80 (factor -> unary_ops vcte .)
    LTE             reduce using rule 80 (factor -> unary_ops vcte .)
    NEQ             reduce using rule 80 (factor -> unary_ops vcte .)
    EQ              reduce using rule 80 (factor -> unary_ops vcte .)
    SEMICOLON       reduce using rule 80 (factor -> unary_ops vcte .)
    OR              reduce using rule 80 (factor -> unary_ops vcte .)
    AND             reduce using rule 80 (factor -> unary_ops vcte .)
    CLOSEPAR        reduce using rule 80 (factor -> unary_ops vcte .)
    COMMA           reduce using rule 80 (factor -> unary_ops vcte .)
    CLOSEBRAC       reduce using rule 80 (factor -> unary_ops vcte .)
    HASTA           reduce using rule 80 (factor -> unary_ops vcte .)
    HACER           reduce using rule 80 (factor -> unary_ops vcte .)


state 149

    (81) factor -> unary_ops openpar . megaexp closepar
    (70) megaexp -> . superexp
    (71) megaexp -> . megaexp boolean_op superexp
    (72) superexp -> . exp
    (73) superexp -> . superexp logical_op exp
    (74) exp -> . termino
    (75) exp -> . exp sums termino
    (76) termino -> . factor
    (77) termino -> . termino multdiv factor
    (78) factor -> . vcte
    (79) factor -> . openpar megaexp closepar
    (80) factor -> . unary_ops vcte
    (81) factor -> . unary_ops openpar megaexp closepar
    (84) vcte -> . id
    (88) vcte -> . CTEI
    (89) vcte -> . CTEF
    (90) vcte -> . TRUE
    (91) vcte -> . FALSE
    (92) vcte -> . CTEC
    (82) openpar -> . OPENPAR
    (105) unary_ops -> . MINUS
    (106) unary_ops -> . PLUS
    (107) unary_ops -> . DETERM
    (108) unary_ops -> . TRANSPOSE
    (109) unary_ops -> . INVERSE
    (85) id -> . ID
    (86) id -> . ID OPENBRAC exp CLOSEBRAC
    (87) id -> . ID OPENBRAC exp CLOSEBRAC OPENBRAC exp CLOSEBRAC

    CTEI            shift and go to state 106
    CTEF            shift and go to state 107
    TRUE            shift and go to state 108
    FALSE           shift and go to state 109
    CTEC            shift and go to state 110
    OPENPAR         shift and go to state 111
    MINUS           shift and go to state 112
    PLUS            shift and go to state 113
    DETERM          shift and go to state 114
    TRANSPOSE       shift and go to state 115
    INVERSE         shift and go to state 116
    ID              shift and go to state 117

    unary_ops                      shift and go to state 105
    openpar                        shift and go to state 104
    megaexp                        shift and go to state 171
    superexp                       shift and go to state 99
    exp                            shift and go to state 100
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    vcte                           shift and go to state 103
    id                             shift and go to state 97

state 150

    (42) condicion -> SI OPENPAR megaexp CLOSEPAR . entonces bloque_entonces
    (43) entonces -> . ENTONCES

    ENTONCES        shift and go to state 173

    entonces                       shift and go to state 172

state 151

    (48) func_void -> func_call_id OPENPAR func_call_params CLOSEPAR . SEMICOLON

    SEMICOLON       shift and go to state 174


state 152

    (50) func_call_params -> func_call_params COMMA . func_call_params
    (50) func_call_params -> . func_call_params COMMA func_call_params
    (51) func_call_params -> . empty
    (52) func_call_params -> . megaexp
    (110) empty -> .
    (70) megaexp -> . superexp
    (71) megaexp -> . megaexp boolean_op superexp
    (72) superexp -> . exp
    (73) superexp -> . superexp logical_op exp
    (74) exp -> . termino
    (75) exp -> . exp sums termino
    (76) termino -> . factor
    (77) termino -> . termino multdiv factor
    (78) factor -> . vcte
    (79) factor -> . openpar megaexp closepar
    (80) factor -> . unary_ops vcte
    (81) factor -> . unary_ops openpar megaexp closepar
    (84) vcte -> . id
    (88) vcte -> . CTEI
    (89) vcte -> . CTEF
    (90) vcte -> . TRUE
    (91) vcte -> . FALSE
    (92) vcte -> . CTEC
    (82) openpar -> . OPENPAR
    (105) unary_ops -> . MINUS
    (106) unary_ops -> . PLUS
    (107) unary_ops -> . DETERM
    (108) unary_ops -> . TRANSPOSE
    (109) unary_ops -> . INVERSE
    (85) id -> . ID
    (86) id -> . ID OPENBRAC exp CLOSEBRAC
    (87) id -> . ID OPENBRAC exp CLOSEBRAC OPENBRAC exp CLOSEBRAC

    COMMA           reduce using rule 110 (empty -> .)
    CLOSEPAR        reduce using rule 110 (empty -> .)
    CTEI            shift and go to state 106
    CTEF            shift and go to state 107
    TRUE            shift and go to state 108
    FALSE           shift and go to state 109
    CTEC            shift and go to state 110
    OPENPAR         shift and go to state 111
    MINUS           shift and go to state 112
    PLUS            shift and go to state 113
    DETERM          shift and go to state 114
    TRANSPOSE       shift and go to state 115
    INVERSE         shift and go to state 116
    ID              shift and go to state 117

    func_call_params               shift and go to state 175
    empty                          shift and go to state 120
    megaexp                        shift and go to state 121
    superexp                       shift and go to state 99
    exp                            shift and go to state 100
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    vcte                           shift and go to state 103
    openpar                        shift and go to state 104
    unary_ops                      shift and go to state 105
    id                             shift and go to state 97

state 153

    (62) retorno -> RETORNO OPENPAR megaexp CLOSEPAR . SEMICOLON

    SEMICOLON       shift and go to state 176


state 154

    (53) escribe -> QUACKOUT OPENPAR print_options CLOSEPAR . SEMICOLON

    SEMICOLON       shift and go to state 177


state 155

    (54) print_options -> CTES more_print .

    CLOSEPAR        reduce using rule 54 (print_options -> CTES more_print .)


state 156

    (56) more_print -> COMMA . CTES
    (57) more_print -> COMMA . megaexp
    (70) megaexp -> . superexp
    (71) megaexp -> . megaexp boolean_op superexp
    (72) superexp -> . exp
    (73) superexp -> . superexp logical_op exp
    (74) exp -> . termino
    (75) exp -> . exp sums termino
    (76) termino -> . factor
    (77) termino -> . termino multdiv factor
    (78) factor -> . vcte
    (79) factor -> . openpar megaexp closepar
    (80) factor -> . unary_ops vcte
    (81) factor -> . unary_ops openpar megaexp closepar
    (84) vcte -> . id
    (88) vcte -> . CTEI
    (89) vcte -> . CTEF
    (90) vcte -> . TRUE
    (91) vcte -> . FALSE
    (92) vcte -> . CTEC
    (82) openpar -> . OPENPAR
    (105) unary_ops -> . MINUS
    (106) unary_ops -> . PLUS
    (107) unary_ops -> . DETERM
    (108) unary_ops -> . TRANSPOSE
    (109) unary_ops -> . INVERSE
    (85) id -> . ID
    (86) id -> . ID OPENBRAC exp CLOSEBRAC
    (87) id -> . ID OPENBRAC exp CLOSEBRAC OPENBRAC exp CLOSEBRAC

    CTES            shift and go to state 178
    CTEI            shift and go to state 106
    CTEF            shift and go to state 107
    TRUE            shift and go to state 108
    FALSE           shift and go to state 109
    CTEC            shift and go to state 110
    OPENPAR         shift and go to state 111
    MINUS           shift and go to state 112
    PLUS            shift and go to state 113
    DETERM          shift and go to state 114
    TRANSPOSE       shift and go to state 115
    INVERSE         shift and go to state 116
    ID              shift and go to state 117

    megaexp                        shift and go to state 179
    superexp                       shift and go to state 99
    exp                            shift and go to state 100
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    vcte                           shift and go to state 103
    openpar                        shift and go to state 104
    unary_ops                      shift and go to state 105
    id                             shift and go to state 97

state 157

    (58) more_print -> empty .

    CLOSEPAR        reduce using rule 58 (more_print -> empty .)


state 158

    (55) print_options -> megaexp more_print .

    CLOSEPAR        reduce using rule 55 (print_options -> megaexp more_print .)


state 159

    (59) lee -> QUACKIN OPENPAR ID read_more . CLOSEPAR SEMICOLON

    CLOSEPAR        shift and go to state 180


state 160

    (60) read_more -> COMMA . ID read_more

    ID              shift and go to state 181


state 161

    (61) read_more -> empty .

    CLOSEPAR        reduce using rule 61 (read_more -> empty .)


state 162

    (86) id -> ID OPENBRAC exp CLOSEBRAC .
    (87) id -> ID OPENBRAC exp CLOSEBRAC . OPENBRAC exp CLOSEBRAC

    ASSIGN          reduce using rule 86 (id -> ID OPENBRAC exp CLOSEBRAC .)
    TIMES           reduce using rule 86 (id -> ID OPENBRAC exp CLOSEBRAC .)
    DIVIDE          reduce using rule 86 (id -> ID OPENBRAC exp CLOSEBRAC .)
    MINUS           reduce using rule 86 (id -> ID OPENBRAC exp CLOSEBRAC .)
    PLUS            reduce using rule 86 (id -> ID OPENBRAC exp CLOSEBRAC .)
    GT              reduce using rule 86 (id -> ID OPENBRAC exp CLOSEBRAC .)
    GTE             reduce using rule 86 (id -> ID OPENBRAC exp CLOSEBRAC .)
    LT              reduce using rule 86 (id -> ID OPENBRAC exp CLOSEBRAC .)
    LTE             reduce using rule 86 (id -> ID OPENBRAC exp CLOSEBRAC .)
    NEQ             reduce using rule 86 (id -> ID OPENBRAC exp CLOSEBRAC .)
    EQ              reduce using rule 86 (id -> ID OPENBRAC exp CLOSEBRAC .)
    SEMICOLON       reduce using rule 86 (id -> ID OPENBRAC exp CLOSEBRAC .)
    OR              reduce using rule 86 (id -> ID OPENBRAC exp CLOSEBRAC .)
    AND             reduce using rule 86 (id -> ID OPENBRAC exp CLOSEBRAC .)
    CLOSEPAR        reduce using rule 86 (id -> ID OPENBRAC exp CLOSEBRAC .)
    COMMA           reduce using rule 86 (id -> ID OPENBRAC exp CLOSEBRAC .)
    CLOSEBRAC       reduce using rule 86 (id -> ID OPENBRAC exp CLOSEBRAC .)
    HASTA           reduce using rule 86 (id -> ID OPENBRAC exp CLOSEBRAC .)
    HACER           reduce using rule 86 (id -> ID OPENBRAC exp CLOSEBRAC .)
    OPENBRAC        shift and go to state 182


state 163

    (63) desde -> DESDE forId ASSIGN exp . hasta exp hacer bloque
    (75) exp -> exp . sums termino
    (65) hasta -> . HASTA
    (101) sums -> . MINUS
    (102) sums -> . PLUS

    HASTA           shift and go to state 184
    MINUS           shift and go to state 142
    PLUS            shift and go to state 143

    hasta                          shift and go to state 183
    sums                           shift and go to state 141

state 164

    (67) mientras_estatuto -> mientras OPENPAR megaexp CLOSEPAR . haz bloque
    (69) haz -> . HAZ

    HAZ             shift and go to state 186

    haz                            shift and go to state 185

state 165

    (71) megaexp -> megaexp boolean_op superexp .
    (73) superexp -> superexp . logical_op exp
    (95) logical_op -> . GT
    (96) logical_op -> . GTE
    (97) logical_op -> . LT
    (98) logical_op -> . LTE
    (99) logical_op -> . NEQ
    (100) logical_op -> . EQ

    SEMICOLON       reduce using rule 71 (megaexp -> megaexp boolean_op superexp .)
    OR              reduce using rule 71 (megaexp -> megaexp boolean_op superexp .)
    AND             reduce using rule 71 (megaexp -> megaexp boolean_op superexp .)
    CLOSEPAR        reduce using rule 71 (megaexp -> megaexp boolean_op superexp .)
    COMMA           reduce using rule 71 (megaexp -> megaexp boolean_op superexp .)
    GT              shift and go to state 135
    GTE             shift and go to state 136
    LT              shift and go to state 137
    LTE             shift and go to state 138
    NEQ             shift and go to state 139
    EQ              shift and go to state 140

    logical_op                     shift and go to state 134

state 166

    (73) superexp -> superexp logical_op exp .
    (75) exp -> exp . sums termino
    (101) sums -> . MINUS
    (102) sums -> . PLUS

    GT              reduce using rule 73 (superexp -> superexp logical_op exp .)
    GTE             reduce using rule 73 (superexp -> superexp logical_op exp .)
    LT              reduce using rule 73 (superexp -> superexp logical_op exp .)
    LTE             reduce using rule 73 (superexp -> superexp logical_op exp .)
    NEQ             reduce using rule 73 (superexp -> superexp logical_op exp .)
    EQ              reduce using rule 73 (superexp -> superexp logical_op exp .)
    SEMICOLON       reduce using rule 73 (superexp -> superexp logical_op exp .)
    OR              reduce using rule 73 (superexp -> superexp logical_op exp .)
    AND             reduce using rule 73 (superexp -> superexp logical_op exp .)
    CLOSEPAR        reduce using rule 73 (superexp -> superexp logical_op exp .)
    COMMA           reduce using rule 73 (superexp -> superexp logical_op exp .)
    MINUS           shift and go to state 142
    PLUS            shift and go to state 143

    sums                           shift and go to state 141

state 167

    (75) exp -> exp sums termino .
    (77) termino -> termino . multdiv factor
    (103) multdiv -> . TIMES
    (104) multdiv -> . DIVIDE

    MINUS           reduce using rule 75 (exp -> exp sums termino .)
    PLUS            reduce using rule 75 (exp -> exp sums termino .)
    GT              reduce using rule 75 (exp -> exp sums termino .)
    GTE             reduce using rule 75 (exp -> exp sums termino .)
    LT              reduce using rule 75 (exp -> exp sums termino .)
    LTE             reduce using rule 75 (exp -> exp sums termino .)
    NEQ             reduce using rule 75 (exp -> exp sums termino .)
    EQ              reduce using rule 75 (exp -> exp sums termino .)
    SEMICOLON       reduce using rule 75 (exp -> exp sums termino .)
    OR              reduce using rule 75 (exp -> exp sums termino .)
    AND             reduce using rule 75 (exp -> exp sums termino .)
    CLOSEPAR        reduce using rule 75 (exp -> exp sums termino .)
    COMMA           reduce using rule 75 (exp -> exp sums termino .)
    CLOSEBRAC       reduce using rule 75 (exp -> exp sums termino .)
    HASTA           reduce using rule 75 (exp -> exp sums termino .)
    HACER           reduce using rule 75 (exp -> exp sums termino .)
    TIMES           shift and go to state 145
    DIVIDE          shift and go to state 146

    multdiv                        shift and go to state 144

state 168

    (77) termino -> termino multdiv factor .

    TIMES           reduce using rule 77 (termino -> termino multdiv factor .)
    DIVIDE          reduce using rule 77 (termino -> termino multdiv factor .)
    MINUS           reduce using rule 77 (termino -> termino multdiv factor .)
    PLUS            reduce using rule 77 (termino -> termino multdiv factor .)
    GT              reduce using rule 77 (termino -> termino multdiv factor .)
    GTE             reduce using rule 77 (termino -> termino multdiv factor .)
    LT              reduce using rule 77 (termino -> termino multdiv factor .)
    LTE             reduce using rule 77 (termino -> termino multdiv factor .)
    NEQ             reduce using rule 77 (termino -> termino multdiv factor .)
    EQ              reduce using rule 77 (termino -> termino multdiv factor .)
    SEMICOLON       reduce using rule 77 (termino -> termino multdiv factor .)
    OR              reduce using rule 77 (termino -> termino multdiv factor .)
    AND             reduce using rule 77 (termino -> termino multdiv factor .)
    CLOSEPAR        reduce using rule 77 (termino -> termino multdiv factor .)
    COMMA           reduce using rule 77 (termino -> termino multdiv factor .)
    CLOSEBRAC       reduce using rule 77 (termino -> termino multdiv factor .)
    HASTA           reduce using rule 77 (termino -> termino multdiv factor .)
    HACER           reduce using rule 77 (termino -> termino multdiv factor .)


state 169

    (79) factor -> openpar megaexp closepar .

    TIMES           reduce using rule 79 (factor -> openpar megaexp closepar .)
    DIVIDE          reduce using rule 79 (factor -> openpar megaexp closepar .)
    MINUS           reduce using rule 79 (factor -> openpar megaexp closepar .)
    PLUS            reduce using rule 79 (factor -> openpar megaexp closepar .)
    GT              reduce using rule 79 (factor -> openpar megaexp closepar .)
    GTE             reduce using rule 79 (factor -> openpar megaexp closepar .)
    LT              reduce using rule 79 (factor -> openpar megaexp closepar .)
    LTE             reduce using rule 79 (factor -> openpar megaexp closepar .)
    NEQ             reduce using rule 79 (factor -> openpar megaexp closepar .)
    EQ              reduce using rule 79 (factor -> openpar megaexp closepar .)
    SEMICOLON       reduce using rule 79 (factor -> openpar megaexp closepar .)
    OR              reduce using rule 79 (factor -> openpar megaexp closepar .)
    AND             reduce using rule 79 (factor -> openpar megaexp closepar .)
    CLOSEPAR        reduce using rule 79 (factor -> openpar megaexp closepar .)
    COMMA           reduce using rule 79 (factor -> openpar megaexp closepar .)
    CLOSEBRAC       reduce using rule 79 (factor -> openpar megaexp closepar .)
    HASTA           reduce using rule 79 (factor -> openpar megaexp closepar .)
    HACER           reduce using rule 79 (factor -> openpar megaexp closepar .)


state 170

    (83) closepar -> CLOSEPAR .

    TIMES           reduce using rule 83 (closepar -> CLOSEPAR .)
    DIVIDE          reduce using rule 83 (closepar -> CLOSEPAR .)
    MINUS           reduce using rule 83 (closepar -> CLOSEPAR .)
    PLUS            reduce using rule 83 (closepar -> CLOSEPAR .)
    GT              reduce using rule 83 (closepar -> CLOSEPAR .)
    GTE             reduce using rule 83 (closepar -> CLOSEPAR .)
    LT              reduce using rule 83 (closepar -> CLOSEPAR .)
    LTE             reduce using rule 83 (closepar -> CLOSEPAR .)
    NEQ             reduce using rule 83 (closepar -> CLOSEPAR .)
    EQ              reduce using rule 83 (closepar -> CLOSEPAR .)
    SEMICOLON       reduce using rule 83 (closepar -> CLOSEPAR .)
    OR              reduce using rule 83 (closepar -> CLOSEPAR .)
    AND             reduce using rule 83 (closepar -> CLOSEPAR .)
    CLOSEPAR        reduce using rule 83 (closepar -> CLOSEPAR .)
    COMMA           reduce using rule 83 (closepar -> CLOSEPAR .)
    CLOSEBRAC       reduce using rule 83 (closepar -> CLOSEPAR .)
    HASTA           reduce using rule 83 (closepar -> CLOSEPAR .)
    HACER           reduce using rule 83 (closepar -> CLOSEPAR .)


state 171

    (81) factor -> unary_ops openpar megaexp . closepar
    (71) megaexp -> megaexp . boolean_op superexp
    (83) closepar -> . CLOSEPAR
    (93) boolean_op -> . OR
    (94) boolean_op -> . AND

    CLOSEPAR        shift and go to state 170
    OR              shift and go to state 132
    AND             shift and go to state 133

    closepar                       shift and go to state 187
    boolean_op                     shift and go to state 131

state 172

    (42) condicion -> SI OPENPAR megaexp CLOSEPAR entonces . bloque_entonces
    (44) bloque_entonces -> . bloque bloque_sino
    (30) bloque -> . LCURLYB estatutos_rec RCURLYB

    LCURLYB         shift and go to state 190

    bloque_entonces                shift and go to state 188
    bloque                         shift and go to state 189

state 173

    (43) entonces -> ENTONCES .

    LCURLYB         reduce using rule 43 (entonces -> ENTONCES .)


state 174

    (48) func_void -> func_call_id OPENPAR func_call_params CLOSEPAR SEMICOLON .

    SI              reduce using rule 48 (func_void -> func_call_id OPENPAR func_call_params CLOSEPAR SEMICOLON .)
    RETORNO         reduce using rule 48 (func_void -> func_call_id OPENPAR func_call_params CLOSEPAR SEMICOLON .)
    QUACKOUT        reduce using rule 48 (func_void -> func_call_id OPENPAR func_call_params CLOSEPAR SEMICOLON .)
    QUACKIN         reduce using rule 48 (func_void -> func_call_id OPENPAR func_call_params CLOSEPAR SEMICOLON .)
    DESDE           reduce using rule 48 (func_void -> func_call_id OPENPAR func_call_params CLOSEPAR SEMICOLON .)
    ID              reduce using rule 48 (func_void -> func_call_id OPENPAR func_call_params CLOSEPAR SEMICOLON .)
    MIENTRAS        reduce using rule 48 (func_void -> func_call_id OPENPAR func_call_params CLOSEPAR SEMICOLON .)
    RCURLYB         reduce using rule 48 (func_void -> func_call_id OPENPAR func_call_params CLOSEPAR SEMICOLON .)


state 175

    (50) func_call_params -> func_call_params COMMA func_call_params .
    (50) func_call_params -> func_call_params . COMMA func_call_params

    CLOSEPAR        reduce using rule 50 (func_call_params -> func_call_params COMMA func_call_params .)
    COMMA           reduce using rule 50 (func_call_params -> func_call_params COMMA func_call_params .)

  ! COMMA           [ shift and go to state 152 ]


state 176

    (62) retorno -> RETORNO OPENPAR megaexp CLOSEPAR SEMICOLON .

    SI              reduce using rule 62 (retorno -> RETORNO OPENPAR megaexp CLOSEPAR SEMICOLON .)
    RETORNO         reduce using rule 62 (retorno -> RETORNO OPENPAR megaexp CLOSEPAR SEMICOLON .)
    QUACKOUT        reduce using rule 62 (retorno -> RETORNO OPENPAR megaexp CLOSEPAR SEMICOLON .)
    QUACKIN         reduce using rule 62 (retorno -> RETORNO OPENPAR megaexp CLOSEPAR SEMICOLON .)
    DESDE           reduce using rule 62 (retorno -> RETORNO OPENPAR megaexp CLOSEPAR SEMICOLON .)
    ID              reduce using rule 62 (retorno -> RETORNO OPENPAR megaexp CLOSEPAR SEMICOLON .)
    MIENTRAS        reduce using rule 62 (retorno -> RETORNO OPENPAR megaexp CLOSEPAR SEMICOLON .)
    RCURLYB         reduce using rule 62 (retorno -> RETORNO OPENPAR megaexp CLOSEPAR SEMICOLON .)


state 177

    (53) escribe -> QUACKOUT OPENPAR print_options CLOSEPAR SEMICOLON .

    SI              reduce using rule 53 (escribe -> QUACKOUT OPENPAR print_options CLOSEPAR SEMICOLON .)
    RETORNO         reduce using rule 53 (escribe -> QUACKOUT OPENPAR print_options CLOSEPAR SEMICOLON .)
    QUACKOUT        reduce using rule 53 (escribe -> QUACKOUT OPENPAR print_options CLOSEPAR SEMICOLON .)
    QUACKIN         reduce using rule 53 (escribe -> QUACKOUT OPENPAR print_options CLOSEPAR SEMICOLON .)
    DESDE           reduce using rule 53 (escribe -> QUACKOUT OPENPAR print_options CLOSEPAR SEMICOLON .)
    ID              reduce using rule 53 (escribe -> QUACKOUT OPENPAR print_options CLOSEPAR SEMICOLON .)
    MIENTRAS        reduce using rule 53 (escribe -> QUACKOUT OPENPAR print_options CLOSEPAR SEMICOLON .)
    RCURLYB         reduce using rule 53 (escribe -> QUACKOUT OPENPAR print_options CLOSEPAR SEMICOLON .)


state 178

    (56) more_print -> COMMA CTES .

    CLOSEPAR        reduce using rule 56 (more_print -> COMMA CTES .)


state 179

    (57) more_print -> COMMA megaexp .
    (71) megaexp -> megaexp . boolean_op superexp
    (93) boolean_op -> . OR
    (94) boolean_op -> . AND

    CLOSEPAR        reduce using rule 57 (more_print -> COMMA megaexp .)
    OR              shift and go to state 132
    AND             shift and go to state 133

    boolean_op                     shift and go to state 131

state 180

    (59) lee -> QUACKIN OPENPAR ID read_more CLOSEPAR . SEMICOLON

    SEMICOLON       shift and go to state 191


state 181

    (60) read_more -> COMMA ID . read_more
    (60) read_more -> . COMMA ID read_more
    (61) read_more -> . empty
    (110) empty -> .

    COMMA           shift and go to state 160
    CLOSEPAR        reduce using rule 110 (empty -> .)

    read_more                      shift and go to state 192
    empty                          shift and go to state 161

state 182

    (87) id -> ID OPENBRAC exp CLOSEBRAC OPENBRAC . exp CLOSEBRAC
    (74) exp -> . termino
    (75) exp -> . exp sums termino
    (76) termino -> . factor
    (77) termino -> . termino multdiv factor
    (78) factor -> . vcte
    (79) factor -> . openpar megaexp closepar
    (80) factor -> . unary_ops vcte
    (81) factor -> . unary_ops openpar megaexp closepar
    (84) vcte -> . id
    (88) vcte -> . CTEI
    (89) vcte -> . CTEF
    (90) vcte -> . TRUE
    (91) vcte -> . FALSE
    (92) vcte -> . CTEC
    (82) openpar -> . OPENPAR
    (105) unary_ops -> . MINUS
    (106) unary_ops -> . PLUS
    (107) unary_ops -> . DETERM
    (108) unary_ops -> . TRANSPOSE
    (109) unary_ops -> . INVERSE
    (85) id -> . ID
    (86) id -> . ID OPENBRAC exp CLOSEBRAC
    (87) id -> . ID OPENBRAC exp CLOSEBRAC OPENBRAC exp CLOSEBRAC

    CTEI            shift and go to state 106
    CTEF            shift and go to state 107
    TRUE            shift and go to state 108
    FALSE           shift and go to state 109
    CTEC            shift and go to state 110
    OPENPAR         shift and go to state 111
    MINUS           shift and go to state 112
    PLUS            shift and go to state 113
    DETERM          shift and go to state 114
    TRANSPOSE       shift and go to state 115
    INVERSE         shift and go to state 116
    ID              shift and go to state 117

    exp                            shift and go to state 193
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    vcte                           shift and go to state 103
    openpar                        shift and go to state 104
    unary_ops                      shift and go to state 105
    id                             shift and go to state 97

state 183

    (63) desde -> DESDE forId ASSIGN exp hasta . exp hacer bloque
    (74) exp -> . termino
    (75) exp -> . exp sums termino
    (76) termino -> . factor
    (77) termino -> . termino multdiv factor
    (78) factor -> . vcte
    (79) factor -> . openpar megaexp closepar
    (80) factor -> . unary_ops vcte
    (81) factor -> . unary_ops openpar megaexp closepar
    (84) vcte -> . id
    (88) vcte -> . CTEI
    (89) vcte -> . CTEF
    (90) vcte -> . TRUE
    (91) vcte -> . FALSE
    (92) vcte -> . CTEC
    (82) openpar -> . OPENPAR
    (105) unary_ops -> . MINUS
    (106) unary_ops -> . PLUS
    (107) unary_ops -> . DETERM
    (108) unary_ops -> . TRANSPOSE
    (109) unary_ops -> . INVERSE
    (85) id -> . ID
    (86) id -> . ID OPENBRAC exp CLOSEBRAC
    (87) id -> . ID OPENBRAC exp CLOSEBRAC OPENBRAC exp CLOSEBRAC

    CTEI            shift and go to state 106
    CTEF            shift and go to state 107
    TRUE            shift and go to state 108
    FALSE           shift and go to state 109
    CTEC            shift and go to state 110
    OPENPAR         shift and go to state 111
    MINUS           shift and go to state 112
    PLUS            shift and go to state 113
    DETERM          shift and go to state 114
    TRANSPOSE       shift and go to state 115
    INVERSE         shift and go to state 116
    ID              shift and go to state 117

    exp                            shift and go to state 194
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    vcte                           shift and go to state 103
    openpar                        shift and go to state 104
    unary_ops                      shift and go to state 105
    id                             shift and go to state 97

state 184

    (65) hasta -> HASTA .

    CTEI            reduce using rule 65 (hasta -> HASTA .)
    CTEF            reduce using rule 65 (hasta -> HASTA .)
    TRUE            reduce using rule 65 (hasta -> HASTA .)
    FALSE           reduce using rule 65 (hasta -> HASTA .)
    CTEC            reduce using rule 65 (hasta -> HASTA .)
    OPENPAR         reduce using rule 65 (hasta -> HASTA .)
    MINUS           reduce using rule 65 (hasta -> HASTA .)
    PLUS            reduce using rule 65 (hasta -> HASTA .)
    DETERM          reduce using rule 65 (hasta -> HASTA .)
    TRANSPOSE       reduce using rule 65 (hasta -> HASTA .)
    INVERSE         reduce using rule 65 (hasta -> HASTA .)
    ID              reduce using rule 65 (hasta -> HASTA .)


state 185

    (67) mientras_estatuto -> mientras OPENPAR megaexp CLOSEPAR haz . bloque
    (30) bloque -> . LCURLYB estatutos_rec RCURLYB

    LCURLYB         shift and go to state 190

    bloque                         shift and go to state 195

state 186

    (69) haz -> HAZ .

    LCURLYB         reduce using rule 69 (haz -> HAZ .)


state 187

    (81) factor -> unary_ops openpar megaexp closepar .

    TIMES           reduce using rule 81 (factor -> unary_ops openpar megaexp closepar .)
    DIVIDE          reduce using rule 81 (factor -> unary_ops openpar megaexp closepar .)
    MINUS           reduce using rule 81 (factor -> unary_ops openpar megaexp closepar .)
    PLUS            reduce using rule 81 (factor -> unary_ops openpar megaexp closepar .)
    GT              reduce using rule 81 (factor -> unary_ops openpar megaexp closepar .)
    GTE             reduce using rule 81 (factor -> unary_ops openpar megaexp closepar .)
    LT              reduce using rule 81 (factor -> unary_ops openpar megaexp closepar .)
    LTE             reduce using rule 81 (factor -> unary_ops openpar megaexp closepar .)
    NEQ             reduce using rule 81 (factor -> unary_ops openpar megaexp closepar .)
    EQ              reduce using rule 81 (factor -> unary_ops openpar megaexp closepar .)
    SEMICOLON       reduce using rule 81 (factor -> unary_ops openpar megaexp closepar .)
    OR              reduce using rule 81 (factor -> unary_ops openpar megaexp closepar .)
    AND             reduce using rule 81 (factor -> unary_ops openpar megaexp closepar .)
    CLOSEPAR        reduce using rule 81 (factor -> unary_ops openpar megaexp closepar .)
    COMMA           reduce using rule 81 (factor -> unary_ops openpar megaexp closepar .)
    CLOSEBRAC       reduce using rule 81 (factor -> unary_ops openpar megaexp closepar .)
    HASTA           reduce using rule 81 (factor -> unary_ops openpar megaexp closepar .)
    HACER           reduce using rule 81 (factor -> unary_ops openpar megaexp closepar .)


state 188

    (42) condicion -> SI OPENPAR megaexp CLOSEPAR entonces bloque_entonces .

    SI              reduce using rule 42 (condicion -> SI OPENPAR megaexp CLOSEPAR entonces bloque_entonces .)
    RETORNO         reduce using rule 42 (condicion -> SI OPENPAR megaexp CLOSEPAR entonces bloque_entonces .)
    QUACKOUT        reduce using rule 42 (condicion -> SI OPENPAR megaexp CLOSEPAR entonces bloque_entonces .)
    QUACKIN         reduce using rule 42 (condicion -> SI OPENPAR megaexp CLOSEPAR entonces bloque_entonces .)
    DESDE           reduce using rule 42 (condicion -> SI OPENPAR megaexp CLOSEPAR entonces bloque_entonces .)
    ID              reduce using rule 42 (condicion -> SI OPENPAR megaexp CLOSEPAR entonces bloque_entonces .)
    MIENTRAS        reduce using rule 42 (condicion -> SI OPENPAR megaexp CLOSEPAR entonces bloque_entonces .)
    RCURLYB         reduce using rule 42 (condicion -> SI OPENPAR megaexp CLOSEPAR entonces bloque_entonces .)


state 189

    (44) bloque_entonces -> bloque . bloque_sino
    (45) bloque_sino -> . sino bloque
    (46) bloque_sino -> . empty
    (47) sino -> . SINO
    (110) empty -> .

    SINO            shift and go to state 199
    SI              reduce using rule 110 (empty -> .)
    RETORNO         reduce using rule 110 (empty -> .)
    QUACKOUT        reduce using rule 110 (empty -> .)
    QUACKIN         reduce using rule 110 (empty -> .)
    DESDE           reduce using rule 110 (empty -> .)
    ID              reduce using rule 110 (empty -> .)
    MIENTRAS        reduce using rule 110 (empty -> .)
    RCURLYB         reduce using rule 110 (empty -> .)

    bloque_sino                    shift and go to state 196
    sino                           shift and go to state 197
    empty                          shift and go to state 198

state 190

    (30) bloque -> LCURLYB . estatutos_rec RCURLYB
    (31) estatutos_rec -> . estatuto estatutos_rec
    (32) estatutos_rec -> . empty
    (33) estatuto -> . asignacion
    (34) estatuto -> . condicion
    (35) estatuto -> . func_void
    (36) estatuto -> . retorno
    (37) estatuto -> . escribe
    (38) estatuto -> . lee
    (39) estatuto -> . desde
    (40) estatuto -> . mientras_estatuto
    (110) empty -> .
    (41) asignacion -> . id ASSIGN megaexp SEMICOLON
    (42) condicion -> . SI OPENPAR megaexp CLOSEPAR entonces bloque_entonces
    (48) func_void -> . func_call_id OPENPAR func_call_params CLOSEPAR SEMICOLON
    (62) retorno -> . RETORNO OPENPAR megaexp CLOSEPAR SEMICOLON
    (53) escribe -> . QUACKOUT OPENPAR print_options CLOSEPAR SEMICOLON
    (59) lee -> . QUACKIN OPENPAR ID read_more CLOSEPAR SEMICOLON
    (63) desde -> . DESDE forId ASSIGN exp hasta exp hacer bloque
    (67) mientras_estatuto -> . mientras OPENPAR megaexp CLOSEPAR haz bloque
    (85) id -> . ID
    (86) id -> . ID OPENBRAC exp CLOSEBRAC
    (87) id -> . ID OPENBRAC exp CLOSEBRAC OPENBRAC exp CLOSEBRAC
    (49) func_call_id -> . ID
    (68) mientras -> . MIENTRAS

    RCURLYB         reduce using rule 110 (empty -> .)
    SI              shift and go to state 73
    RETORNO         shift and go to state 75
    QUACKOUT        shift and go to state 76
    QUACKIN         shift and go to state 77
    DESDE           shift and go to state 79
    ID              shift and go to state 78
    MIENTRAS        shift and go to state 81

    estatutos_rec                  shift and go to state 200
    estatuto                       shift and go to state 62
    empty                          shift and go to state 63
    asignacion                     shift and go to state 64
    condicion                      shift and go to state 65
    func_void                      shift and go to state 66
    retorno                        shift and go to state 67
    escribe                        shift and go to state 68
    lee                            shift and go to state 69
    desde                          shift and go to state 70
    mientras_estatuto              shift and go to state 71
    id                             shift and go to state 72
    func_call_id                   shift and go to state 74
    mientras                       shift and go to state 80

state 191

    (59) lee -> QUACKIN OPENPAR ID read_more CLOSEPAR SEMICOLON .

    SI              reduce using rule 59 (lee -> QUACKIN OPENPAR ID read_more CLOSEPAR SEMICOLON .)
    RETORNO         reduce using rule 59 (lee -> QUACKIN OPENPAR ID read_more CLOSEPAR SEMICOLON .)
    QUACKOUT        reduce using rule 59 (lee -> QUACKIN OPENPAR ID read_more CLOSEPAR SEMICOLON .)
    QUACKIN         reduce using rule 59 (lee -> QUACKIN OPENPAR ID read_more CLOSEPAR SEMICOLON .)
    DESDE           reduce using rule 59 (lee -> QUACKIN OPENPAR ID read_more CLOSEPAR SEMICOLON .)
    ID              reduce using rule 59 (lee -> QUACKIN OPENPAR ID read_more CLOSEPAR SEMICOLON .)
    MIENTRAS        reduce using rule 59 (lee -> QUACKIN OPENPAR ID read_more CLOSEPAR SEMICOLON .)
    RCURLYB         reduce using rule 59 (lee -> QUACKIN OPENPAR ID read_more CLOSEPAR SEMICOLON .)


state 192

    (60) read_more -> COMMA ID read_more .

    CLOSEPAR        reduce using rule 60 (read_more -> COMMA ID read_more .)


state 193

    (87) id -> ID OPENBRAC exp CLOSEBRAC OPENBRAC exp . CLOSEBRAC
    (75) exp -> exp . sums termino
    (101) sums -> . MINUS
    (102) sums -> . PLUS

    CLOSEBRAC       shift and go to state 201
    MINUS           shift and go to state 142
    PLUS            shift and go to state 143

    sums                           shift and go to state 141

state 194

    (63) desde -> DESDE forId ASSIGN exp hasta exp . hacer bloque
    (75) exp -> exp . sums termino
    (66) hacer -> . HACER
    (101) sums -> . MINUS
    (102) sums -> . PLUS

    HACER           shift and go to state 203
    MINUS           shift and go to state 142
    PLUS            shift and go to state 143

    hacer                          shift and go to state 202
    sums                           shift and go to state 141

state 195

    (67) mientras_estatuto -> mientras OPENPAR megaexp CLOSEPAR haz bloque .

    SI              reduce using rule 67 (mientras_estatuto -> mientras OPENPAR megaexp CLOSEPAR haz bloque .)
    RETORNO         reduce using rule 67 (mientras_estatuto -> mientras OPENPAR megaexp CLOSEPAR haz bloque .)
    QUACKOUT        reduce using rule 67 (mientras_estatuto -> mientras OPENPAR megaexp CLOSEPAR haz bloque .)
    QUACKIN         reduce using rule 67 (mientras_estatuto -> mientras OPENPAR megaexp CLOSEPAR haz bloque .)
    DESDE           reduce using rule 67 (mientras_estatuto -> mientras OPENPAR megaexp CLOSEPAR haz bloque .)
    ID              reduce using rule 67 (mientras_estatuto -> mientras OPENPAR megaexp CLOSEPAR haz bloque .)
    MIENTRAS        reduce using rule 67 (mientras_estatuto -> mientras OPENPAR megaexp CLOSEPAR haz bloque .)
    RCURLYB         reduce using rule 67 (mientras_estatuto -> mientras OPENPAR megaexp CLOSEPAR haz bloque .)


state 196

    (44) bloque_entonces -> bloque bloque_sino .

    SI              reduce using rule 44 (bloque_entonces -> bloque bloque_sino .)
    RETORNO         reduce using rule 44 (bloque_entonces -> bloque bloque_sino .)
    QUACKOUT        reduce using rule 44 (bloque_entonces -> bloque bloque_sino .)
    QUACKIN         reduce using rule 44 (bloque_entonces -> bloque bloque_sino .)
    DESDE           reduce using rule 44 (bloque_entonces -> bloque bloque_sino .)
    ID              reduce using rule 44 (bloque_entonces -> bloque bloque_sino .)
    MIENTRAS        reduce using rule 44 (bloque_entonces -> bloque bloque_sino .)
    RCURLYB         reduce using rule 44 (bloque_entonces -> bloque bloque_sino .)


state 197

    (45) bloque_sino -> sino . bloque
    (30) bloque -> . LCURLYB estatutos_rec RCURLYB

    LCURLYB         shift and go to state 190

    bloque                         shift and go to state 204

state 198

    (46) bloque_sino -> empty .

    SI              reduce using rule 46 (bloque_sino -> empty .)
    RETORNO         reduce using rule 46 (bloque_sino -> empty .)
    QUACKOUT        reduce using rule 46 (bloque_sino -> empty .)
    QUACKIN         reduce using rule 46 (bloque_sino -> empty .)
    DESDE           reduce using rule 46 (bloque_sino -> empty .)
    ID              reduce using rule 46 (bloque_sino -> empty .)
    MIENTRAS        reduce using rule 46 (bloque_sino -> empty .)
    RCURLYB         reduce using rule 46 (bloque_sino -> empty .)


state 199

    (47) sino -> SINO .

    LCURLYB         reduce using rule 47 (sino -> SINO .)


state 200

    (30) bloque -> LCURLYB estatutos_rec . RCURLYB

    RCURLYB         shift and go to state 205


state 201

    (87) id -> ID OPENBRAC exp CLOSEBRAC OPENBRAC exp CLOSEBRAC .

    ASSIGN          reduce using rule 87 (id -> ID OPENBRAC exp CLOSEBRAC OPENBRAC exp CLOSEBRAC .)
    TIMES           reduce using rule 87 (id -> ID OPENBRAC exp CLOSEBRAC OPENBRAC exp CLOSEBRAC .)
    DIVIDE          reduce using rule 87 (id -> ID OPENBRAC exp CLOSEBRAC OPENBRAC exp CLOSEBRAC .)
    MINUS           reduce using rule 87 (id -> ID OPENBRAC exp CLOSEBRAC OPENBRAC exp CLOSEBRAC .)
    PLUS            reduce using rule 87 (id -> ID OPENBRAC exp CLOSEBRAC OPENBRAC exp CLOSEBRAC .)
    GT              reduce using rule 87 (id -> ID OPENBRAC exp CLOSEBRAC OPENBRAC exp CLOSEBRAC .)
    GTE             reduce using rule 87 (id -> ID OPENBRAC exp CLOSEBRAC OPENBRAC exp CLOSEBRAC .)
    LT              reduce using rule 87 (id -> ID OPENBRAC exp CLOSEBRAC OPENBRAC exp CLOSEBRAC .)
    LTE             reduce using rule 87 (id -> ID OPENBRAC exp CLOSEBRAC OPENBRAC exp CLOSEBRAC .)
    NEQ             reduce using rule 87 (id -> ID OPENBRAC exp CLOSEBRAC OPENBRAC exp CLOSEBRAC .)
    EQ              reduce using rule 87 (id -> ID OPENBRAC exp CLOSEBRAC OPENBRAC exp CLOSEBRAC .)
    SEMICOLON       reduce using rule 87 (id -> ID OPENBRAC exp CLOSEBRAC OPENBRAC exp CLOSEBRAC .)
    OR              reduce using rule 87 (id -> ID OPENBRAC exp CLOSEBRAC OPENBRAC exp CLOSEBRAC .)
    AND             reduce using rule 87 (id -> ID OPENBRAC exp CLOSEBRAC OPENBRAC exp CLOSEBRAC .)
    CLOSEPAR        reduce using rule 87 (id -> ID OPENBRAC exp CLOSEBRAC OPENBRAC exp CLOSEBRAC .)
    COMMA           reduce using rule 87 (id -> ID OPENBRAC exp CLOSEBRAC OPENBRAC exp CLOSEBRAC .)
    CLOSEBRAC       reduce using rule 87 (id -> ID OPENBRAC exp CLOSEBRAC OPENBRAC exp CLOSEBRAC .)
    HASTA           reduce using rule 87 (id -> ID OPENBRAC exp CLOSEBRAC OPENBRAC exp CLOSEBRAC .)
    HACER           reduce using rule 87 (id -> ID OPENBRAC exp CLOSEBRAC OPENBRAC exp CLOSEBRAC .)


state 202

    (63) desde -> DESDE forId ASSIGN exp hasta exp hacer . bloque
    (30) bloque -> . LCURLYB estatutos_rec RCURLYB

    LCURLYB         shift and go to state 190

    bloque                         shift and go to state 206

state 203

    (66) hacer -> HACER .

    LCURLYB         reduce using rule 66 (hacer -> HACER .)


state 204

    (45) bloque_sino -> sino bloque .

    SI              reduce using rule 45 (bloque_sino -> sino bloque .)
    RETORNO         reduce using rule 45 (bloque_sino -> sino bloque .)
    QUACKOUT        reduce using rule 45 (bloque_sino -> sino bloque .)
    QUACKIN         reduce using rule 45 (bloque_sino -> sino bloque .)
    DESDE           reduce using rule 45 (bloque_sino -> sino bloque .)
    ID              reduce using rule 45 (bloque_sino -> sino bloque .)
    MIENTRAS        reduce using rule 45 (bloque_sino -> sino bloque .)
    RCURLYB         reduce using rule 45 (bloque_sino -> sino bloque .)


state 205

    (30) bloque -> LCURLYB estatutos_rec RCURLYB .

    SINO            reduce using rule 30 (bloque -> LCURLYB estatutos_rec RCURLYB .)
    SI              reduce using rule 30 (bloque -> LCURLYB estatutos_rec RCURLYB .)
    RETORNO         reduce using rule 30 (bloque -> LCURLYB estatutos_rec RCURLYB .)
    QUACKOUT        reduce using rule 30 (bloque -> LCURLYB estatutos_rec RCURLYB .)
    QUACKIN         reduce using rule 30 (bloque -> LCURLYB estatutos_rec RCURLYB .)
    DESDE           reduce using rule 30 (bloque -> LCURLYB estatutos_rec RCURLYB .)
    ID              reduce using rule 30 (bloque -> LCURLYB estatutos_rec RCURLYB .)
    MIENTRAS        reduce using rule 30 (bloque -> LCURLYB estatutos_rec RCURLYB .)
    RCURLYB         reduce using rule 30 (bloque -> LCURLYB estatutos_rec RCURLYB .)


state 206

    (63) desde -> DESDE forId ASSIGN exp hasta exp hacer bloque .

    SI              reduce using rule 63 (desde -> DESDE forId ASSIGN exp hasta exp hacer bloque .)
    RETORNO         reduce using rule 63 (desde -> DESDE forId ASSIGN exp hasta exp hacer bloque .)
    QUACKOUT        reduce using rule 63 (desde -> DESDE forId ASSIGN exp hasta exp hacer bloque .)
    QUACKIN         reduce using rule 63 (desde -> DESDE forId ASSIGN exp hasta exp hacer bloque .)
    DESDE           reduce using rule 63 (desde -> DESDE forId ASSIGN exp hasta exp hacer bloque .)
    ID              reduce using rule 63 (desde -> DESDE forId ASSIGN exp hasta exp hacer bloque .)
    MIENTRAS        reduce using rule 63 (desde -> DESDE forId ASSIGN exp hasta exp hacer bloque .)
    RCURLYB         reduce using rule 63 (desde -> DESDE forId ASSIGN exp hasta exp hacer bloque .)

