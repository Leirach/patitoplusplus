Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    ASSIGN
    BOOL
    CHAR
    CLOSEBRAC
    COLON
    COMMA
    CTES
    DESDE
    ENTONCES
    EQ
    ESCRIBE
    FLOAT
    FUNCION
    GT
    GTE
    HACER
    HASTA
    HAZ
    INT
    LCURLYB
    LEE
    LT
    LTE
    MIENTRAS
    NEQ
    OPENBRAC
    OR
    PRINCIPAL
    PROGRAMA
    RCURLYB
    RETORNO
    SEMICOLON
    SI
    SINO
    VAR

Grammar

Rule 0     S' -> exp
Rule 1     exp -> termino exp2
Rule 2     exp2 -> sums exp
Rule 3     exp2 -> empty
Rule 4     termino -> factor termino2
Rule 5     termino2 -> multdiv termino
Rule 6     termino2 -> empty
Rule 7     factor -> vcte
Rule 8     factor -> OPENPAR exp CLOSEPAR
Rule 9     vcte -> ID
Rule 10    vcte -> CTEI
Rule 11    vcte -> CTEF
Rule 12    vcte -> CTEC
Rule 13    vcte -> TRUE
Rule 14    vcte -> FALSE
Rule 15    sums -> MINUS
Rule 16    sums -> PLUS
Rule 17    multdiv -> TIMES
Rule 18    multdiv -> DIVIDE
Rule 19    empty -> <empty>

Terminals, with rules where they appear

AND                  : 
ASSIGN               : 
BOOL                 : 
CHAR                 : 
CLOSEBRAC            : 
CLOSEPAR             : 8
COLON                : 
COMMA                : 
CTEC                 : 12
CTEF                 : 11
CTEI                 : 10
CTES                 : 
DESDE                : 
DIVIDE               : 18
ENTONCES             : 
EQ                   : 
ESCRIBE              : 
FALSE                : 14
FLOAT                : 
FUNCION              : 
GT                   : 
GTE                  : 
HACER                : 
HASTA                : 
HAZ                  : 
ID                   : 9
INT                  : 
LCURLYB              : 
LEE                  : 
LT                   : 
LTE                  : 
MIENTRAS             : 
MINUS                : 15
NEQ                  : 
OPENBRAC             : 
OPENPAR              : 8
OR                   : 
PLUS                 : 16
PRINCIPAL            : 
PROGRAMA             : 
RCURLYB              : 
RETORNO              : 
SEMICOLON            : 
SI                   : 
SINO                 : 
TIMES                : 17
TRUE                 : 13
VAR                  : 
error                : 

Nonterminals, with rules where they appear

empty                : 3 6
exp                  : 2 8 0
exp2                 : 1
factor               : 4
multdiv              : 5
sums                 : 2
termino              : 1 5
termino2             : 4
vcte                 : 7

Parsing method: LALR

state 0

    (0) S' -> . exp
    (1) exp -> . termino exp2
    (4) termino -> . factor termino2
    (7) factor -> . vcte
    (8) factor -> . OPENPAR exp CLOSEPAR
    (9) vcte -> . ID
    (10) vcte -> . CTEI
    (11) vcte -> . CTEF
    (12) vcte -> . CTEC
    (13) vcte -> . TRUE
    (14) vcte -> . FALSE

    OPENPAR         shift and go to state 5
    ID              shift and go to state 6
    CTEI            shift and go to state 7
    CTEF            shift and go to state 8
    CTEC            shift and go to state 9
    TRUE            shift and go to state 10
    FALSE           shift and go to state 11

    exp                            shift and go to state 1
    termino                        shift and go to state 2
    factor                         shift and go to state 3
    vcte                           shift and go to state 4

state 1

    (0) S' -> exp .



state 2

    (1) exp -> termino . exp2
    (2) exp2 -> . sums exp
    (3) exp2 -> . empty
    (15) sums -> . MINUS
    (16) sums -> . PLUS
    (19) empty -> .

    MINUS           shift and go to state 15
    PLUS            shift and go to state 16
    $end            reduce using rule 19 (empty -> .)
    CLOSEPAR        reduce using rule 19 (empty -> .)

    exp2                           shift and go to state 12
    sums                           shift and go to state 13
    empty                          shift and go to state 14

state 3

    (4) termino -> factor . termino2
    (5) termino2 -> . multdiv termino
    (6) termino2 -> . empty
    (17) multdiv -> . TIMES
    (18) multdiv -> . DIVIDE
    (19) empty -> .

    TIMES           shift and go to state 20
    DIVIDE          shift and go to state 21
    MINUS           reduce using rule 19 (empty -> .)
    PLUS            reduce using rule 19 (empty -> .)
    $end            reduce using rule 19 (empty -> .)
    CLOSEPAR        reduce using rule 19 (empty -> .)

    termino2                       shift and go to state 17
    multdiv                        shift and go to state 18
    empty                          shift and go to state 19

state 4

    (7) factor -> vcte .

    TIMES           reduce using rule 7 (factor -> vcte .)
    DIVIDE          reduce using rule 7 (factor -> vcte .)
    MINUS           reduce using rule 7 (factor -> vcte .)
    PLUS            reduce using rule 7 (factor -> vcte .)
    $end            reduce using rule 7 (factor -> vcte .)
    CLOSEPAR        reduce using rule 7 (factor -> vcte .)


state 5

    (8) factor -> OPENPAR . exp CLOSEPAR
    (1) exp -> . termino exp2
    (4) termino -> . factor termino2
    (7) factor -> . vcte
    (8) factor -> . OPENPAR exp CLOSEPAR
    (9) vcte -> . ID
    (10) vcte -> . CTEI
    (11) vcte -> . CTEF
    (12) vcte -> . CTEC
    (13) vcte -> . TRUE
    (14) vcte -> . FALSE

    OPENPAR         shift and go to state 5
    ID              shift and go to state 6
    CTEI            shift and go to state 7
    CTEF            shift and go to state 8
    CTEC            shift and go to state 9
    TRUE            shift and go to state 10
    FALSE           shift and go to state 11

    exp                            shift and go to state 22
    termino                        shift and go to state 2
    factor                         shift and go to state 3
    vcte                           shift and go to state 4

state 6

    (9) vcte -> ID .

    TIMES           reduce using rule 9 (vcte -> ID .)
    DIVIDE          reduce using rule 9 (vcte -> ID .)
    MINUS           reduce using rule 9 (vcte -> ID .)
    PLUS            reduce using rule 9 (vcte -> ID .)
    $end            reduce using rule 9 (vcte -> ID .)
    CLOSEPAR        reduce using rule 9 (vcte -> ID .)


state 7

    (10) vcte -> CTEI .

    TIMES           reduce using rule 10 (vcte -> CTEI .)
    DIVIDE          reduce using rule 10 (vcte -> CTEI .)
    MINUS           reduce using rule 10 (vcte -> CTEI .)
    PLUS            reduce using rule 10 (vcte -> CTEI .)
    $end            reduce using rule 10 (vcte -> CTEI .)
    CLOSEPAR        reduce using rule 10 (vcte -> CTEI .)


state 8

    (11) vcte -> CTEF .

    TIMES           reduce using rule 11 (vcte -> CTEF .)
    DIVIDE          reduce using rule 11 (vcte -> CTEF .)
    MINUS           reduce using rule 11 (vcte -> CTEF .)
    PLUS            reduce using rule 11 (vcte -> CTEF .)
    $end            reduce using rule 11 (vcte -> CTEF .)
    CLOSEPAR        reduce using rule 11 (vcte -> CTEF .)


state 9

    (12) vcte -> CTEC .

    TIMES           reduce using rule 12 (vcte -> CTEC .)
    DIVIDE          reduce using rule 12 (vcte -> CTEC .)
    MINUS           reduce using rule 12 (vcte -> CTEC .)
    PLUS            reduce using rule 12 (vcte -> CTEC .)
    $end            reduce using rule 12 (vcte -> CTEC .)
    CLOSEPAR        reduce using rule 12 (vcte -> CTEC .)


state 10

    (13) vcte -> TRUE .

    TIMES           reduce using rule 13 (vcte -> TRUE .)
    DIVIDE          reduce using rule 13 (vcte -> TRUE .)
    MINUS           reduce using rule 13 (vcte -> TRUE .)
    PLUS            reduce using rule 13 (vcte -> TRUE .)
    $end            reduce using rule 13 (vcte -> TRUE .)
    CLOSEPAR        reduce using rule 13 (vcte -> TRUE .)


state 11

    (14) vcte -> FALSE .

    TIMES           reduce using rule 14 (vcte -> FALSE .)
    DIVIDE          reduce using rule 14 (vcte -> FALSE .)
    MINUS           reduce using rule 14 (vcte -> FALSE .)
    PLUS            reduce using rule 14 (vcte -> FALSE .)
    $end            reduce using rule 14 (vcte -> FALSE .)
    CLOSEPAR        reduce using rule 14 (vcte -> FALSE .)


state 12

    (1) exp -> termino exp2 .

    $end            reduce using rule 1 (exp -> termino exp2 .)
    CLOSEPAR        reduce using rule 1 (exp -> termino exp2 .)


state 13

    (2) exp2 -> sums . exp
    (1) exp -> . termino exp2
    (4) termino -> . factor termino2
    (7) factor -> . vcte
    (8) factor -> . OPENPAR exp CLOSEPAR
    (9) vcte -> . ID
    (10) vcte -> . CTEI
    (11) vcte -> . CTEF
    (12) vcte -> . CTEC
    (13) vcte -> . TRUE
    (14) vcte -> . FALSE

    OPENPAR         shift and go to state 5
    ID              shift and go to state 6
    CTEI            shift and go to state 7
    CTEF            shift and go to state 8
    CTEC            shift and go to state 9
    TRUE            shift and go to state 10
    FALSE           shift and go to state 11

    exp                            shift and go to state 23
    termino                        shift and go to state 2
    factor                         shift and go to state 3
    vcte                           shift and go to state 4

state 14

    (3) exp2 -> empty .

    $end            reduce using rule 3 (exp2 -> empty .)
    CLOSEPAR        reduce using rule 3 (exp2 -> empty .)


state 15

    (15) sums -> MINUS .

    OPENPAR         reduce using rule 15 (sums -> MINUS .)
    ID              reduce using rule 15 (sums -> MINUS .)
    CTEI            reduce using rule 15 (sums -> MINUS .)
    CTEF            reduce using rule 15 (sums -> MINUS .)
    CTEC            reduce using rule 15 (sums -> MINUS .)
    TRUE            reduce using rule 15 (sums -> MINUS .)
    FALSE           reduce using rule 15 (sums -> MINUS .)


state 16

    (16) sums -> PLUS .

    OPENPAR         reduce using rule 16 (sums -> PLUS .)
    ID              reduce using rule 16 (sums -> PLUS .)
    CTEI            reduce using rule 16 (sums -> PLUS .)
    CTEF            reduce using rule 16 (sums -> PLUS .)
    CTEC            reduce using rule 16 (sums -> PLUS .)
    TRUE            reduce using rule 16 (sums -> PLUS .)
    FALSE           reduce using rule 16 (sums -> PLUS .)


state 17

    (4) termino -> factor termino2 .

    MINUS           reduce using rule 4 (termino -> factor termino2 .)
    PLUS            reduce using rule 4 (termino -> factor termino2 .)
    $end            reduce using rule 4 (termino -> factor termino2 .)
    CLOSEPAR        reduce using rule 4 (termino -> factor termino2 .)


state 18

    (5) termino2 -> multdiv . termino
    (4) termino -> . factor termino2
    (7) factor -> . vcte
    (8) factor -> . OPENPAR exp CLOSEPAR
    (9) vcte -> . ID
    (10) vcte -> . CTEI
    (11) vcte -> . CTEF
    (12) vcte -> . CTEC
    (13) vcte -> . TRUE
    (14) vcte -> . FALSE

    OPENPAR         shift and go to state 5
    ID              shift and go to state 6
    CTEI            shift and go to state 7
    CTEF            shift and go to state 8
    CTEC            shift and go to state 9
    TRUE            shift and go to state 10
    FALSE           shift and go to state 11

    termino                        shift and go to state 24
    factor                         shift and go to state 3
    vcte                           shift and go to state 4

state 19

    (6) termino2 -> empty .

    MINUS           reduce using rule 6 (termino2 -> empty .)
    PLUS            reduce using rule 6 (termino2 -> empty .)
    $end            reduce using rule 6 (termino2 -> empty .)
    CLOSEPAR        reduce using rule 6 (termino2 -> empty .)


state 20

    (17) multdiv -> TIMES .

    OPENPAR         reduce using rule 17 (multdiv -> TIMES .)
    ID              reduce using rule 17 (multdiv -> TIMES .)
    CTEI            reduce using rule 17 (multdiv -> TIMES .)
    CTEF            reduce using rule 17 (multdiv -> TIMES .)
    CTEC            reduce using rule 17 (multdiv -> TIMES .)
    TRUE            reduce using rule 17 (multdiv -> TIMES .)
    FALSE           reduce using rule 17 (multdiv -> TIMES .)


state 21

    (18) multdiv -> DIVIDE .

    OPENPAR         reduce using rule 18 (multdiv -> DIVIDE .)
    ID              reduce using rule 18 (multdiv -> DIVIDE .)
    CTEI            reduce using rule 18 (multdiv -> DIVIDE .)
    CTEF            reduce using rule 18 (multdiv -> DIVIDE .)
    CTEC            reduce using rule 18 (multdiv -> DIVIDE .)
    TRUE            reduce using rule 18 (multdiv -> DIVIDE .)
    FALSE           reduce using rule 18 (multdiv -> DIVIDE .)


state 22

    (8) factor -> OPENPAR exp . CLOSEPAR

    CLOSEPAR        shift and go to state 25


state 23

    (2) exp2 -> sums exp .

    $end            reduce using rule 2 (exp2 -> sums exp .)
    CLOSEPAR        reduce using rule 2 (exp2 -> sums exp .)


state 24

    (5) termino2 -> multdiv termino .

    MINUS           reduce using rule 5 (termino2 -> multdiv termino .)
    PLUS            reduce using rule 5 (termino2 -> multdiv termino .)
    $end            reduce using rule 5 (termino2 -> multdiv termino .)
    CLOSEPAR        reduce using rule 5 (termino2 -> multdiv termino .)


state 25

    (8) factor -> OPENPAR exp CLOSEPAR .

    TIMES           reduce using rule 8 (factor -> OPENPAR exp CLOSEPAR .)
    DIVIDE          reduce using rule 8 (factor -> OPENPAR exp CLOSEPAR .)
    MINUS           reduce using rule 8 (factor -> OPENPAR exp CLOSEPAR .)
    PLUS            reduce using rule 8 (factor -> OPENPAR exp CLOSEPAR .)
    $end            reduce using rule 8 (factor -> OPENPAR exp CLOSEPAR .)
    CLOSEPAR        reduce using rule 8 (factor -> OPENPAR exp CLOSEPAR .)

