Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT

Grammar

Rule 0     S' -> program_declaration
Rule 1     program_declaration -> PROGRAMA ID SEMICOLON declare_vars declare_func_rec declare_main OPENPAR CLOSEPAR bloque_funcion
Rule 2     declare_main -> PRINCIPAL
Rule 3     declare_vars -> VAR vars
Rule 4     declare_vars -> empty
Rule 5     vars -> first_var more_vars SEMICOLON vars
Rule 6     vars -> empty
Rule 7     first_var -> tipo ID dimensions
Rule 8     more_vars -> more_var_id more_vars
Rule 9     more_vars -> empty
Rule 10    more_var_id -> COMMA ID dimensions
Rule 11    dimensions -> empty
Rule 12    dimensions -> OPENBRAC CTEI CLOSEBRAC
Rule 13    dimensions -> OPENBRAC CTEI CLOSEBRAC OPENBRAC CTEI CLOSEBRAC
Rule 14    declare_func_rec -> declare_func_rec declare_func
Rule 15    declare_func_rec -> empty
Rule 16    declare_func -> FUNCION func_id OPENPAR declare_func_params CLOSEPAR bloque_funcion
Rule 17    func_id -> tipo ID
Rule 18    func_id -> VOID ID
Rule 19    declare_func_params -> get_func_params more_params
Rule 20    declare_func_params -> empty
Rule 21    get_func_params -> tipo ID
Rule 22    more_params -> more_var_id more_params
Rule 23    more_params -> empty
Rule 24    more_var_id -> COMMA tipo ID
Rule 25    tipo -> INT
Rule 26    tipo -> FLOAT
Rule 27    tipo -> CHAR
Rule 28    tipo -> BOOL
Rule 29    bloque_funcion -> LCURLYB declare_vars estatutos_rec RCURLYB
Rule 30    bloque -> LCURLYB estatutos_rec RCURLYB
Rule 31    estatutos_rec -> estatuto estatutos_rec
Rule 32    estatutos_rec -> empty
Rule 33    estatuto -> asignacion SEMICOLON
Rule 34    estatuto -> condicion
Rule 35    estatuto -> func_call SEMICOLON
Rule 36    estatuto -> retorna
Rule 37    estatuto -> escribe
Rule 38    estatuto -> lee
Rule 39    estatuto -> desde
Rule 40    estatuto -> mientras_estatuto
Rule 41    asignacion -> id ASSIGN megaexp
Rule 42    condicion -> SI OPENPAR megaexp CLOSEPAR entonces bloque_entonces
Rule 43    entonces -> ENTONCES
Rule 44    bloque_entonces -> bloque bloque_sino
Rule 45    bloque_sino -> sino bloque
Rule 46    bloque_sino -> empty
Rule 47    sino -> SINO
Rule 48    func_call -> func_call_id openpar func_call_params closepar
Rule 49    func_call_id -> ID
Rule 50    func_call_params -> func_call_params COMMA func_call_params
Rule 51    func_call_params -> empty
Rule 52    func_call_params -> megaexp
Rule 53    escribe -> QUACKOUT OPENPAR print_options CLOSEPAR SEMICOLON
Rule 54    print_options -> print_options COMMA printable
Rule 55    print_options -> printable
Rule 56    printable -> megaexp
Rule 57    printable -> CTES
Rule 58    lee -> QUACKIN OPENPAR read_options CLOSEPAR SEMICOLON
Rule 59    read_options -> read_options COMMA id
Rule 60    read_options -> id
Rule 61    retorna -> RETORNA megaexp SEMICOLON
Rule 62    desde -> DESDE id ASSIGN exp hasta exp hacer bloque
Rule 63    hasta -> HASTA
Rule 64    hacer -> HACER
Rule 65    mientras_estatuto -> mientras OPENPAR megaexp CLOSEPAR haz bloque
Rule 66    mientras -> MIENTRAS
Rule 67    haz -> HAZ
Rule 68    megaexp -> superexp
Rule 69    megaexp -> megaexp boolean_op superexp
Rule 70    superexp -> exp
Rule 71    superexp -> superexp logical_op exp
Rule 72    exp -> termino
Rule 73    exp -> exp sums termino
Rule 74    termino -> factor
Rule 75    termino -> termino multdiv factor
Rule 76    factor -> vcte
Rule 77    factor -> openpar megaexp closepar
Rule 78    factor -> unary_ops vcte
Rule 79    factor -> unary_ops openpar megaexp closepar
Rule 80    openpar -> OPENPAR
Rule 81    closepar -> CLOSEPAR
Rule 82    vcte -> id
Rule 83    id -> variable
Rule 84    id -> variable dimensions_offset
Rule 85    id -> variable dimensions_offset dimensions_offset
Rule 86    variable -> ID
Rule 87    dimensions_offset -> openbrac exp closebrac
Rule 88    openbrac -> OPENBRAC
Rule 89    closebrac -> CLOSEBRAC
Rule 90    vcte -> func_call
Rule 91    vcte -> CTEI
Rule 92    vcte -> CTEF
Rule 93    vcte -> TRUE
Rule 94    vcte -> FALSE
Rule 95    vcte -> CTEC
Rule 96    boolean_op -> OR
Rule 97    boolean_op -> AND
Rule 98    logical_op -> GT
Rule 99    logical_op -> GTE
Rule 100   logical_op -> LT
Rule 101   logical_op -> LTE
Rule 102   logical_op -> NEQ
Rule 103   logical_op -> EQ
Rule 104   sums -> MINUS
Rule 105   sums -> PLUS
Rule 106   multdiv -> TIMES
Rule 107   multdiv -> DIVIDE
Rule 108   unary_ops -> MINUS
Rule 109   unary_ops -> PLUS
Rule 110   unary_ops -> DETERM
Rule 111   unary_ops -> TRANSPOSE
Rule 112   unary_ops -> INVERSE
Rule 113   empty -> <empty>

Terminals, with rules where they appear

AND                  : 97
ASSIGN               : 41 62
BOOL                 : 28
CHAR                 : 27
CLOSEBRAC            : 12 13 13 89
CLOSEPAR             : 1 16 42 53 58 65 81
COMMA                : 10 24 50 54 59
COMMENT              : 
CTEC                 : 95
CTEF                 : 92
CTEI                 : 12 13 13 91
CTES                 : 57
DESDE                : 62
DETERM               : 110
DIVIDE               : 107
ENTONCES             : 43
EQ                   : 103
FALSE                : 94
FLOAT                : 26
FUNCION              : 16
GT                   : 98
GTE                  : 99
HACER                : 64
HASTA                : 63
HAZ                  : 67
ID                   : 1 7 10 17 18 21 24 49 86
INT                  : 25
INVERSE              : 112
LCURLYB              : 29 30
LT                   : 100
LTE                  : 101
MIENTRAS             : 66
MINUS                : 104 108
NEQ                  : 102
OPENBRAC             : 12 13 13 88
OPENPAR              : 1 16 42 53 58 65 80
OR                   : 96
PLUS                 : 105 109
PRINCIPAL            : 2
PROGRAMA             : 1
QUACKIN              : 58
QUACKOUT             : 53
RCURLYB              : 29 30
RETORNA              : 61
SEMICOLON            : 1 5 33 35 53 58 61
SI                   : 42
SINO                 : 47
TIMES                : 106
TRANSPOSE            : 111
TRUE                 : 93
VAR                  : 3
VOID                 : 18
error                : 

Nonterminals, with rules where they appear

asignacion           : 33
bloque               : 44 45 62 65
bloque_entonces      : 42
bloque_funcion       : 1 16
bloque_sino          : 44
boolean_op           : 69
closebrac            : 87
closepar             : 48 77 79
condicion            : 34
declare_func         : 14
declare_func_params  : 16
declare_func_rec     : 1 14
declare_main         : 1
declare_vars         : 1 29
desde                : 39
dimensions           : 7 10
dimensions_offset    : 84 85 85
empty                : 4 6 9 11 15 20 23 32 46 51
entonces             : 42
escribe              : 37
estatuto             : 31
estatutos_rec        : 29 30 31
exp                  : 62 62 70 71 73 87
factor               : 74 75
first_var            : 5
func_call            : 35 90
func_call_id         : 48
func_call_params     : 48 50 50
func_id              : 16
get_func_params      : 19
hacer                : 62
hasta                : 62
haz                  : 65
id                   : 41 59 60 62 82
lee                  : 38
logical_op           : 71
megaexp              : 41 42 52 56 61 65 69 77 79
mientras             : 65
mientras_estatuto    : 40
more_params          : 19 22
more_var_id          : 8 22
more_vars            : 5 8
multdiv              : 75
openbrac             : 87
openpar              : 48 77 79
print_options        : 53 54
printable            : 54 55
program_declaration  : 0
read_options         : 58 59
retorna              : 36
sino                 : 45
sums                 : 73
superexp             : 68 69 71
termino              : 72 73 75
tipo                 : 7 17 21 24
unary_ops            : 78 79
variable             : 83 84 85
vars                 : 3 5
vcte                 : 76 78

Parsing method: LALR

state 0

    (0) S' -> . program_declaration
    (1) program_declaration -> . PROGRAMA ID SEMICOLON declare_vars declare_func_rec declare_main OPENPAR CLOSEPAR bloque_funcion

    PROGRAMA        shift and go to state 2

    program_declaration            shift and go to state 1

state 1

    (0) S' -> program_declaration .



state 2

    (1) program_declaration -> PROGRAMA . ID SEMICOLON declare_vars declare_func_rec declare_main OPENPAR CLOSEPAR bloque_funcion

    ID              shift and go to state 3


state 3

    (1) program_declaration -> PROGRAMA ID . SEMICOLON declare_vars declare_func_rec declare_main OPENPAR CLOSEPAR bloque_funcion

    SEMICOLON       shift and go to state 4


state 4

    (1) program_declaration -> PROGRAMA ID SEMICOLON . declare_vars declare_func_rec declare_main OPENPAR CLOSEPAR bloque_funcion
    (3) declare_vars -> . VAR vars
    (4) declare_vars -> . empty
    (113) empty -> .

    VAR             shift and go to state 6
    PRINCIPAL       reduce using rule 113 (empty -> .)
    FUNCION         reduce using rule 113 (empty -> .)

    declare_vars                   shift and go to state 5
    empty                          shift and go to state 7

state 5

    (1) program_declaration -> PROGRAMA ID SEMICOLON declare_vars . declare_func_rec declare_main OPENPAR CLOSEPAR bloque_funcion
    (14) declare_func_rec -> . declare_func_rec declare_func
    (15) declare_func_rec -> . empty
    (113) empty -> .

    PRINCIPAL       reduce using rule 113 (empty -> .)
    FUNCION         reduce using rule 113 (empty -> .)

    declare_func_rec               shift and go to state 8
    empty                          shift and go to state 9

state 6

    (3) declare_vars -> VAR . vars
    (5) vars -> . first_var more_vars SEMICOLON vars
    (6) vars -> . empty
    (7) first_var -> . tipo ID dimensions
    (113) empty -> .
    (25) tipo -> . INT
    (26) tipo -> . FLOAT
    (27) tipo -> . CHAR
    (28) tipo -> . BOOL

    PRINCIPAL       reduce using rule 113 (empty -> .)
    FUNCION         reduce using rule 113 (empty -> .)
    SI              reduce using rule 113 (empty -> .)
    RETORNA         reduce using rule 113 (empty -> .)
    QUACKOUT        reduce using rule 113 (empty -> .)
    QUACKIN         reduce using rule 113 (empty -> .)
    DESDE           reduce using rule 113 (empty -> .)
    ID              reduce using rule 113 (empty -> .)
    MIENTRAS        reduce using rule 113 (empty -> .)
    RCURLYB         reduce using rule 113 (empty -> .)
    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16
    BOOL            shift and go to state 17

    vars                           shift and go to state 10
    first_var                      shift and go to state 11
    empty                          shift and go to state 12
    tipo                           shift and go to state 13

state 7

    (4) declare_vars -> empty .

    PRINCIPAL       reduce using rule 4 (declare_vars -> empty .)
    FUNCION         reduce using rule 4 (declare_vars -> empty .)
    SI              reduce using rule 4 (declare_vars -> empty .)
    RETORNA         reduce using rule 4 (declare_vars -> empty .)
    QUACKOUT        reduce using rule 4 (declare_vars -> empty .)
    QUACKIN         reduce using rule 4 (declare_vars -> empty .)
    DESDE           reduce using rule 4 (declare_vars -> empty .)
    ID              reduce using rule 4 (declare_vars -> empty .)
    MIENTRAS        reduce using rule 4 (declare_vars -> empty .)
    RCURLYB         reduce using rule 4 (declare_vars -> empty .)


state 8

    (1) program_declaration -> PROGRAMA ID SEMICOLON declare_vars declare_func_rec . declare_main OPENPAR CLOSEPAR bloque_funcion
    (14) declare_func_rec -> declare_func_rec . declare_func
    (2) declare_main -> . PRINCIPAL
    (16) declare_func -> . FUNCION func_id OPENPAR declare_func_params CLOSEPAR bloque_funcion

    PRINCIPAL       shift and go to state 20
    FUNCION         shift and go to state 21

    declare_main                   shift and go to state 18
    declare_func                   shift and go to state 19

state 9

    (15) declare_func_rec -> empty .

    PRINCIPAL       reduce using rule 15 (declare_func_rec -> empty .)
    FUNCION         reduce using rule 15 (declare_func_rec -> empty .)


state 10

    (3) declare_vars -> VAR vars .

    PRINCIPAL       reduce using rule 3 (declare_vars -> VAR vars .)
    FUNCION         reduce using rule 3 (declare_vars -> VAR vars .)
    SI              reduce using rule 3 (declare_vars -> VAR vars .)
    RETORNA         reduce using rule 3 (declare_vars -> VAR vars .)
    QUACKOUT        reduce using rule 3 (declare_vars -> VAR vars .)
    QUACKIN         reduce using rule 3 (declare_vars -> VAR vars .)
    DESDE           reduce using rule 3 (declare_vars -> VAR vars .)
    ID              reduce using rule 3 (declare_vars -> VAR vars .)
    MIENTRAS        reduce using rule 3 (declare_vars -> VAR vars .)
    RCURLYB         reduce using rule 3 (declare_vars -> VAR vars .)


state 11

    (5) vars -> first_var . more_vars SEMICOLON vars
    (8) more_vars -> . more_var_id more_vars
    (9) more_vars -> . empty
    (10) more_var_id -> . COMMA ID dimensions
    (24) more_var_id -> . COMMA tipo ID
    (113) empty -> .

    COMMA           shift and go to state 25
    SEMICOLON       reduce using rule 113 (empty -> .)

    more_vars                      shift and go to state 22
    more_var_id                    shift and go to state 23
    empty                          shift and go to state 24

state 12

    (6) vars -> empty .

    PRINCIPAL       reduce using rule 6 (vars -> empty .)
    FUNCION         reduce using rule 6 (vars -> empty .)
    SI              reduce using rule 6 (vars -> empty .)
    RETORNA         reduce using rule 6 (vars -> empty .)
    QUACKOUT        reduce using rule 6 (vars -> empty .)
    QUACKIN         reduce using rule 6 (vars -> empty .)
    DESDE           reduce using rule 6 (vars -> empty .)
    ID              reduce using rule 6 (vars -> empty .)
    MIENTRAS        reduce using rule 6 (vars -> empty .)
    RCURLYB         reduce using rule 6 (vars -> empty .)


state 13

    (7) first_var -> tipo . ID dimensions

    ID              shift and go to state 26


state 14

    (25) tipo -> INT .

    ID              reduce using rule 25 (tipo -> INT .)


state 15

    (26) tipo -> FLOAT .

    ID              reduce using rule 26 (tipo -> FLOAT .)


state 16

    (27) tipo -> CHAR .

    ID              reduce using rule 27 (tipo -> CHAR .)


state 17

    (28) tipo -> BOOL .

    ID              reduce using rule 28 (tipo -> BOOL .)


state 18

    (1) program_declaration -> PROGRAMA ID SEMICOLON declare_vars declare_func_rec declare_main . OPENPAR CLOSEPAR bloque_funcion

    OPENPAR         shift and go to state 27


state 19

    (14) declare_func_rec -> declare_func_rec declare_func .

    PRINCIPAL       reduce using rule 14 (declare_func_rec -> declare_func_rec declare_func .)
    FUNCION         reduce using rule 14 (declare_func_rec -> declare_func_rec declare_func .)


state 20

    (2) declare_main -> PRINCIPAL .

    OPENPAR         reduce using rule 2 (declare_main -> PRINCIPAL .)


state 21

    (16) declare_func -> FUNCION . func_id OPENPAR declare_func_params CLOSEPAR bloque_funcion
    (17) func_id -> . tipo ID
    (18) func_id -> . VOID ID
    (25) tipo -> . INT
    (26) tipo -> . FLOAT
    (27) tipo -> . CHAR
    (28) tipo -> . BOOL

    VOID            shift and go to state 30
    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16
    BOOL            shift and go to state 17

    func_id                        shift and go to state 28
    tipo                           shift and go to state 29

state 22

    (5) vars -> first_var more_vars . SEMICOLON vars

    SEMICOLON       shift and go to state 31


state 23

    (8) more_vars -> more_var_id . more_vars
    (8) more_vars -> . more_var_id more_vars
    (9) more_vars -> . empty
    (10) more_var_id -> . COMMA ID dimensions
    (24) more_var_id -> . COMMA tipo ID
    (113) empty -> .

    COMMA           shift and go to state 25
    SEMICOLON       reduce using rule 113 (empty -> .)

    more_var_id                    shift and go to state 23
    more_vars                      shift and go to state 32
    empty                          shift and go to state 24

state 24

    (9) more_vars -> empty .

    SEMICOLON       reduce using rule 9 (more_vars -> empty .)


state 25

    (10) more_var_id -> COMMA . ID dimensions
    (24) more_var_id -> COMMA . tipo ID
    (25) tipo -> . INT
    (26) tipo -> . FLOAT
    (27) tipo -> . CHAR
    (28) tipo -> . BOOL

    ID              shift and go to state 33
    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16
    BOOL            shift and go to state 17

    tipo                           shift and go to state 34

state 26

    (7) first_var -> tipo ID . dimensions
    (11) dimensions -> . empty
    (12) dimensions -> . OPENBRAC CTEI CLOSEBRAC
    (13) dimensions -> . OPENBRAC CTEI CLOSEBRAC OPENBRAC CTEI CLOSEBRAC
    (113) empty -> .

    OPENBRAC        shift and go to state 37
    COMMA           reduce using rule 113 (empty -> .)
    SEMICOLON       reduce using rule 113 (empty -> .)

    dimensions                     shift and go to state 35
    empty                          shift and go to state 36

state 27

    (1) program_declaration -> PROGRAMA ID SEMICOLON declare_vars declare_func_rec declare_main OPENPAR . CLOSEPAR bloque_funcion

    CLOSEPAR        shift and go to state 38


state 28

    (16) declare_func -> FUNCION func_id . OPENPAR declare_func_params CLOSEPAR bloque_funcion

    OPENPAR         shift and go to state 39


state 29

    (17) func_id -> tipo . ID

    ID              shift and go to state 40


state 30

    (18) func_id -> VOID . ID

    ID              shift and go to state 41


state 31

    (5) vars -> first_var more_vars SEMICOLON . vars
    (5) vars -> . first_var more_vars SEMICOLON vars
    (6) vars -> . empty
    (7) first_var -> . tipo ID dimensions
    (113) empty -> .
    (25) tipo -> . INT
    (26) tipo -> . FLOAT
    (27) tipo -> . CHAR
    (28) tipo -> . BOOL

    PRINCIPAL       reduce using rule 113 (empty -> .)
    FUNCION         reduce using rule 113 (empty -> .)
    SI              reduce using rule 113 (empty -> .)
    RETORNA         reduce using rule 113 (empty -> .)
    QUACKOUT        reduce using rule 113 (empty -> .)
    QUACKIN         reduce using rule 113 (empty -> .)
    DESDE           reduce using rule 113 (empty -> .)
    ID              reduce using rule 113 (empty -> .)
    MIENTRAS        reduce using rule 113 (empty -> .)
    RCURLYB         reduce using rule 113 (empty -> .)
    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16
    BOOL            shift and go to state 17

    first_var                      shift and go to state 11
    vars                           shift and go to state 42
    empty                          shift and go to state 12
    tipo                           shift and go to state 13

state 32

    (8) more_vars -> more_var_id more_vars .

    SEMICOLON       reduce using rule 8 (more_vars -> more_var_id more_vars .)


state 33

    (10) more_var_id -> COMMA ID . dimensions
    (11) dimensions -> . empty
    (12) dimensions -> . OPENBRAC CTEI CLOSEBRAC
    (13) dimensions -> . OPENBRAC CTEI CLOSEBRAC OPENBRAC CTEI CLOSEBRAC
    (113) empty -> .

    OPENBRAC        shift and go to state 37
    COMMA           reduce using rule 113 (empty -> .)
    SEMICOLON       reduce using rule 113 (empty -> .)
    CLOSEPAR        reduce using rule 113 (empty -> .)

    dimensions                     shift and go to state 43
    empty                          shift and go to state 36

state 34

    (24) more_var_id -> COMMA tipo . ID

    ID              shift and go to state 44


state 35

    (7) first_var -> tipo ID dimensions .

    COMMA           reduce using rule 7 (first_var -> tipo ID dimensions .)
    SEMICOLON       reduce using rule 7 (first_var -> tipo ID dimensions .)


state 36

    (11) dimensions -> empty .

    COMMA           reduce using rule 11 (dimensions -> empty .)
    SEMICOLON       reduce using rule 11 (dimensions -> empty .)
    CLOSEPAR        reduce using rule 11 (dimensions -> empty .)


state 37

    (12) dimensions -> OPENBRAC . CTEI CLOSEBRAC
    (13) dimensions -> OPENBRAC . CTEI CLOSEBRAC OPENBRAC CTEI CLOSEBRAC

    CTEI            shift and go to state 45


state 38

    (1) program_declaration -> PROGRAMA ID SEMICOLON declare_vars declare_func_rec declare_main OPENPAR CLOSEPAR . bloque_funcion
    (29) bloque_funcion -> . LCURLYB declare_vars estatutos_rec RCURLYB

    LCURLYB         shift and go to state 47

    bloque_funcion                 shift and go to state 46

state 39

    (16) declare_func -> FUNCION func_id OPENPAR . declare_func_params CLOSEPAR bloque_funcion
    (19) declare_func_params -> . get_func_params more_params
    (20) declare_func_params -> . empty
    (21) get_func_params -> . tipo ID
    (113) empty -> .
    (25) tipo -> . INT
    (26) tipo -> . FLOAT
    (27) tipo -> . CHAR
    (28) tipo -> . BOOL

    CLOSEPAR        reduce using rule 113 (empty -> .)
    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16
    BOOL            shift and go to state 17

    declare_func_params            shift and go to state 48
    get_func_params                shift and go to state 49
    empty                          shift and go to state 50
    tipo                           shift and go to state 51

state 40

    (17) func_id -> tipo ID .

    OPENPAR         reduce using rule 17 (func_id -> tipo ID .)


state 41

    (18) func_id -> VOID ID .

    OPENPAR         reduce using rule 18 (func_id -> VOID ID .)


state 42

    (5) vars -> first_var more_vars SEMICOLON vars .

    PRINCIPAL       reduce using rule 5 (vars -> first_var more_vars SEMICOLON vars .)
    FUNCION         reduce using rule 5 (vars -> first_var more_vars SEMICOLON vars .)
    SI              reduce using rule 5 (vars -> first_var more_vars SEMICOLON vars .)
    RETORNA         reduce using rule 5 (vars -> first_var more_vars SEMICOLON vars .)
    QUACKOUT        reduce using rule 5 (vars -> first_var more_vars SEMICOLON vars .)
    QUACKIN         reduce using rule 5 (vars -> first_var more_vars SEMICOLON vars .)
    DESDE           reduce using rule 5 (vars -> first_var more_vars SEMICOLON vars .)
    ID              reduce using rule 5 (vars -> first_var more_vars SEMICOLON vars .)
    MIENTRAS        reduce using rule 5 (vars -> first_var more_vars SEMICOLON vars .)
    RCURLYB         reduce using rule 5 (vars -> first_var more_vars SEMICOLON vars .)


state 43

    (10) more_var_id -> COMMA ID dimensions .

    COMMA           reduce using rule 10 (more_var_id -> COMMA ID dimensions .)
    SEMICOLON       reduce using rule 10 (more_var_id -> COMMA ID dimensions .)
    CLOSEPAR        reduce using rule 10 (more_var_id -> COMMA ID dimensions .)


state 44

    (24) more_var_id -> COMMA tipo ID .

    COMMA           reduce using rule 24 (more_var_id -> COMMA tipo ID .)
    SEMICOLON       reduce using rule 24 (more_var_id -> COMMA tipo ID .)
    CLOSEPAR        reduce using rule 24 (more_var_id -> COMMA tipo ID .)


state 45

    (12) dimensions -> OPENBRAC CTEI . CLOSEBRAC
    (13) dimensions -> OPENBRAC CTEI . CLOSEBRAC OPENBRAC CTEI CLOSEBRAC

    CLOSEBRAC       shift and go to state 52


state 46

    (1) program_declaration -> PROGRAMA ID SEMICOLON declare_vars declare_func_rec declare_main OPENPAR CLOSEPAR bloque_funcion .

    $end            reduce using rule 1 (program_declaration -> PROGRAMA ID SEMICOLON declare_vars declare_func_rec declare_main OPENPAR CLOSEPAR bloque_funcion .)


state 47

    (29) bloque_funcion -> LCURLYB . declare_vars estatutos_rec RCURLYB
    (3) declare_vars -> . VAR vars
    (4) declare_vars -> . empty
    (113) empty -> .

    VAR             shift and go to state 6
    SI              reduce using rule 113 (empty -> .)
    RETORNA         reduce using rule 113 (empty -> .)
    QUACKOUT        reduce using rule 113 (empty -> .)
    QUACKIN         reduce using rule 113 (empty -> .)
    DESDE           reduce using rule 113 (empty -> .)
    ID              reduce using rule 113 (empty -> .)
    MIENTRAS        reduce using rule 113 (empty -> .)
    RCURLYB         reduce using rule 113 (empty -> .)

    declare_vars                   shift and go to state 53
    empty                          shift and go to state 7

state 48

    (16) declare_func -> FUNCION func_id OPENPAR declare_func_params . CLOSEPAR bloque_funcion

    CLOSEPAR        shift and go to state 54


state 49

    (19) declare_func_params -> get_func_params . more_params
    (22) more_params -> . more_var_id more_params
    (23) more_params -> . empty
    (10) more_var_id -> . COMMA ID dimensions
    (24) more_var_id -> . COMMA tipo ID
    (113) empty -> .

    COMMA           shift and go to state 25
    CLOSEPAR        reduce using rule 113 (empty -> .)

    more_params                    shift and go to state 55
    more_var_id                    shift and go to state 56
    empty                          shift and go to state 57

state 50

    (20) declare_func_params -> empty .

    CLOSEPAR        reduce using rule 20 (declare_func_params -> empty .)


state 51

    (21) get_func_params -> tipo . ID

    ID              shift and go to state 58


state 52

    (12) dimensions -> OPENBRAC CTEI CLOSEBRAC .
    (13) dimensions -> OPENBRAC CTEI CLOSEBRAC . OPENBRAC CTEI CLOSEBRAC

    COMMA           reduce using rule 12 (dimensions -> OPENBRAC CTEI CLOSEBRAC .)
    SEMICOLON       reduce using rule 12 (dimensions -> OPENBRAC CTEI CLOSEBRAC .)
    CLOSEPAR        reduce using rule 12 (dimensions -> OPENBRAC CTEI CLOSEBRAC .)
    OPENBRAC        shift and go to state 59


state 53

    (29) bloque_funcion -> LCURLYB declare_vars . estatutos_rec RCURLYB
    (31) estatutos_rec -> . estatuto estatutos_rec
    (32) estatutos_rec -> . empty
    (33) estatuto -> . asignacion SEMICOLON
    (34) estatuto -> . condicion
    (35) estatuto -> . func_call SEMICOLON
    (36) estatuto -> . retorna
    (37) estatuto -> . escribe
    (38) estatuto -> . lee
    (39) estatuto -> . desde
    (40) estatuto -> . mientras_estatuto
    (113) empty -> .
    (41) asignacion -> . id ASSIGN megaexp
    (42) condicion -> . SI OPENPAR megaexp CLOSEPAR entonces bloque_entonces
    (48) func_call -> . func_call_id openpar func_call_params closepar
    (61) retorna -> . RETORNA megaexp SEMICOLON
    (53) escribe -> . QUACKOUT OPENPAR print_options CLOSEPAR SEMICOLON
    (58) lee -> . QUACKIN OPENPAR read_options CLOSEPAR SEMICOLON
    (62) desde -> . DESDE id ASSIGN exp hasta exp hacer bloque
    (65) mientras_estatuto -> . mientras OPENPAR megaexp CLOSEPAR haz bloque
    (83) id -> . variable
    (84) id -> . variable dimensions_offset
    (85) id -> . variable dimensions_offset dimensions_offset
    (49) func_call_id -> . ID
    (66) mientras -> . MIENTRAS
    (86) variable -> . ID

    RCURLYB         reduce using rule 113 (empty -> .)
    SI              shift and go to state 72
    RETORNA         shift and go to state 74
    QUACKOUT        shift and go to state 75
    QUACKIN         shift and go to state 76
    DESDE           shift and go to state 77
    ID              shift and go to state 80
    MIENTRAS        shift and go to state 81

    estatutos_rec                  shift and go to state 60
    estatuto                       shift and go to state 61
    empty                          shift and go to state 62
    asignacion                     shift and go to state 63
    condicion                      shift and go to state 64
    func_call                      shift and go to state 65
    retorna                        shift and go to state 66
    escribe                        shift and go to state 67
    lee                            shift and go to state 68
    desde                          shift and go to state 69
    mientras_estatuto              shift and go to state 70
    id                             shift and go to state 71
    func_call_id                   shift and go to state 73
    mientras                       shift and go to state 78
    variable                       shift and go to state 79

state 54

    (16) declare_func -> FUNCION func_id OPENPAR declare_func_params CLOSEPAR . bloque_funcion
    (29) bloque_funcion -> . LCURLYB declare_vars estatutos_rec RCURLYB

    LCURLYB         shift and go to state 47

    bloque_funcion                 shift and go to state 82

state 55

    (19) declare_func_params -> get_func_params more_params .

    CLOSEPAR        reduce using rule 19 (declare_func_params -> get_func_params more_params .)


state 56

    (22) more_params -> more_var_id . more_params
    (22) more_params -> . more_var_id more_params
    (23) more_params -> . empty
    (10) more_var_id -> . COMMA ID dimensions
    (24) more_var_id -> . COMMA tipo ID
    (113) empty -> .

    COMMA           shift and go to state 25
    CLOSEPAR        reduce using rule 113 (empty -> .)

    more_var_id                    shift and go to state 56
    more_params                    shift and go to state 83
    empty                          shift and go to state 57

state 57

    (23) more_params -> empty .

    CLOSEPAR        reduce using rule 23 (more_params -> empty .)


state 58

    (21) get_func_params -> tipo ID .

    COMMA           reduce using rule 21 (get_func_params -> tipo ID .)
    CLOSEPAR        reduce using rule 21 (get_func_params -> tipo ID .)


state 59

    (13) dimensions -> OPENBRAC CTEI CLOSEBRAC OPENBRAC . CTEI CLOSEBRAC

    CTEI            shift and go to state 84


state 60

    (29) bloque_funcion -> LCURLYB declare_vars estatutos_rec . RCURLYB

    RCURLYB         shift and go to state 85


state 61

    (31) estatutos_rec -> estatuto . estatutos_rec
    (31) estatutos_rec -> . estatuto estatutos_rec
    (32) estatutos_rec -> . empty
    (33) estatuto -> . asignacion SEMICOLON
    (34) estatuto -> . condicion
    (35) estatuto -> . func_call SEMICOLON
    (36) estatuto -> . retorna
    (37) estatuto -> . escribe
    (38) estatuto -> . lee
    (39) estatuto -> . desde
    (40) estatuto -> . mientras_estatuto
    (113) empty -> .
    (41) asignacion -> . id ASSIGN megaexp
    (42) condicion -> . SI OPENPAR megaexp CLOSEPAR entonces bloque_entonces
    (48) func_call -> . func_call_id openpar func_call_params closepar
    (61) retorna -> . RETORNA megaexp SEMICOLON
    (53) escribe -> . QUACKOUT OPENPAR print_options CLOSEPAR SEMICOLON
    (58) lee -> . QUACKIN OPENPAR read_options CLOSEPAR SEMICOLON
    (62) desde -> . DESDE id ASSIGN exp hasta exp hacer bloque
    (65) mientras_estatuto -> . mientras OPENPAR megaexp CLOSEPAR haz bloque
    (83) id -> . variable
    (84) id -> . variable dimensions_offset
    (85) id -> . variable dimensions_offset dimensions_offset
    (49) func_call_id -> . ID
    (66) mientras -> . MIENTRAS
    (86) variable -> . ID

    RCURLYB         reduce using rule 113 (empty -> .)
    SI              shift and go to state 72
    RETORNA         shift and go to state 74
    QUACKOUT        shift and go to state 75
    QUACKIN         shift and go to state 76
    DESDE           shift and go to state 77
    ID              shift and go to state 80
    MIENTRAS        shift and go to state 81

    estatuto                       shift and go to state 61
    estatutos_rec                  shift and go to state 86
    empty                          shift and go to state 62
    asignacion                     shift and go to state 63
    condicion                      shift and go to state 64
    func_call                      shift and go to state 65
    retorna                        shift and go to state 66
    escribe                        shift and go to state 67
    lee                            shift and go to state 68
    desde                          shift and go to state 69
    mientras_estatuto              shift and go to state 70
    id                             shift and go to state 71
    func_call_id                   shift and go to state 73
    mientras                       shift and go to state 78
    variable                       shift and go to state 79

state 62

    (32) estatutos_rec -> empty .

    RCURLYB         reduce using rule 32 (estatutos_rec -> empty .)


state 63

    (33) estatuto -> asignacion . SEMICOLON

    SEMICOLON       shift and go to state 87


state 64

    (34) estatuto -> condicion .

    SI              reduce using rule 34 (estatuto -> condicion .)
    RETORNA         reduce using rule 34 (estatuto -> condicion .)
    QUACKOUT        reduce using rule 34 (estatuto -> condicion .)
    QUACKIN         reduce using rule 34 (estatuto -> condicion .)
    DESDE           reduce using rule 34 (estatuto -> condicion .)
    ID              reduce using rule 34 (estatuto -> condicion .)
    MIENTRAS        reduce using rule 34 (estatuto -> condicion .)
    RCURLYB         reduce using rule 34 (estatuto -> condicion .)


state 65

    (35) estatuto -> func_call . SEMICOLON

    SEMICOLON       shift and go to state 88


state 66

    (36) estatuto -> retorna .

    SI              reduce using rule 36 (estatuto -> retorna .)
    RETORNA         reduce using rule 36 (estatuto -> retorna .)
    QUACKOUT        reduce using rule 36 (estatuto -> retorna .)
    QUACKIN         reduce using rule 36 (estatuto -> retorna .)
    DESDE           reduce using rule 36 (estatuto -> retorna .)
    ID              reduce using rule 36 (estatuto -> retorna .)
    MIENTRAS        reduce using rule 36 (estatuto -> retorna .)
    RCURLYB         reduce using rule 36 (estatuto -> retorna .)


state 67

    (37) estatuto -> escribe .

    SI              reduce using rule 37 (estatuto -> escribe .)
    RETORNA         reduce using rule 37 (estatuto -> escribe .)
    QUACKOUT        reduce using rule 37 (estatuto -> escribe .)
    QUACKIN         reduce using rule 37 (estatuto -> escribe .)
    DESDE           reduce using rule 37 (estatuto -> escribe .)
    ID              reduce using rule 37 (estatuto -> escribe .)
    MIENTRAS        reduce using rule 37 (estatuto -> escribe .)
    RCURLYB         reduce using rule 37 (estatuto -> escribe .)


state 68

    (38) estatuto -> lee .

    SI              reduce using rule 38 (estatuto -> lee .)
    RETORNA         reduce using rule 38 (estatuto -> lee .)
    QUACKOUT        reduce using rule 38 (estatuto -> lee .)
    QUACKIN         reduce using rule 38 (estatuto -> lee .)
    DESDE           reduce using rule 38 (estatuto -> lee .)
    ID              reduce using rule 38 (estatuto -> lee .)
    MIENTRAS        reduce using rule 38 (estatuto -> lee .)
    RCURLYB         reduce using rule 38 (estatuto -> lee .)


state 69

    (39) estatuto -> desde .

    SI              reduce using rule 39 (estatuto -> desde .)
    RETORNA         reduce using rule 39 (estatuto -> desde .)
    QUACKOUT        reduce using rule 39 (estatuto -> desde .)
    QUACKIN         reduce using rule 39 (estatuto -> desde .)
    DESDE           reduce using rule 39 (estatuto -> desde .)
    ID              reduce using rule 39 (estatuto -> desde .)
    MIENTRAS        reduce using rule 39 (estatuto -> desde .)
    RCURLYB         reduce using rule 39 (estatuto -> desde .)


state 70

    (40) estatuto -> mientras_estatuto .

    SI              reduce using rule 40 (estatuto -> mientras_estatuto .)
    RETORNA         reduce using rule 40 (estatuto -> mientras_estatuto .)
    QUACKOUT        reduce using rule 40 (estatuto -> mientras_estatuto .)
    QUACKIN         reduce using rule 40 (estatuto -> mientras_estatuto .)
    DESDE           reduce using rule 40 (estatuto -> mientras_estatuto .)
    ID              reduce using rule 40 (estatuto -> mientras_estatuto .)
    MIENTRAS        reduce using rule 40 (estatuto -> mientras_estatuto .)
    RCURLYB         reduce using rule 40 (estatuto -> mientras_estatuto .)


state 71

    (41) asignacion -> id . ASSIGN megaexp

    ASSIGN          shift and go to state 89


state 72

    (42) condicion -> SI . OPENPAR megaexp CLOSEPAR entonces bloque_entonces

    OPENPAR         shift and go to state 90


state 73

    (48) func_call -> func_call_id . openpar func_call_params closepar
    (80) openpar -> . OPENPAR

    OPENPAR         shift and go to state 92

    openpar                        shift and go to state 91

state 74

    (61) retorna -> RETORNA . megaexp SEMICOLON
    (68) megaexp -> . superexp
    (69) megaexp -> . megaexp boolean_op superexp
    (70) superexp -> . exp
    (71) superexp -> . superexp logical_op exp
    (72) exp -> . termino
    (73) exp -> . exp sums termino
    (74) termino -> . factor
    (75) termino -> . termino multdiv factor
    (76) factor -> . vcte
    (77) factor -> . openpar megaexp closepar
    (78) factor -> . unary_ops vcte
    (79) factor -> . unary_ops openpar megaexp closepar
    (82) vcte -> . id
    (90) vcte -> . func_call
    (91) vcte -> . CTEI
    (92) vcte -> . CTEF
    (93) vcte -> . TRUE
    (94) vcte -> . FALSE
    (95) vcte -> . CTEC
    (80) openpar -> . OPENPAR
    (108) unary_ops -> . MINUS
    (109) unary_ops -> . PLUS
    (110) unary_ops -> . DETERM
    (111) unary_ops -> . TRANSPOSE
    (112) unary_ops -> . INVERSE
    (83) id -> . variable
    (84) id -> . variable dimensions_offset
    (85) id -> . variable dimensions_offset dimensions_offset
    (48) func_call -> . func_call_id openpar func_call_params closepar
    (86) variable -> . ID
    (49) func_call_id -> . ID

    CTEI            shift and go to state 103
    CTEF            shift and go to state 104
    TRUE            shift and go to state 105
    FALSE           shift and go to state 106
    CTEC            shift and go to state 107
    OPENPAR         shift and go to state 92
    MINUS           shift and go to state 108
    PLUS            shift and go to state 109
    DETERM          shift and go to state 110
    TRANSPOSE       shift and go to state 111
    INVERSE         shift and go to state 112
    ID              shift and go to state 113

    megaexp                        shift and go to state 93
    superexp                       shift and go to state 94
    exp                            shift and go to state 95
    termino                        shift and go to state 96
    factor                         shift and go to state 97
    vcte                           shift and go to state 98
    openpar                        shift and go to state 99
    unary_ops                      shift and go to state 100
    id                             shift and go to state 101
    func_call                      shift and go to state 102
    variable                       shift and go to state 79
    func_call_id                   shift and go to state 73

state 75

    (53) escribe -> QUACKOUT . OPENPAR print_options CLOSEPAR SEMICOLON

    OPENPAR         shift and go to state 114


state 76

    (58) lee -> QUACKIN . OPENPAR read_options CLOSEPAR SEMICOLON

    OPENPAR         shift and go to state 115


state 77

    (62) desde -> DESDE . id ASSIGN exp hasta exp hacer bloque
    (83) id -> . variable
    (84) id -> . variable dimensions_offset
    (85) id -> . variable dimensions_offset dimensions_offset
    (86) variable -> . ID

    ID              shift and go to state 117

    id                             shift and go to state 116
    variable                       shift and go to state 79

state 78

    (65) mientras_estatuto -> mientras . OPENPAR megaexp CLOSEPAR haz bloque

    OPENPAR         shift and go to state 118


state 79

    (83) id -> variable .
    (84) id -> variable . dimensions_offset
    (85) id -> variable . dimensions_offset dimensions_offset
    (87) dimensions_offset -> . openbrac exp closebrac
    (88) openbrac -> . OPENBRAC

    ASSIGN          reduce using rule 83 (id -> variable .)
    TIMES           reduce using rule 83 (id -> variable .)
    DIVIDE          reduce using rule 83 (id -> variable .)
    MINUS           reduce using rule 83 (id -> variable .)
    PLUS            reduce using rule 83 (id -> variable .)
    GT              reduce using rule 83 (id -> variable .)
    GTE             reduce using rule 83 (id -> variable .)
    LT              reduce using rule 83 (id -> variable .)
    LTE             reduce using rule 83 (id -> variable .)
    NEQ             reduce using rule 83 (id -> variable .)
    EQ              reduce using rule 83 (id -> variable .)
    SEMICOLON       reduce using rule 83 (id -> variable .)
    OR              reduce using rule 83 (id -> variable .)
    AND             reduce using rule 83 (id -> variable .)
    CLOSEPAR        reduce using rule 83 (id -> variable .)
    COMMA           reduce using rule 83 (id -> variable .)
    CLOSEBRAC       reduce using rule 83 (id -> variable .)
    HASTA           reduce using rule 83 (id -> variable .)
    HACER           reduce using rule 83 (id -> variable .)
    OPENBRAC        shift and go to state 121

    dimensions_offset              shift and go to state 119
    openbrac                       shift and go to state 120

state 80

    (49) func_call_id -> ID .
    (86) variable -> ID .

    OPENPAR         reduce using rule 49 (func_call_id -> ID .)
    OPENBRAC        reduce using rule 86 (variable -> ID .)
    ASSIGN          reduce using rule 86 (variable -> ID .)


state 81

    (66) mientras -> MIENTRAS .

    OPENPAR         reduce using rule 66 (mientras -> MIENTRAS .)


state 82

    (16) declare_func -> FUNCION func_id OPENPAR declare_func_params CLOSEPAR bloque_funcion .

    PRINCIPAL       reduce using rule 16 (declare_func -> FUNCION func_id OPENPAR declare_func_params CLOSEPAR bloque_funcion .)
    FUNCION         reduce using rule 16 (declare_func -> FUNCION func_id OPENPAR declare_func_params CLOSEPAR bloque_funcion .)


state 83

    (22) more_params -> more_var_id more_params .

    CLOSEPAR        reduce using rule 22 (more_params -> more_var_id more_params .)


state 84

    (13) dimensions -> OPENBRAC CTEI CLOSEBRAC OPENBRAC CTEI . CLOSEBRAC

    CLOSEBRAC       shift and go to state 122


state 85

    (29) bloque_funcion -> LCURLYB declare_vars estatutos_rec RCURLYB .

    $end            reduce using rule 29 (bloque_funcion -> LCURLYB declare_vars estatutos_rec RCURLYB .)
    PRINCIPAL       reduce using rule 29 (bloque_funcion -> LCURLYB declare_vars estatutos_rec RCURLYB .)
    FUNCION         reduce using rule 29 (bloque_funcion -> LCURLYB declare_vars estatutos_rec RCURLYB .)


state 86

    (31) estatutos_rec -> estatuto estatutos_rec .

    RCURLYB         reduce using rule 31 (estatutos_rec -> estatuto estatutos_rec .)


state 87

    (33) estatuto -> asignacion SEMICOLON .

    SI              reduce using rule 33 (estatuto -> asignacion SEMICOLON .)
    RETORNA         reduce using rule 33 (estatuto -> asignacion SEMICOLON .)
    QUACKOUT        reduce using rule 33 (estatuto -> asignacion SEMICOLON .)
    QUACKIN         reduce using rule 33 (estatuto -> asignacion SEMICOLON .)
    DESDE           reduce using rule 33 (estatuto -> asignacion SEMICOLON .)
    ID              reduce using rule 33 (estatuto -> asignacion SEMICOLON .)
    MIENTRAS        reduce using rule 33 (estatuto -> asignacion SEMICOLON .)
    RCURLYB         reduce using rule 33 (estatuto -> asignacion SEMICOLON .)


state 88

    (35) estatuto -> func_call SEMICOLON .

    SI              reduce using rule 35 (estatuto -> func_call SEMICOLON .)
    RETORNA         reduce using rule 35 (estatuto -> func_call SEMICOLON .)
    QUACKOUT        reduce using rule 35 (estatuto -> func_call SEMICOLON .)
    QUACKIN         reduce using rule 35 (estatuto -> func_call SEMICOLON .)
    DESDE           reduce using rule 35 (estatuto -> func_call SEMICOLON .)
    ID              reduce using rule 35 (estatuto -> func_call SEMICOLON .)
    MIENTRAS        reduce using rule 35 (estatuto -> func_call SEMICOLON .)
    RCURLYB         reduce using rule 35 (estatuto -> func_call SEMICOLON .)


state 89

    (41) asignacion -> id ASSIGN . megaexp
    (68) megaexp -> . superexp
    (69) megaexp -> . megaexp boolean_op superexp
    (70) superexp -> . exp
    (71) superexp -> . superexp logical_op exp
    (72) exp -> . termino
    (73) exp -> . exp sums termino
    (74) termino -> . factor
    (75) termino -> . termino multdiv factor
    (76) factor -> . vcte
    (77) factor -> . openpar megaexp closepar
    (78) factor -> . unary_ops vcte
    (79) factor -> . unary_ops openpar megaexp closepar
    (82) vcte -> . id
    (90) vcte -> . func_call
    (91) vcte -> . CTEI
    (92) vcte -> . CTEF
    (93) vcte -> . TRUE
    (94) vcte -> . FALSE
    (95) vcte -> . CTEC
    (80) openpar -> . OPENPAR
    (108) unary_ops -> . MINUS
    (109) unary_ops -> . PLUS
    (110) unary_ops -> . DETERM
    (111) unary_ops -> . TRANSPOSE
    (112) unary_ops -> . INVERSE
    (83) id -> . variable
    (84) id -> . variable dimensions_offset
    (85) id -> . variable dimensions_offset dimensions_offset
    (48) func_call -> . func_call_id openpar func_call_params closepar
    (86) variable -> . ID
    (49) func_call_id -> . ID

    CTEI            shift and go to state 103
    CTEF            shift and go to state 104
    TRUE            shift and go to state 105
    FALSE           shift and go to state 106
    CTEC            shift and go to state 107
    OPENPAR         shift and go to state 92
    MINUS           shift and go to state 108
    PLUS            shift and go to state 109
    DETERM          shift and go to state 110
    TRANSPOSE       shift and go to state 111
    INVERSE         shift and go to state 112
    ID              shift and go to state 113

    id                             shift and go to state 101
    megaexp                        shift and go to state 123
    superexp                       shift and go to state 94
    exp                            shift and go to state 95
    termino                        shift and go to state 96
    factor                         shift and go to state 97
    vcte                           shift and go to state 98
    openpar                        shift and go to state 99
    unary_ops                      shift and go to state 100
    func_call                      shift and go to state 102
    variable                       shift and go to state 79
    func_call_id                   shift and go to state 73

state 90

    (42) condicion -> SI OPENPAR . megaexp CLOSEPAR entonces bloque_entonces
    (68) megaexp -> . superexp
    (69) megaexp -> . megaexp boolean_op superexp
    (70) superexp -> . exp
    (71) superexp -> . superexp logical_op exp
    (72) exp -> . termino
    (73) exp -> . exp sums termino
    (74) termino -> . factor
    (75) termino -> . termino multdiv factor
    (76) factor -> . vcte
    (77) factor -> . openpar megaexp closepar
    (78) factor -> . unary_ops vcte
    (79) factor -> . unary_ops openpar megaexp closepar
    (82) vcte -> . id
    (90) vcte -> . func_call
    (91) vcte -> . CTEI
    (92) vcte -> . CTEF
    (93) vcte -> . TRUE
    (94) vcte -> . FALSE
    (95) vcte -> . CTEC
    (80) openpar -> . OPENPAR
    (108) unary_ops -> . MINUS
    (109) unary_ops -> . PLUS
    (110) unary_ops -> . DETERM
    (111) unary_ops -> . TRANSPOSE
    (112) unary_ops -> . INVERSE
    (83) id -> . variable
    (84) id -> . variable dimensions_offset
    (85) id -> . variable dimensions_offset dimensions_offset
    (48) func_call -> . func_call_id openpar func_call_params closepar
    (86) variable -> . ID
    (49) func_call_id -> . ID

    CTEI            shift and go to state 103
    CTEF            shift and go to state 104
    TRUE            shift and go to state 105
    FALSE           shift and go to state 106
    CTEC            shift and go to state 107
    OPENPAR         shift and go to state 92
    MINUS           shift and go to state 108
    PLUS            shift and go to state 109
    DETERM          shift and go to state 110
    TRANSPOSE       shift and go to state 111
    INVERSE         shift and go to state 112
    ID              shift and go to state 113

    megaexp                        shift and go to state 124
    superexp                       shift and go to state 94
    exp                            shift and go to state 95
    termino                        shift and go to state 96
    factor                         shift and go to state 97
    vcte                           shift and go to state 98
    openpar                        shift and go to state 99
    unary_ops                      shift and go to state 100
    id                             shift and go to state 101
    func_call                      shift and go to state 102
    variable                       shift and go to state 79
    func_call_id                   shift and go to state 73

state 91

    (48) func_call -> func_call_id openpar . func_call_params closepar
    (50) func_call_params -> . func_call_params COMMA func_call_params
    (51) func_call_params -> . empty
    (52) func_call_params -> . megaexp
    (113) empty -> .
    (68) megaexp -> . superexp
    (69) megaexp -> . megaexp boolean_op superexp
    (70) superexp -> . exp
    (71) superexp -> . superexp logical_op exp
    (72) exp -> . termino
    (73) exp -> . exp sums termino
    (74) termino -> . factor
    (75) termino -> . termino multdiv factor
    (76) factor -> . vcte
    (77) factor -> . openpar megaexp closepar
    (78) factor -> . unary_ops vcte
    (79) factor -> . unary_ops openpar megaexp closepar
    (82) vcte -> . id
    (90) vcte -> . func_call
    (91) vcte -> . CTEI
    (92) vcte -> . CTEF
    (93) vcte -> . TRUE
    (94) vcte -> . FALSE
    (95) vcte -> . CTEC
    (80) openpar -> . OPENPAR
    (108) unary_ops -> . MINUS
    (109) unary_ops -> . PLUS
    (110) unary_ops -> . DETERM
    (111) unary_ops -> . TRANSPOSE
    (112) unary_ops -> . INVERSE
    (83) id -> . variable
    (84) id -> . variable dimensions_offset
    (85) id -> . variable dimensions_offset dimensions_offset
    (48) func_call -> . func_call_id openpar func_call_params closepar
    (86) variable -> . ID
    (49) func_call_id -> . ID

    COMMA           reduce using rule 113 (empty -> .)
    CLOSEPAR        reduce using rule 113 (empty -> .)
    CTEI            shift and go to state 103
    CTEF            shift and go to state 104
    TRUE            shift and go to state 105
    FALSE           shift and go to state 106
    CTEC            shift and go to state 107
    OPENPAR         shift and go to state 92
    MINUS           shift and go to state 108
    PLUS            shift and go to state 109
    DETERM          shift and go to state 110
    TRANSPOSE       shift and go to state 111
    INVERSE         shift and go to state 112
    ID              shift and go to state 113

    func_call_id                   shift and go to state 73
    openpar                        shift and go to state 99
    func_call_params               shift and go to state 125
    empty                          shift and go to state 126
    megaexp                        shift and go to state 127
    superexp                       shift and go to state 94
    exp                            shift and go to state 95
    termino                        shift and go to state 96
    factor                         shift and go to state 97
    vcte                           shift and go to state 98
    unary_ops                      shift and go to state 100
    id                             shift and go to state 101
    func_call                      shift and go to state 102
    variable                       shift and go to state 79

state 92

    (80) openpar -> OPENPAR .

    CTEI            reduce using rule 80 (openpar -> OPENPAR .)
    CTEF            reduce using rule 80 (openpar -> OPENPAR .)
    TRUE            reduce using rule 80 (openpar -> OPENPAR .)
    FALSE           reduce using rule 80 (openpar -> OPENPAR .)
    CTEC            reduce using rule 80 (openpar -> OPENPAR .)
    OPENPAR         reduce using rule 80 (openpar -> OPENPAR .)
    MINUS           reduce using rule 80 (openpar -> OPENPAR .)
    PLUS            reduce using rule 80 (openpar -> OPENPAR .)
    DETERM          reduce using rule 80 (openpar -> OPENPAR .)
    TRANSPOSE       reduce using rule 80 (openpar -> OPENPAR .)
    INVERSE         reduce using rule 80 (openpar -> OPENPAR .)
    ID              reduce using rule 80 (openpar -> OPENPAR .)
    COMMA           reduce using rule 80 (openpar -> OPENPAR .)
    CLOSEPAR        reduce using rule 80 (openpar -> OPENPAR .)


state 93

    (61) retorna -> RETORNA megaexp . SEMICOLON
    (69) megaexp -> megaexp . boolean_op superexp
    (96) boolean_op -> . OR
    (97) boolean_op -> . AND

    SEMICOLON       shift and go to state 128
    OR              shift and go to state 130
    AND             shift and go to state 131

    boolean_op                     shift and go to state 129

state 94

    (68) megaexp -> superexp .
    (71) superexp -> superexp . logical_op exp
    (98) logical_op -> . GT
    (99) logical_op -> . GTE
    (100) logical_op -> . LT
    (101) logical_op -> . LTE
    (102) logical_op -> . NEQ
    (103) logical_op -> . EQ

    SEMICOLON       reduce using rule 68 (megaexp -> superexp .)
    OR              reduce using rule 68 (megaexp -> superexp .)
    AND             reduce using rule 68 (megaexp -> superexp .)
    CLOSEPAR        reduce using rule 68 (megaexp -> superexp .)
    COMMA           reduce using rule 68 (megaexp -> superexp .)
    GT              shift and go to state 133
    GTE             shift and go to state 134
    LT              shift and go to state 135
    LTE             shift and go to state 136
    NEQ             shift and go to state 137
    EQ              shift and go to state 138

    logical_op                     shift and go to state 132

state 95

    (70) superexp -> exp .
    (73) exp -> exp . sums termino
    (104) sums -> . MINUS
    (105) sums -> . PLUS

    GT              reduce using rule 70 (superexp -> exp .)
    GTE             reduce using rule 70 (superexp -> exp .)
    LT              reduce using rule 70 (superexp -> exp .)
    LTE             reduce using rule 70 (superexp -> exp .)
    NEQ             reduce using rule 70 (superexp -> exp .)
    EQ              reduce using rule 70 (superexp -> exp .)
    SEMICOLON       reduce using rule 70 (superexp -> exp .)
    OR              reduce using rule 70 (superexp -> exp .)
    AND             reduce using rule 70 (superexp -> exp .)
    CLOSEPAR        reduce using rule 70 (superexp -> exp .)
    COMMA           reduce using rule 70 (superexp -> exp .)
    MINUS           shift and go to state 140
    PLUS            shift and go to state 141

    sums                           shift and go to state 139

state 96

    (72) exp -> termino .
    (75) termino -> termino . multdiv factor
    (106) multdiv -> . TIMES
    (107) multdiv -> . DIVIDE

    MINUS           reduce using rule 72 (exp -> termino .)
    PLUS            reduce using rule 72 (exp -> termino .)
    GT              reduce using rule 72 (exp -> termino .)
    GTE             reduce using rule 72 (exp -> termino .)
    LT              reduce using rule 72 (exp -> termino .)
    LTE             reduce using rule 72 (exp -> termino .)
    NEQ             reduce using rule 72 (exp -> termino .)
    EQ              reduce using rule 72 (exp -> termino .)
    SEMICOLON       reduce using rule 72 (exp -> termino .)
    OR              reduce using rule 72 (exp -> termino .)
    AND             reduce using rule 72 (exp -> termino .)
    CLOSEPAR        reduce using rule 72 (exp -> termino .)
    COMMA           reduce using rule 72 (exp -> termino .)
    CLOSEBRAC       reduce using rule 72 (exp -> termino .)
    HASTA           reduce using rule 72 (exp -> termino .)
    HACER           reduce using rule 72 (exp -> termino .)
    TIMES           shift and go to state 143
    DIVIDE          shift and go to state 144

    multdiv                        shift and go to state 142

state 97

    (74) termino -> factor .

    TIMES           reduce using rule 74 (termino -> factor .)
    DIVIDE          reduce using rule 74 (termino -> factor .)
    MINUS           reduce using rule 74 (termino -> factor .)
    PLUS            reduce using rule 74 (termino -> factor .)
    GT              reduce using rule 74 (termino -> factor .)
    GTE             reduce using rule 74 (termino -> factor .)
    LT              reduce using rule 74 (termino -> factor .)
    LTE             reduce using rule 74 (termino -> factor .)
    NEQ             reduce using rule 74 (termino -> factor .)
    EQ              reduce using rule 74 (termino -> factor .)
    SEMICOLON       reduce using rule 74 (termino -> factor .)
    OR              reduce using rule 74 (termino -> factor .)
    AND             reduce using rule 74 (termino -> factor .)
    CLOSEPAR        reduce using rule 74 (termino -> factor .)
    COMMA           reduce using rule 74 (termino -> factor .)
    CLOSEBRAC       reduce using rule 74 (termino -> factor .)
    HASTA           reduce using rule 74 (termino -> factor .)
    HACER           reduce using rule 74 (termino -> factor .)


state 98

    (76) factor -> vcte .

    TIMES           reduce using rule 76 (factor -> vcte .)
    DIVIDE          reduce using rule 76 (factor -> vcte .)
    MINUS           reduce using rule 76 (factor -> vcte .)
    PLUS            reduce using rule 76 (factor -> vcte .)
    GT              reduce using rule 76 (factor -> vcte .)
    GTE             reduce using rule 76 (factor -> vcte .)
    LT              reduce using rule 76 (factor -> vcte .)
    LTE             reduce using rule 76 (factor -> vcte .)
    NEQ             reduce using rule 76 (factor -> vcte .)
    EQ              reduce using rule 76 (factor -> vcte .)
    SEMICOLON       reduce using rule 76 (factor -> vcte .)
    OR              reduce using rule 76 (factor -> vcte .)
    AND             reduce using rule 76 (factor -> vcte .)
    CLOSEPAR        reduce using rule 76 (factor -> vcte .)
    COMMA           reduce using rule 76 (factor -> vcte .)
    CLOSEBRAC       reduce using rule 76 (factor -> vcte .)
    HASTA           reduce using rule 76 (factor -> vcte .)
    HACER           reduce using rule 76 (factor -> vcte .)


state 99

    (77) factor -> openpar . megaexp closepar
    (68) megaexp -> . superexp
    (69) megaexp -> . megaexp boolean_op superexp
    (70) superexp -> . exp
    (71) superexp -> . superexp logical_op exp
    (72) exp -> . termino
    (73) exp -> . exp sums termino
    (74) termino -> . factor
    (75) termino -> . termino multdiv factor
    (76) factor -> . vcte
    (77) factor -> . openpar megaexp closepar
    (78) factor -> . unary_ops vcte
    (79) factor -> . unary_ops openpar megaexp closepar
    (82) vcte -> . id
    (90) vcte -> . func_call
    (91) vcte -> . CTEI
    (92) vcte -> . CTEF
    (93) vcte -> . TRUE
    (94) vcte -> . FALSE
    (95) vcte -> . CTEC
    (80) openpar -> . OPENPAR
    (108) unary_ops -> . MINUS
    (109) unary_ops -> . PLUS
    (110) unary_ops -> . DETERM
    (111) unary_ops -> . TRANSPOSE
    (112) unary_ops -> . INVERSE
    (83) id -> . variable
    (84) id -> . variable dimensions_offset
    (85) id -> . variable dimensions_offset dimensions_offset
    (48) func_call -> . func_call_id openpar func_call_params closepar
    (86) variable -> . ID
    (49) func_call_id -> . ID

    CTEI            shift and go to state 103
    CTEF            shift and go to state 104
    TRUE            shift and go to state 105
    FALSE           shift and go to state 106
    CTEC            shift and go to state 107
    OPENPAR         shift and go to state 92
    MINUS           shift and go to state 108
    PLUS            shift and go to state 109
    DETERM          shift and go to state 110
    TRANSPOSE       shift and go to state 111
    INVERSE         shift and go to state 112
    ID              shift and go to state 113

    openpar                        shift and go to state 99
    megaexp                        shift and go to state 145
    superexp                       shift and go to state 94
    exp                            shift and go to state 95
    termino                        shift and go to state 96
    factor                         shift and go to state 97
    vcte                           shift and go to state 98
    unary_ops                      shift and go to state 100
    id                             shift and go to state 101
    func_call                      shift and go to state 102
    variable                       shift and go to state 79
    func_call_id                   shift and go to state 73

state 100

    (78) factor -> unary_ops . vcte
    (79) factor -> unary_ops . openpar megaexp closepar
    (82) vcte -> . id
    (90) vcte -> . func_call
    (91) vcte -> . CTEI
    (92) vcte -> . CTEF
    (93) vcte -> . TRUE
    (94) vcte -> . FALSE
    (95) vcte -> . CTEC
    (80) openpar -> . OPENPAR
    (83) id -> . variable
    (84) id -> . variable dimensions_offset
    (85) id -> . variable dimensions_offset dimensions_offset
    (48) func_call -> . func_call_id openpar func_call_params closepar
    (86) variable -> . ID
    (49) func_call_id -> . ID

    CTEI            shift and go to state 103
    CTEF            shift and go to state 104
    TRUE            shift and go to state 105
    FALSE           shift and go to state 106
    CTEC            shift and go to state 107
    OPENPAR         shift and go to state 92
    ID              shift and go to state 113

    vcte                           shift and go to state 146
    openpar                        shift and go to state 147
    id                             shift and go to state 101
    func_call                      shift and go to state 102
    variable                       shift and go to state 79
    func_call_id                   shift and go to state 73

state 101

    (82) vcte -> id .

    TIMES           reduce using rule 82 (vcte -> id .)
    DIVIDE          reduce using rule 82 (vcte -> id .)
    MINUS           reduce using rule 82 (vcte -> id .)
    PLUS            reduce using rule 82 (vcte -> id .)
    GT              reduce using rule 82 (vcte -> id .)
    GTE             reduce using rule 82 (vcte -> id .)
    LT              reduce using rule 82 (vcte -> id .)
    LTE             reduce using rule 82 (vcte -> id .)
    NEQ             reduce using rule 82 (vcte -> id .)
    EQ              reduce using rule 82 (vcte -> id .)
    SEMICOLON       reduce using rule 82 (vcte -> id .)
    OR              reduce using rule 82 (vcte -> id .)
    AND             reduce using rule 82 (vcte -> id .)
    CLOSEPAR        reduce using rule 82 (vcte -> id .)
    COMMA           reduce using rule 82 (vcte -> id .)
    CLOSEBRAC       reduce using rule 82 (vcte -> id .)
    HASTA           reduce using rule 82 (vcte -> id .)
    HACER           reduce using rule 82 (vcte -> id .)


state 102

    (90) vcte -> func_call .

    TIMES           reduce using rule 90 (vcte -> func_call .)
    DIVIDE          reduce using rule 90 (vcte -> func_call .)
    MINUS           reduce using rule 90 (vcte -> func_call .)
    PLUS            reduce using rule 90 (vcte -> func_call .)
    GT              reduce using rule 90 (vcte -> func_call .)
    GTE             reduce using rule 90 (vcte -> func_call .)
    LT              reduce using rule 90 (vcte -> func_call .)
    LTE             reduce using rule 90 (vcte -> func_call .)
    NEQ             reduce using rule 90 (vcte -> func_call .)
    EQ              reduce using rule 90 (vcte -> func_call .)
    SEMICOLON       reduce using rule 90 (vcte -> func_call .)
    OR              reduce using rule 90 (vcte -> func_call .)
    AND             reduce using rule 90 (vcte -> func_call .)
    CLOSEPAR        reduce using rule 90 (vcte -> func_call .)
    COMMA           reduce using rule 90 (vcte -> func_call .)
    CLOSEBRAC       reduce using rule 90 (vcte -> func_call .)
    HASTA           reduce using rule 90 (vcte -> func_call .)
    HACER           reduce using rule 90 (vcte -> func_call .)


state 103

    (91) vcte -> CTEI .

    TIMES           reduce using rule 91 (vcte -> CTEI .)
    DIVIDE          reduce using rule 91 (vcte -> CTEI .)
    MINUS           reduce using rule 91 (vcte -> CTEI .)
    PLUS            reduce using rule 91 (vcte -> CTEI .)
    GT              reduce using rule 91 (vcte -> CTEI .)
    GTE             reduce using rule 91 (vcte -> CTEI .)
    LT              reduce using rule 91 (vcte -> CTEI .)
    LTE             reduce using rule 91 (vcte -> CTEI .)
    NEQ             reduce using rule 91 (vcte -> CTEI .)
    EQ              reduce using rule 91 (vcte -> CTEI .)
    SEMICOLON       reduce using rule 91 (vcte -> CTEI .)
    OR              reduce using rule 91 (vcte -> CTEI .)
    AND             reduce using rule 91 (vcte -> CTEI .)
    CLOSEPAR        reduce using rule 91 (vcte -> CTEI .)
    COMMA           reduce using rule 91 (vcte -> CTEI .)
    CLOSEBRAC       reduce using rule 91 (vcte -> CTEI .)
    HASTA           reduce using rule 91 (vcte -> CTEI .)
    HACER           reduce using rule 91 (vcte -> CTEI .)


state 104

    (92) vcte -> CTEF .

    TIMES           reduce using rule 92 (vcte -> CTEF .)
    DIVIDE          reduce using rule 92 (vcte -> CTEF .)
    MINUS           reduce using rule 92 (vcte -> CTEF .)
    PLUS            reduce using rule 92 (vcte -> CTEF .)
    GT              reduce using rule 92 (vcte -> CTEF .)
    GTE             reduce using rule 92 (vcte -> CTEF .)
    LT              reduce using rule 92 (vcte -> CTEF .)
    LTE             reduce using rule 92 (vcte -> CTEF .)
    NEQ             reduce using rule 92 (vcte -> CTEF .)
    EQ              reduce using rule 92 (vcte -> CTEF .)
    SEMICOLON       reduce using rule 92 (vcte -> CTEF .)
    OR              reduce using rule 92 (vcte -> CTEF .)
    AND             reduce using rule 92 (vcte -> CTEF .)
    CLOSEPAR        reduce using rule 92 (vcte -> CTEF .)
    COMMA           reduce using rule 92 (vcte -> CTEF .)
    CLOSEBRAC       reduce using rule 92 (vcte -> CTEF .)
    HASTA           reduce using rule 92 (vcte -> CTEF .)
    HACER           reduce using rule 92 (vcte -> CTEF .)


state 105

    (93) vcte -> TRUE .

    TIMES           reduce using rule 93 (vcte -> TRUE .)
    DIVIDE          reduce using rule 93 (vcte -> TRUE .)
    MINUS           reduce using rule 93 (vcte -> TRUE .)
    PLUS            reduce using rule 93 (vcte -> TRUE .)
    GT              reduce using rule 93 (vcte -> TRUE .)
    GTE             reduce using rule 93 (vcte -> TRUE .)
    LT              reduce using rule 93 (vcte -> TRUE .)
    LTE             reduce using rule 93 (vcte -> TRUE .)
    NEQ             reduce using rule 93 (vcte -> TRUE .)
    EQ              reduce using rule 93 (vcte -> TRUE .)
    SEMICOLON       reduce using rule 93 (vcte -> TRUE .)
    OR              reduce using rule 93 (vcte -> TRUE .)
    AND             reduce using rule 93 (vcte -> TRUE .)
    CLOSEPAR        reduce using rule 93 (vcte -> TRUE .)
    COMMA           reduce using rule 93 (vcte -> TRUE .)
    CLOSEBRAC       reduce using rule 93 (vcte -> TRUE .)
    HASTA           reduce using rule 93 (vcte -> TRUE .)
    HACER           reduce using rule 93 (vcte -> TRUE .)


state 106

    (94) vcte -> FALSE .

    TIMES           reduce using rule 94 (vcte -> FALSE .)
    DIVIDE          reduce using rule 94 (vcte -> FALSE .)
    MINUS           reduce using rule 94 (vcte -> FALSE .)
    PLUS            reduce using rule 94 (vcte -> FALSE .)
    GT              reduce using rule 94 (vcte -> FALSE .)
    GTE             reduce using rule 94 (vcte -> FALSE .)
    LT              reduce using rule 94 (vcte -> FALSE .)
    LTE             reduce using rule 94 (vcte -> FALSE .)
    NEQ             reduce using rule 94 (vcte -> FALSE .)
    EQ              reduce using rule 94 (vcte -> FALSE .)
    SEMICOLON       reduce using rule 94 (vcte -> FALSE .)
    OR              reduce using rule 94 (vcte -> FALSE .)
    AND             reduce using rule 94 (vcte -> FALSE .)
    CLOSEPAR        reduce using rule 94 (vcte -> FALSE .)
    COMMA           reduce using rule 94 (vcte -> FALSE .)
    CLOSEBRAC       reduce using rule 94 (vcte -> FALSE .)
    HASTA           reduce using rule 94 (vcte -> FALSE .)
    HACER           reduce using rule 94 (vcte -> FALSE .)


state 107

    (95) vcte -> CTEC .

    TIMES           reduce using rule 95 (vcte -> CTEC .)
    DIVIDE          reduce using rule 95 (vcte -> CTEC .)
    MINUS           reduce using rule 95 (vcte -> CTEC .)
    PLUS            reduce using rule 95 (vcte -> CTEC .)
    GT              reduce using rule 95 (vcte -> CTEC .)
    GTE             reduce using rule 95 (vcte -> CTEC .)
    LT              reduce using rule 95 (vcte -> CTEC .)
    LTE             reduce using rule 95 (vcte -> CTEC .)
    NEQ             reduce using rule 95 (vcte -> CTEC .)
    EQ              reduce using rule 95 (vcte -> CTEC .)
    SEMICOLON       reduce using rule 95 (vcte -> CTEC .)
    OR              reduce using rule 95 (vcte -> CTEC .)
    AND             reduce using rule 95 (vcte -> CTEC .)
    CLOSEPAR        reduce using rule 95 (vcte -> CTEC .)
    COMMA           reduce using rule 95 (vcte -> CTEC .)
    CLOSEBRAC       reduce using rule 95 (vcte -> CTEC .)
    HASTA           reduce using rule 95 (vcte -> CTEC .)
    HACER           reduce using rule 95 (vcte -> CTEC .)


state 108

    (108) unary_ops -> MINUS .

    CTEI            reduce using rule 108 (unary_ops -> MINUS .)
    CTEF            reduce using rule 108 (unary_ops -> MINUS .)
    TRUE            reduce using rule 108 (unary_ops -> MINUS .)
    FALSE           reduce using rule 108 (unary_ops -> MINUS .)
    CTEC            reduce using rule 108 (unary_ops -> MINUS .)
    OPENPAR         reduce using rule 108 (unary_ops -> MINUS .)
    ID              reduce using rule 108 (unary_ops -> MINUS .)


state 109

    (109) unary_ops -> PLUS .

    CTEI            reduce using rule 109 (unary_ops -> PLUS .)
    CTEF            reduce using rule 109 (unary_ops -> PLUS .)
    TRUE            reduce using rule 109 (unary_ops -> PLUS .)
    FALSE           reduce using rule 109 (unary_ops -> PLUS .)
    CTEC            reduce using rule 109 (unary_ops -> PLUS .)
    OPENPAR         reduce using rule 109 (unary_ops -> PLUS .)
    ID              reduce using rule 109 (unary_ops -> PLUS .)


state 110

    (110) unary_ops -> DETERM .

    CTEI            reduce using rule 110 (unary_ops -> DETERM .)
    CTEF            reduce using rule 110 (unary_ops -> DETERM .)
    TRUE            reduce using rule 110 (unary_ops -> DETERM .)
    FALSE           reduce using rule 110 (unary_ops -> DETERM .)
    CTEC            reduce using rule 110 (unary_ops -> DETERM .)
    OPENPAR         reduce using rule 110 (unary_ops -> DETERM .)
    ID              reduce using rule 110 (unary_ops -> DETERM .)


state 111

    (111) unary_ops -> TRANSPOSE .

    CTEI            reduce using rule 111 (unary_ops -> TRANSPOSE .)
    CTEF            reduce using rule 111 (unary_ops -> TRANSPOSE .)
    TRUE            reduce using rule 111 (unary_ops -> TRANSPOSE .)
    FALSE           reduce using rule 111 (unary_ops -> TRANSPOSE .)
    CTEC            reduce using rule 111 (unary_ops -> TRANSPOSE .)
    OPENPAR         reduce using rule 111 (unary_ops -> TRANSPOSE .)
    ID              reduce using rule 111 (unary_ops -> TRANSPOSE .)


state 112

    (112) unary_ops -> INVERSE .

    CTEI            reduce using rule 112 (unary_ops -> INVERSE .)
    CTEF            reduce using rule 112 (unary_ops -> INVERSE .)
    TRUE            reduce using rule 112 (unary_ops -> INVERSE .)
    FALSE           reduce using rule 112 (unary_ops -> INVERSE .)
    CTEC            reduce using rule 112 (unary_ops -> INVERSE .)
    OPENPAR         reduce using rule 112 (unary_ops -> INVERSE .)
    ID              reduce using rule 112 (unary_ops -> INVERSE .)


state 113

    (86) variable -> ID .
    (49) func_call_id -> ID .

    OPENBRAC        reduce using rule 86 (variable -> ID .)
    TIMES           reduce using rule 86 (variable -> ID .)
    DIVIDE          reduce using rule 86 (variable -> ID .)
    MINUS           reduce using rule 86 (variable -> ID .)
    PLUS            reduce using rule 86 (variable -> ID .)
    GT              reduce using rule 86 (variable -> ID .)
    GTE             reduce using rule 86 (variable -> ID .)
    LT              reduce using rule 86 (variable -> ID .)
    LTE             reduce using rule 86 (variable -> ID .)
    NEQ             reduce using rule 86 (variable -> ID .)
    EQ              reduce using rule 86 (variable -> ID .)
    SEMICOLON       reduce using rule 86 (variable -> ID .)
    OR              reduce using rule 86 (variable -> ID .)
    AND             reduce using rule 86 (variable -> ID .)
    CLOSEPAR        reduce using rule 86 (variable -> ID .)
    COMMA           reduce using rule 86 (variable -> ID .)
    CLOSEBRAC       reduce using rule 86 (variable -> ID .)
    HASTA           reduce using rule 86 (variable -> ID .)
    HACER           reduce using rule 86 (variable -> ID .)
    OPENPAR         reduce using rule 49 (func_call_id -> ID .)


state 114

    (53) escribe -> QUACKOUT OPENPAR . print_options CLOSEPAR SEMICOLON
    (54) print_options -> . print_options COMMA printable
    (55) print_options -> . printable
    (56) printable -> . megaexp
    (57) printable -> . CTES
    (68) megaexp -> . superexp
    (69) megaexp -> . megaexp boolean_op superexp
    (70) superexp -> . exp
    (71) superexp -> . superexp logical_op exp
    (72) exp -> . termino
    (73) exp -> . exp sums termino
    (74) termino -> . factor
    (75) termino -> . termino multdiv factor
    (76) factor -> . vcte
    (77) factor -> . openpar megaexp closepar
    (78) factor -> . unary_ops vcte
    (79) factor -> . unary_ops openpar megaexp closepar
    (82) vcte -> . id
    (90) vcte -> . func_call
    (91) vcte -> . CTEI
    (92) vcte -> . CTEF
    (93) vcte -> . TRUE
    (94) vcte -> . FALSE
    (95) vcte -> . CTEC
    (80) openpar -> . OPENPAR
    (108) unary_ops -> . MINUS
    (109) unary_ops -> . PLUS
    (110) unary_ops -> . DETERM
    (111) unary_ops -> . TRANSPOSE
    (112) unary_ops -> . INVERSE
    (83) id -> . variable
    (84) id -> . variable dimensions_offset
    (85) id -> . variable dimensions_offset dimensions_offset
    (48) func_call -> . func_call_id openpar func_call_params closepar
    (86) variable -> . ID
    (49) func_call_id -> . ID

    CTES            shift and go to state 151
    CTEI            shift and go to state 103
    CTEF            shift and go to state 104
    TRUE            shift and go to state 105
    FALSE           shift and go to state 106
    CTEC            shift and go to state 107
    OPENPAR         shift and go to state 92
    MINUS           shift and go to state 108
    PLUS            shift and go to state 109
    DETERM          shift and go to state 110
    TRANSPOSE       shift and go to state 111
    INVERSE         shift and go to state 112
    ID              shift and go to state 113

    print_options                  shift and go to state 148
    printable                      shift and go to state 149
    megaexp                        shift and go to state 150
    superexp                       shift and go to state 94
    exp                            shift and go to state 95
    termino                        shift and go to state 96
    factor                         shift and go to state 97
    vcte                           shift and go to state 98
    openpar                        shift and go to state 99
    unary_ops                      shift and go to state 100
    id                             shift and go to state 101
    func_call                      shift and go to state 102
    variable                       shift and go to state 79
    func_call_id                   shift and go to state 73

state 115

    (58) lee -> QUACKIN OPENPAR . read_options CLOSEPAR SEMICOLON
    (59) read_options -> . read_options COMMA id
    (60) read_options -> . id
    (83) id -> . variable
    (84) id -> . variable dimensions_offset
    (85) id -> . variable dimensions_offset dimensions_offset
    (86) variable -> . ID

    ID              shift and go to state 117

    read_options                   shift and go to state 152
    id                             shift and go to state 153
    variable                       shift and go to state 79

state 116

    (62) desde -> DESDE id . ASSIGN exp hasta exp hacer bloque

    ASSIGN          shift and go to state 154


state 117

    (86) variable -> ID .

    OPENBRAC        reduce using rule 86 (variable -> ID .)
    ASSIGN          reduce using rule 86 (variable -> ID .)
    CLOSEPAR        reduce using rule 86 (variable -> ID .)
    COMMA           reduce using rule 86 (variable -> ID .)


state 118

    (65) mientras_estatuto -> mientras OPENPAR . megaexp CLOSEPAR haz bloque
    (68) megaexp -> . superexp
    (69) megaexp -> . megaexp boolean_op superexp
    (70) superexp -> . exp
    (71) superexp -> . superexp logical_op exp
    (72) exp -> . termino
    (73) exp -> . exp sums termino
    (74) termino -> . factor
    (75) termino -> . termino multdiv factor
    (76) factor -> . vcte
    (77) factor -> . openpar megaexp closepar
    (78) factor -> . unary_ops vcte
    (79) factor -> . unary_ops openpar megaexp closepar
    (82) vcte -> . id
    (90) vcte -> . func_call
    (91) vcte -> . CTEI
    (92) vcte -> . CTEF
    (93) vcte -> . TRUE
    (94) vcte -> . FALSE
    (95) vcte -> . CTEC
    (80) openpar -> . OPENPAR
    (108) unary_ops -> . MINUS
    (109) unary_ops -> . PLUS
    (110) unary_ops -> . DETERM
    (111) unary_ops -> . TRANSPOSE
    (112) unary_ops -> . INVERSE
    (83) id -> . variable
    (84) id -> . variable dimensions_offset
    (85) id -> . variable dimensions_offset dimensions_offset
    (48) func_call -> . func_call_id openpar func_call_params closepar
    (86) variable -> . ID
    (49) func_call_id -> . ID

    CTEI            shift and go to state 103
    CTEF            shift and go to state 104
    TRUE            shift and go to state 105
    FALSE           shift and go to state 106
    CTEC            shift and go to state 107
    OPENPAR         shift and go to state 92
    MINUS           shift and go to state 108
    PLUS            shift and go to state 109
    DETERM          shift and go to state 110
    TRANSPOSE       shift and go to state 111
    INVERSE         shift and go to state 112
    ID              shift and go to state 113

    megaexp                        shift and go to state 155
    superexp                       shift and go to state 94
    exp                            shift and go to state 95
    termino                        shift and go to state 96
    factor                         shift and go to state 97
    vcte                           shift and go to state 98
    openpar                        shift and go to state 99
    unary_ops                      shift and go to state 100
    id                             shift and go to state 101
    func_call                      shift and go to state 102
    variable                       shift and go to state 79
    func_call_id                   shift and go to state 73

state 119

    (84) id -> variable dimensions_offset .
    (85) id -> variable dimensions_offset . dimensions_offset
    (87) dimensions_offset -> . openbrac exp closebrac
    (88) openbrac -> . OPENBRAC

    ASSIGN          reduce using rule 84 (id -> variable dimensions_offset .)
    TIMES           reduce using rule 84 (id -> variable dimensions_offset .)
    DIVIDE          reduce using rule 84 (id -> variable dimensions_offset .)
    MINUS           reduce using rule 84 (id -> variable dimensions_offset .)
    PLUS            reduce using rule 84 (id -> variable dimensions_offset .)
    GT              reduce using rule 84 (id -> variable dimensions_offset .)
    GTE             reduce using rule 84 (id -> variable dimensions_offset .)
    LT              reduce using rule 84 (id -> variable dimensions_offset .)
    LTE             reduce using rule 84 (id -> variable dimensions_offset .)
    NEQ             reduce using rule 84 (id -> variable dimensions_offset .)
    EQ              reduce using rule 84 (id -> variable dimensions_offset .)
    SEMICOLON       reduce using rule 84 (id -> variable dimensions_offset .)
    OR              reduce using rule 84 (id -> variable dimensions_offset .)
    AND             reduce using rule 84 (id -> variable dimensions_offset .)
    CLOSEPAR        reduce using rule 84 (id -> variable dimensions_offset .)
    COMMA           reduce using rule 84 (id -> variable dimensions_offset .)
    CLOSEBRAC       reduce using rule 84 (id -> variable dimensions_offset .)
    HASTA           reduce using rule 84 (id -> variable dimensions_offset .)
    HACER           reduce using rule 84 (id -> variable dimensions_offset .)
    OPENBRAC        shift and go to state 121

    dimensions_offset              shift and go to state 156
    openbrac                       shift and go to state 120

state 120

    (87) dimensions_offset -> openbrac . exp closebrac
    (72) exp -> . termino
    (73) exp -> . exp sums termino
    (74) termino -> . factor
    (75) termino -> . termino multdiv factor
    (76) factor -> . vcte
    (77) factor -> . openpar megaexp closepar
    (78) factor -> . unary_ops vcte
    (79) factor -> . unary_ops openpar megaexp closepar
    (82) vcte -> . id
    (90) vcte -> . func_call
    (91) vcte -> . CTEI
    (92) vcte -> . CTEF
    (93) vcte -> . TRUE
    (94) vcte -> . FALSE
    (95) vcte -> . CTEC
    (80) openpar -> . OPENPAR
    (108) unary_ops -> . MINUS
    (109) unary_ops -> . PLUS
    (110) unary_ops -> . DETERM
    (111) unary_ops -> . TRANSPOSE
    (112) unary_ops -> . INVERSE
    (83) id -> . variable
    (84) id -> . variable dimensions_offset
    (85) id -> . variable dimensions_offset dimensions_offset
    (48) func_call -> . func_call_id openpar func_call_params closepar
    (86) variable -> . ID
    (49) func_call_id -> . ID

    CTEI            shift and go to state 103
    CTEF            shift and go to state 104
    TRUE            shift and go to state 105
    FALSE           shift and go to state 106
    CTEC            shift and go to state 107
    OPENPAR         shift and go to state 92
    MINUS           shift and go to state 108
    PLUS            shift and go to state 109
    DETERM          shift and go to state 110
    TRANSPOSE       shift and go to state 111
    INVERSE         shift and go to state 112
    ID              shift and go to state 113

    exp                            shift and go to state 157
    termino                        shift and go to state 96
    factor                         shift and go to state 97
    vcte                           shift and go to state 98
    openpar                        shift and go to state 99
    unary_ops                      shift and go to state 100
    id                             shift and go to state 101
    func_call                      shift and go to state 102
    variable                       shift and go to state 79
    func_call_id                   shift and go to state 73

state 121

    (88) openbrac -> OPENBRAC .

    CTEI            reduce using rule 88 (openbrac -> OPENBRAC .)
    CTEF            reduce using rule 88 (openbrac -> OPENBRAC .)
    TRUE            reduce using rule 88 (openbrac -> OPENBRAC .)
    FALSE           reduce using rule 88 (openbrac -> OPENBRAC .)
    CTEC            reduce using rule 88 (openbrac -> OPENBRAC .)
    OPENPAR         reduce using rule 88 (openbrac -> OPENBRAC .)
    MINUS           reduce using rule 88 (openbrac -> OPENBRAC .)
    PLUS            reduce using rule 88 (openbrac -> OPENBRAC .)
    DETERM          reduce using rule 88 (openbrac -> OPENBRAC .)
    TRANSPOSE       reduce using rule 88 (openbrac -> OPENBRAC .)
    INVERSE         reduce using rule 88 (openbrac -> OPENBRAC .)
    ID              reduce using rule 88 (openbrac -> OPENBRAC .)


state 122

    (13) dimensions -> OPENBRAC CTEI CLOSEBRAC OPENBRAC CTEI CLOSEBRAC .

    COMMA           reduce using rule 13 (dimensions -> OPENBRAC CTEI CLOSEBRAC OPENBRAC CTEI CLOSEBRAC .)
    SEMICOLON       reduce using rule 13 (dimensions -> OPENBRAC CTEI CLOSEBRAC OPENBRAC CTEI CLOSEBRAC .)
    CLOSEPAR        reduce using rule 13 (dimensions -> OPENBRAC CTEI CLOSEBRAC OPENBRAC CTEI CLOSEBRAC .)


state 123

    (41) asignacion -> id ASSIGN megaexp .
    (69) megaexp -> megaexp . boolean_op superexp
    (96) boolean_op -> . OR
    (97) boolean_op -> . AND

    SEMICOLON       reduce using rule 41 (asignacion -> id ASSIGN megaexp .)
    OR              shift and go to state 130
    AND             shift and go to state 131

    boolean_op                     shift and go to state 129

state 124

    (42) condicion -> SI OPENPAR megaexp . CLOSEPAR entonces bloque_entonces
    (69) megaexp -> megaexp . boolean_op superexp
    (96) boolean_op -> . OR
    (97) boolean_op -> . AND

    CLOSEPAR        shift and go to state 158
    OR              shift and go to state 130
    AND             shift and go to state 131

    boolean_op                     shift and go to state 129

state 125

    (48) func_call -> func_call_id openpar func_call_params . closepar
    (50) func_call_params -> func_call_params . COMMA func_call_params
    (81) closepar -> . CLOSEPAR

    COMMA           shift and go to state 160
    CLOSEPAR        shift and go to state 161

    closepar                       shift and go to state 159

state 126

    (51) func_call_params -> empty .

    COMMA           reduce using rule 51 (func_call_params -> empty .)
    CLOSEPAR        reduce using rule 51 (func_call_params -> empty .)


state 127

    (52) func_call_params -> megaexp .
    (69) megaexp -> megaexp . boolean_op superexp
    (96) boolean_op -> . OR
    (97) boolean_op -> . AND

    COMMA           reduce using rule 52 (func_call_params -> megaexp .)
    CLOSEPAR        reduce using rule 52 (func_call_params -> megaexp .)
    OR              shift and go to state 130
    AND             shift and go to state 131

    boolean_op                     shift and go to state 129

state 128

    (61) retorna -> RETORNA megaexp SEMICOLON .

    SI              reduce using rule 61 (retorna -> RETORNA megaexp SEMICOLON .)
    RETORNA         reduce using rule 61 (retorna -> RETORNA megaexp SEMICOLON .)
    QUACKOUT        reduce using rule 61 (retorna -> RETORNA megaexp SEMICOLON .)
    QUACKIN         reduce using rule 61 (retorna -> RETORNA megaexp SEMICOLON .)
    DESDE           reduce using rule 61 (retorna -> RETORNA megaexp SEMICOLON .)
    ID              reduce using rule 61 (retorna -> RETORNA megaexp SEMICOLON .)
    MIENTRAS        reduce using rule 61 (retorna -> RETORNA megaexp SEMICOLON .)
    RCURLYB         reduce using rule 61 (retorna -> RETORNA megaexp SEMICOLON .)


state 129

    (69) megaexp -> megaexp boolean_op . superexp
    (70) superexp -> . exp
    (71) superexp -> . superexp logical_op exp
    (72) exp -> . termino
    (73) exp -> . exp sums termino
    (74) termino -> . factor
    (75) termino -> . termino multdiv factor
    (76) factor -> . vcte
    (77) factor -> . openpar megaexp closepar
    (78) factor -> . unary_ops vcte
    (79) factor -> . unary_ops openpar megaexp closepar
    (82) vcte -> . id
    (90) vcte -> . func_call
    (91) vcte -> . CTEI
    (92) vcte -> . CTEF
    (93) vcte -> . TRUE
    (94) vcte -> . FALSE
    (95) vcte -> . CTEC
    (80) openpar -> . OPENPAR
    (108) unary_ops -> . MINUS
    (109) unary_ops -> . PLUS
    (110) unary_ops -> . DETERM
    (111) unary_ops -> . TRANSPOSE
    (112) unary_ops -> . INVERSE
    (83) id -> . variable
    (84) id -> . variable dimensions_offset
    (85) id -> . variable dimensions_offset dimensions_offset
    (48) func_call -> . func_call_id openpar func_call_params closepar
    (86) variable -> . ID
    (49) func_call_id -> . ID

    CTEI            shift and go to state 103
    CTEF            shift and go to state 104
    TRUE            shift and go to state 105
    FALSE           shift and go to state 106
    CTEC            shift and go to state 107
    OPENPAR         shift and go to state 92
    MINUS           shift and go to state 108
    PLUS            shift and go to state 109
    DETERM          shift and go to state 110
    TRANSPOSE       shift and go to state 111
    INVERSE         shift and go to state 112
    ID              shift and go to state 113

    superexp                       shift and go to state 162
    exp                            shift and go to state 95
    termino                        shift and go to state 96
    factor                         shift and go to state 97
    vcte                           shift and go to state 98
    openpar                        shift and go to state 99
    unary_ops                      shift and go to state 100
    id                             shift and go to state 101
    func_call                      shift and go to state 102
    variable                       shift and go to state 79
    func_call_id                   shift and go to state 73

state 130

    (96) boolean_op -> OR .

    CTEI            reduce using rule 96 (boolean_op -> OR .)
    CTEF            reduce using rule 96 (boolean_op -> OR .)
    TRUE            reduce using rule 96 (boolean_op -> OR .)
    FALSE           reduce using rule 96 (boolean_op -> OR .)
    CTEC            reduce using rule 96 (boolean_op -> OR .)
    OPENPAR         reduce using rule 96 (boolean_op -> OR .)
    MINUS           reduce using rule 96 (boolean_op -> OR .)
    PLUS            reduce using rule 96 (boolean_op -> OR .)
    DETERM          reduce using rule 96 (boolean_op -> OR .)
    TRANSPOSE       reduce using rule 96 (boolean_op -> OR .)
    INVERSE         reduce using rule 96 (boolean_op -> OR .)
    ID              reduce using rule 96 (boolean_op -> OR .)


state 131

    (97) boolean_op -> AND .

    CTEI            reduce using rule 97 (boolean_op -> AND .)
    CTEF            reduce using rule 97 (boolean_op -> AND .)
    TRUE            reduce using rule 97 (boolean_op -> AND .)
    FALSE           reduce using rule 97 (boolean_op -> AND .)
    CTEC            reduce using rule 97 (boolean_op -> AND .)
    OPENPAR         reduce using rule 97 (boolean_op -> AND .)
    MINUS           reduce using rule 97 (boolean_op -> AND .)
    PLUS            reduce using rule 97 (boolean_op -> AND .)
    DETERM          reduce using rule 97 (boolean_op -> AND .)
    TRANSPOSE       reduce using rule 97 (boolean_op -> AND .)
    INVERSE         reduce using rule 97 (boolean_op -> AND .)
    ID              reduce using rule 97 (boolean_op -> AND .)


state 132

    (71) superexp -> superexp logical_op . exp
    (72) exp -> . termino
    (73) exp -> . exp sums termino
    (74) termino -> . factor
    (75) termino -> . termino multdiv factor
    (76) factor -> . vcte
    (77) factor -> . openpar megaexp closepar
    (78) factor -> . unary_ops vcte
    (79) factor -> . unary_ops openpar megaexp closepar
    (82) vcte -> . id
    (90) vcte -> . func_call
    (91) vcte -> . CTEI
    (92) vcte -> . CTEF
    (93) vcte -> . TRUE
    (94) vcte -> . FALSE
    (95) vcte -> . CTEC
    (80) openpar -> . OPENPAR
    (108) unary_ops -> . MINUS
    (109) unary_ops -> . PLUS
    (110) unary_ops -> . DETERM
    (111) unary_ops -> . TRANSPOSE
    (112) unary_ops -> . INVERSE
    (83) id -> . variable
    (84) id -> . variable dimensions_offset
    (85) id -> . variable dimensions_offset dimensions_offset
    (48) func_call -> . func_call_id openpar func_call_params closepar
    (86) variable -> . ID
    (49) func_call_id -> . ID

    CTEI            shift and go to state 103
    CTEF            shift and go to state 104
    TRUE            shift and go to state 105
    FALSE           shift and go to state 106
    CTEC            shift and go to state 107
    OPENPAR         shift and go to state 92
    MINUS           shift and go to state 108
    PLUS            shift and go to state 109
    DETERM          shift and go to state 110
    TRANSPOSE       shift and go to state 111
    INVERSE         shift and go to state 112
    ID              shift and go to state 113

    exp                            shift and go to state 163
    termino                        shift and go to state 96
    factor                         shift and go to state 97
    vcte                           shift and go to state 98
    openpar                        shift and go to state 99
    unary_ops                      shift and go to state 100
    id                             shift and go to state 101
    func_call                      shift and go to state 102
    variable                       shift and go to state 79
    func_call_id                   shift and go to state 73

state 133

    (98) logical_op -> GT .

    CTEI            reduce using rule 98 (logical_op -> GT .)
    CTEF            reduce using rule 98 (logical_op -> GT .)
    TRUE            reduce using rule 98 (logical_op -> GT .)
    FALSE           reduce using rule 98 (logical_op -> GT .)
    CTEC            reduce using rule 98 (logical_op -> GT .)
    OPENPAR         reduce using rule 98 (logical_op -> GT .)
    MINUS           reduce using rule 98 (logical_op -> GT .)
    PLUS            reduce using rule 98 (logical_op -> GT .)
    DETERM          reduce using rule 98 (logical_op -> GT .)
    TRANSPOSE       reduce using rule 98 (logical_op -> GT .)
    INVERSE         reduce using rule 98 (logical_op -> GT .)
    ID              reduce using rule 98 (logical_op -> GT .)


state 134

    (99) logical_op -> GTE .

    CTEI            reduce using rule 99 (logical_op -> GTE .)
    CTEF            reduce using rule 99 (logical_op -> GTE .)
    TRUE            reduce using rule 99 (logical_op -> GTE .)
    FALSE           reduce using rule 99 (logical_op -> GTE .)
    CTEC            reduce using rule 99 (logical_op -> GTE .)
    OPENPAR         reduce using rule 99 (logical_op -> GTE .)
    MINUS           reduce using rule 99 (logical_op -> GTE .)
    PLUS            reduce using rule 99 (logical_op -> GTE .)
    DETERM          reduce using rule 99 (logical_op -> GTE .)
    TRANSPOSE       reduce using rule 99 (logical_op -> GTE .)
    INVERSE         reduce using rule 99 (logical_op -> GTE .)
    ID              reduce using rule 99 (logical_op -> GTE .)


state 135

    (100) logical_op -> LT .

    CTEI            reduce using rule 100 (logical_op -> LT .)
    CTEF            reduce using rule 100 (logical_op -> LT .)
    TRUE            reduce using rule 100 (logical_op -> LT .)
    FALSE           reduce using rule 100 (logical_op -> LT .)
    CTEC            reduce using rule 100 (logical_op -> LT .)
    OPENPAR         reduce using rule 100 (logical_op -> LT .)
    MINUS           reduce using rule 100 (logical_op -> LT .)
    PLUS            reduce using rule 100 (logical_op -> LT .)
    DETERM          reduce using rule 100 (logical_op -> LT .)
    TRANSPOSE       reduce using rule 100 (logical_op -> LT .)
    INVERSE         reduce using rule 100 (logical_op -> LT .)
    ID              reduce using rule 100 (logical_op -> LT .)


state 136

    (101) logical_op -> LTE .

    CTEI            reduce using rule 101 (logical_op -> LTE .)
    CTEF            reduce using rule 101 (logical_op -> LTE .)
    TRUE            reduce using rule 101 (logical_op -> LTE .)
    FALSE           reduce using rule 101 (logical_op -> LTE .)
    CTEC            reduce using rule 101 (logical_op -> LTE .)
    OPENPAR         reduce using rule 101 (logical_op -> LTE .)
    MINUS           reduce using rule 101 (logical_op -> LTE .)
    PLUS            reduce using rule 101 (logical_op -> LTE .)
    DETERM          reduce using rule 101 (logical_op -> LTE .)
    TRANSPOSE       reduce using rule 101 (logical_op -> LTE .)
    INVERSE         reduce using rule 101 (logical_op -> LTE .)
    ID              reduce using rule 101 (logical_op -> LTE .)


state 137

    (102) logical_op -> NEQ .

    CTEI            reduce using rule 102 (logical_op -> NEQ .)
    CTEF            reduce using rule 102 (logical_op -> NEQ .)
    TRUE            reduce using rule 102 (logical_op -> NEQ .)
    FALSE           reduce using rule 102 (logical_op -> NEQ .)
    CTEC            reduce using rule 102 (logical_op -> NEQ .)
    OPENPAR         reduce using rule 102 (logical_op -> NEQ .)
    MINUS           reduce using rule 102 (logical_op -> NEQ .)
    PLUS            reduce using rule 102 (logical_op -> NEQ .)
    DETERM          reduce using rule 102 (logical_op -> NEQ .)
    TRANSPOSE       reduce using rule 102 (logical_op -> NEQ .)
    INVERSE         reduce using rule 102 (logical_op -> NEQ .)
    ID              reduce using rule 102 (logical_op -> NEQ .)


state 138

    (103) logical_op -> EQ .

    CTEI            reduce using rule 103 (logical_op -> EQ .)
    CTEF            reduce using rule 103 (logical_op -> EQ .)
    TRUE            reduce using rule 103 (logical_op -> EQ .)
    FALSE           reduce using rule 103 (logical_op -> EQ .)
    CTEC            reduce using rule 103 (logical_op -> EQ .)
    OPENPAR         reduce using rule 103 (logical_op -> EQ .)
    MINUS           reduce using rule 103 (logical_op -> EQ .)
    PLUS            reduce using rule 103 (logical_op -> EQ .)
    DETERM          reduce using rule 103 (logical_op -> EQ .)
    TRANSPOSE       reduce using rule 103 (logical_op -> EQ .)
    INVERSE         reduce using rule 103 (logical_op -> EQ .)
    ID              reduce using rule 103 (logical_op -> EQ .)


state 139

    (73) exp -> exp sums . termino
    (74) termino -> . factor
    (75) termino -> . termino multdiv factor
    (76) factor -> . vcte
    (77) factor -> . openpar megaexp closepar
    (78) factor -> . unary_ops vcte
    (79) factor -> . unary_ops openpar megaexp closepar
    (82) vcte -> . id
    (90) vcte -> . func_call
    (91) vcte -> . CTEI
    (92) vcte -> . CTEF
    (93) vcte -> . TRUE
    (94) vcte -> . FALSE
    (95) vcte -> . CTEC
    (80) openpar -> . OPENPAR
    (108) unary_ops -> . MINUS
    (109) unary_ops -> . PLUS
    (110) unary_ops -> . DETERM
    (111) unary_ops -> . TRANSPOSE
    (112) unary_ops -> . INVERSE
    (83) id -> . variable
    (84) id -> . variable dimensions_offset
    (85) id -> . variable dimensions_offset dimensions_offset
    (48) func_call -> . func_call_id openpar func_call_params closepar
    (86) variable -> . ID
    (49) func_call_id -> . ID

    CTEI            shift and go to state 103
    CTEF            shift and go to state 104
    TRUE            shift and go to state 105
    FALSE           shift and go to state 106
    CTEC            shift and go to state 107
    OPENPAR         shift and go to state 92
    MINUS           shift and go to state 108
    PLUS            shift and go to state 109
    DETERM          shift and go to state 110
    TRANSPOSE       shift and go to state 111
    INVERSE         shift and go to state 112
    ID              shift and go to state 113

    termino                        shift and go to state 164
    factor                         shift and go to state 97
    vcte                           shift and go to state 98
    openpar                        shift and go to state 99
    unary_ops                      shift and go to state 100
    id                             shift and go to state 101
    func_call                      shift and go to state 102
    variable                       shift and go to state 79
    func_call_id                   shift and go to state 73

state 140

    (104) sums -> MINUS .

    CTEI            reduce using rule 104 (sums -> MINUS .)
    CTEF            reduce using rule 104 (sums -> MINUS .)
    TRUE            reduce using rule 104 (sums -> MINUS .)
    FALSE           reduce using rule 104 (sums -> MINUS .)
    CTEC            reduce using rule 104 (sums -> MINUS .)
    OPENPAR         reduce using rule 104 (sums -> MINUS .)
    MINUS           reduce using rule 104 (sums -> MINUS .)
    PLUS            reduce using rule 104 (sums -> MINUS .)
    DETERM          reduce using rule 104 (sums -> MINUS .)
    TRANSPOSE       reduce using rule 104 (sums -> MINUS .)
    INVERSE         reduce using rule 104 (sums -> MINUS .)
    ID              reduce using rule 104 (sums -> MINUS .)


state 141

    (105) sums -> PLUS .

    CTEI            reduce using rule 105 (sums -> PLUS .)
    CTEF            reduce using rule 105 (sums -> PLUS .)
    TRUE            reduce using rule 105 (sums -> PLUS .)
    FALSE           reduce using rule 105 (sums -> PLUS .)
    CTEC            reduce using rule 105 (sums -> PLUS .)
    OPENPAR         reduce using rule 105 (sums -> PLUS .)
    MINUS           reduce using rule 105 (sums -> PLUS .)
    PLUS            reduce using rule 105 (sums -> PLUS .)
    DETERM          reduce using rule 105 (sums -> PLUS .)
    TRANSPOSE       reduce using rule 105 (sums -> PLUS .)
    INVERSE         reduce using rule 105 (sums -> PLUS .)
    ID              reduce using rule 105 (sums -> PLUS .)


state 142

    (75) termino -> termino multdiv . factor
    (76) factor -> . vcte
    (77) factor -> . openpar megaexp closepar
    (78) factor -> . unary_ops vcte
    (79) factor -> . unary_ops openpar megaexp closepar
    (82) vcte -> . id
    (90) vcte -> . func_call
    (91) vcte -> . CTEI
    (92) vcte -> . CTEF
    (93) vcte -> . TRUE
    (94) vcte -> . FALSE
    (95) vcte -> . CTEC
    (80) openpar -> . OPENPAR
    (108) unary_ops -> . MINUS
    (109) unary_ops -> . PLUS
    (110) unary_ops -> . DETERM
    (111) unary_ops -> . TRANSPOSE
    (112) unary_ops -> . INVERSE
    (83) id -> . variable
    (84) id -> . variable dimensions_offset
    (85) id -> . variable dimensions_offset dimensions_offset
    (48) func_call -> . func_call_id openpar func_call_params closepar
    (86) variable -> . ID
    (49) func_call_id -> . ID

    CTEI            shift and go to state 103
    CTEF            shift and go to state 104
    TRUE            shift and go to state 105
    FALSE           shift and go to state 106
    CTEC            shift and go to state 107
    OPENPAR         shift and go to state 92
    MINUS           shift and go to state 108
    PLUS            shift and go to state 109
    DETERM          shift and go to state 110
    TRANSPOSE       shift and go to state 111
    INVERSE         shift and go to state 112
    ID              shift and go to state 113

    factor                         shift and go to state 165
    vcte                           shift and go to state 98
    openpar                        shift and go to state 99
    unary_ops                      shift and go to state 100
    id                             shift and go to state 101
    func_call                      shift and go to state 102
    variable                       shift and go to state 79
    func_call_id                   shift and go to state 73

state 143

    (106) multdiv -> TIMES .

    CTEI            reduce using rule 106 (multdiv -> TIMES .)
    CTEF            reduce using rule 106 (multdiv -> TIMES .)
    TRUE            reduce using rule 106 (multdiv -> TIMES .)
    FALSE           reduce using rule 106 (multdiv -> TIMES .)
    CTEC            reduce using rule 106 (multdiv -> TIMES .)
    OPENPAR         reduce using rule 106 (multdiv -> TIMES .)
    MINUS           reduce using rule 106 (multdiv -> TIMES .)
    PLUS            reduce using rule 106 (multdiv -> TIMES .)
    DETERM          reduce using rule 106 (multdiv -> TIMES .)
    TRANSPOSE       reduce using rule 106 (multdiv -> TIMES .)
    INVERSE         reduce using rule 106 (multdiv -> TIMES .)
    ID              reduce using rule 106 (multdiv -> TIMES .)


state 144

    (107) multdiv -> DIVIDE .

    CTEI            reduce using rule 107 (multdiv -> DIVIDE .)
    CTEF            reduce using rule 107 (multdiv -> DIVIDE .)
    TRUE            reduce using rule 107 (multdiv -> DIVIDE .)
    FALSE           reduce using rule 107 (multdiv -> DIVIDE .)
    CTEC            reduce using rule 107 (multdiv -> DIVIDE .)
    OPENPAR         reduce using rule 107 (multdiv -> DIVIDE .)
    MINUS           reduce using rule 107 (multdiv -> DIVIDE .)
    PLUS            reduce using rule 107 (multdiv -> DIVIDE .)
    DETERM          reduce using rule 107 (multdiv -> DIVIDE .)
    TRANSPOSE       reduce using rule 107 (multdiv -> DIVIDE .)
    INVERSE         reduce using rule 107 (multdiv -> DIVIDE .)
    ID              reduce using rule 107 (multdiv -> DIVIDE .)


state 145

    (77) factor -> openpar megaexp . closepar
    (69) megaexp -> megaexp . boolean_op superexp
    (81) closepar -> . CLOSEPAR
    (96) boolean_op -> . OR
    (97) boolean_op -> . AND

    CLOSEPAR        shift and go to state 161
    OR              shift and go to state 130
    AND             shift and go to state 131

    closepar                       shift and go to state 166
    boolean_op                     shift and go to state 129

state 146

    (78) factor -> unary_ops vcte .

    TIMES           reduce using rule 78 (factor -> unary_ops vcte .)
    DIVIDE          reduce using rule 78 (factor -> unary_ops vcte .)
    MINUS           reduce using rule 78 (factor -> unary_ops vcte .)
    PLUS            reduce using rule 78 (factor -> unary_ops vcte .)
    GT              reduce using rule 78 (factor -> unary_ops vcte .)
    GTE             reduce using rule 78 (factor -> unary_ops vcte .)
    LT              reduce using rule 78 (factor -> unary_ops vcte .)
    LTE             reduce using rule 78 (factor -> unary_ops vcte .)
    NEQ             reduce using rule 78 (factor -> unary_ops vcte .)
    EQ              reduce using rule 78 (factor -> unary_ops vcte .)
    SEMICOLON       reduce using rule 78 (factor -> unary_ops vcte .)
    OR              reduce using rule 78 (factor -> unary_ops vcte .)
    AND             reduce using rule 78 (factor -> unary_ops vcte .)
    CLOSEPAR        reduce using rule 78 (factor -> unary_ops vcte .)
    COMMA           reduce using rule 78 (factor -> unary_ops vcte .)
    CLOSEBRAC       reduce using rule 78 (factor -> unary_ops vcte .)
    HASTA           reduce using rule 78 (factor -> unary_ops vcte .)
    HACER           reduce using rule 78 (factor -> unary_ops vcte .)


state 147

    (79) factor -> unary_ops openpar . megaexp closepar
    (68) megaexp -> . superexp
    (69) megaexp -> . megaexp boolean_op superexp
    (70) superexp -> . exp
    (71) superexp -> . superexp logical_op exp
    (72) exp -> . termino
    (73) exp -> . exp sums termino
    (74) termino -> . factor
    (75) termino -> . termino multdiv factor
    (76) factor -> . vcte
    (77) factor -> . openpar megaexp closepar
    (78) factor -> . unary_ops vcte
    (79) factor -> . unary_ops openpar megaexp closepar
    (82) vcte -> . id
    (90) vcte -> . func_call
    (91) vcte -> . CTEI
    (92) vcte -> . CTEF
    (93) vcte -> . TRUE
    (94) vcte -> . FALSE
    (95) vcte -> . CTEC
    (80) openpar -> . OPENPAR
    (108) unary_ops -> . MINUS
    (109) unary_ops -> . PLUS
    (110) unary_ops -> . DETERM
    (111) unary_ops -> . TRANSPOSE
    (112) unary_ops -> . INVERSE
    (83) id -> . variable
    (84) id -> . variable dimensions_offset
    (85) id -> . variable dimensions_offset dimensions_offset
    (48) func_call -> . func_call_id openpar func_call_params closepar
    (86) variable -> . ID
    (49) func_call_id -> . ID

    CTEI            shift and go to state 103
    CTEF            shift and go to state 104
    TRUE            shift and go to state 105
    FALSE           shift and go to state 106
    CTEC            shift and go to state 107
    OPENPAR         shift and go to state 92
    MINUS           shift and go to state 108
    PLUS            shift and go to state 109
    DETERM          shift and go to state 110
    TRANSPOSE       shift and go to state 111
    INVERSE         shift and go to state 112
    ID              shift and go to state 113

    unary_ops                      shift and go to state 100
    openpar                        shift and go to state 99
    megaexp                        shift and go to state 167
    superexp                       shift and go to state 94
    exp                            shift and go to state 95
    termino                        shift and go to state 96
    factor                         shift and go to state 97
    vcte                           shift and go to state 98
    id                             shift and go to state 101
    func_call                      shift and go to state 102
    variable                       shift and go to state 79
    func_call_id                   shift and go to state 73

state 148

    (53) escribe -> QUACKOUT OPENPAR print_options . CLOSEPAR SEMICOLON
    (54) print_options -> print_options . COMMA printable

    CLOSEPAR        shift and go to state 168
    COMMA           shift and go to state 169


state 149

    (55) print_options -> printable .

    CLOSEPAR        reduce using rule 55 (print_options -> printable .)
    COMMA           reduce using rule 55 (print_options -> printable .)


state 150

    (56) printable -> megaexp .
    (69) megaexp -> megaexp . boolean_op superexp
    (96) boolean_op -> . OR
    (97) boolean_op -> . AND

    CLOSEPAR        reduce using rule 56 (printable -> megaexp .)
    COMMA           reduce using rule 56 (printable -> megaexp .)
    OR              shift and go to state 130
    AND             shift and go to state 131

    boolean_op                     shift and go to state 129

state 151

    (57) printable -> CTES .

    CLOSEPAR        reduce using rule 57 (printable -> CTES .)
    COMMA           reduce using rule 57 (printable -> CTES .)


state 152

    (58) lee -> QUACKIN OPENPAR read_options . CLOSEPAR SEMICOLON
    (59) read_options -> read_options . COMMA id

    CLOSEPAR        shift and go to state 170
    COMMA           shift and go to state 171


state 153

    (60) read_options -> id .

    CLOSEPAR        reduce using rule 60 (read_options -> id .)
    COMMA           reduce using rule 60 (read_options -> id .)


state 154

    (62) desde -> DESDE id ASSIGN . exp hasta exp hacer bloque
    (72) exp -> . termino
    (73) exp -> . exp sums termino
    (74) termino -> . factor
    (75) termino -> . termino multdiv factor
    (76) factor -> . vcte
    (77) factor -> . openpar megaexp closepar
    (78) factor -> . unary_ops vcte
    (79) factor -> . unary_ops openpar megaexp closepar
    (82) vcte -> . id
    (90) vcte -> . func_call
    (91) vcte -> . CTEI
    (92) vcte -> . CTEF
    (93) vcte -> . TRUE
    (94) vcte -> . FALSE
    (95) vcte -> . CTEC
    (80) openpar -> . OPENPAR
    (108) unary_ops -> . MINUS
    (109) unary_ops -> . PLUS
    (110) unary_ops -> . DETERM
    (111) unary_ops -> . TRANSPOSE
    (112) unary_ops -> . INVERSE
    (83) id -> . variable
    (84) id -> . variable dimensions_offset
    (85) id -> . variable dimensions_offset dimensions_offset
    (48) func_call -> . func_call_id openpar func_call_params closepar
    (86) variable -> . ID
    (49) func_call_id -> . ID

    CTEI            shift and go to state 103
    CTEF            shift and go to state 104
    TRUE            shift and go to state 105
    FALSE           shift and go to state 106
    CTEC            shift and go to state 107
    OPENPAR         shift and go to state 92
    MINUS           shift and go to state 108
    PLUS            shift and go to state 109
    DETERM          shift and go to state 110
    TRANSPOSE       shift and go to state 111
    INVERSE         shift and go to state 112
    ID              shift and go to state 113

    id                             shift and go to state 101
    exp                            shift and go to state 172
    termino                        shift and go to state 96
    factor                         shift and go to state 97
    vcte                           shift and go to state 98
    openpar                        shift and go to state 99
    unary_ops                      shift and go to state 100
    func_call                      shift and go to state 102
    variable                       shift and go to state 79
    func_call_id                   shift and go to state 73

state 155

    (65) mientras_estatuto -> mientras OPENPAR megaexp . CLOSEPAR haz bloque
    (69) megaexp -> megaexp . boolean_op superexp
    (96) boolean_op -> . OR
    (97) boolean_op -> . AND

    CLOSEPAR        shift and go to state 173
    OR              shift and go to state 130
    AND             shift and go to state 131

    boolean_op                     shift and go to state 129

state 156

    (85) id -> variable dimensions_offset dimensions_offset .

    ASSIGN          reduce using rule 85 (id -> variable dimensions_offset dimensions_offset .)
    TIMES           reduce using rule 85 (id -> variable dimensions_offset dimensions_offset .)
    DIVIDE          reduce using rule 85 (id -> variable dimensions_offset dimensions_offset .)
    MINUS           reduce using rule 85 (id -> variable dimensions_offset dimensions_offset .)
    PLUS            reduce using rule 85 (id -> variable dimensions_offset dimensions_offset .)
    GT              reduce using rule 85 (id -> variable dimensions_offset dimensions_offset .)
    GTE             reduce using rule 85 (id -> variable dimensions_offset dimensions_offset .)
    LT              reduce using rule 85 (id -> variable dimensions_offset dimensions_offset .)
    LTE             reduce using rule 85 (id -> variable dimensions_offset dimensions_offset .)
    NEQ             reduce using rule 85 (id -> variable dimensions_offset dimensions_offset .)
    EQ              reduce using rule 85 (id -> variable dimensions_offset dimensions_offset .)
    SEMICOLON       reduce using rule 85 (id -> variable dimensions_offset dimensions_offset .)
    OR              reduce using rule 85 (id -> variable dimensions_offset dimensions_offset .)
    AND             reduce using rule 85 (id -> variable dimensions_offset dimensions_offset .)
    CLOSEPAR        reduce using rule 85 (id -> variable dimensions_offset dimensions_offset .)
    COMMA           reduce using rule 85 (id -> variable dimensions_offset dimensions_offset .)
    CLOSEBRAC       reduce using rule 85 (id -> variable dimensions_offset dimensions_offset .)
    HASTA           reduce using rule 85 (id -> variable dimensions_offset dimensions_offset .)
    HACER           reduce using rule 85 (id -> variable dimensions_offset dimensions_offset .)


state 157

    (87) dimensions_offset -> openbrac exp . closebrac
    (73) exp -> exp . sums termino
    (89) closebrac -> . CLOSEBRAC
    (104) sums -> . MINUS
    (105) sums -> . PLUS

    CLOSEBRAC       shift and go to state 175
    MINUS           shift and go to state 140
    PLUS            shift and go to state 141

    closebrac                      shift and go to state 174
    sums                           shift and go to state 139

state 158

    (42) condicion -> SI OPENPAR megaexp CLOSEPAR . entonces bloque_entonces
    (43) entonces -> . ENTONCES

    ENTONCES        shift and go to state 177

    entonces                       shift and go to state 176

state 159

    (48) func_call -> func_call_id openpar func_call_params closepar .

    SEMICOLON       reduce using rule 48 (func_call -> func_call_id openpar func_call_params closepar .)
    TIMES           reduce using rule 48 (func_call -> func_call_id openpar func_call_params closepar .)
    DIVIDE          reduce using rule 48 (func_call -> func_call_id openpar func_call_params closepar .)
    MINUS           reduce using rule 48 (func_call -> func_call_id openpar func_call_params closepar .)
    PLUS            reduce using rule 48 (func_call -> func_call_id openpar func_call_params closepar .)
    GT              reduce using rule 48 (func_call -> func_call_id openpar func_call_params closepar .)
    GTE             reduce using rule 48 (func_call -> func_call_id openpar func_call_params closepar .)
    LT              reduce using rule 48 (func_call -> func_call_id openpar func_call_params closepar .)
    LTE             reduce using rule 48 (func_call -> func_call_id openpar func_call_params closepar .)
    NEQ             reduce using rule 48 (func_call -> func_call_id openpar func_call_params closepar .)
    EQ              reduce using rule 48 (func_call -> func_call_id openpar func_call_params closepar .)
    OR              reduce using rule 48 (func_call -> func_call_id openpar func_call_params closepar .)
    AND             reduce using rule 48 (func_call -> func_call_id openpar func_call_params closepar .)
    CLOSEPAR        reduce using rule 48 (func_call -> func_call_id openpar func_call_params closepar .)
    COMMA           reduce using rule 48 (func_call -> func_call_id openpar func_call_params closepar .)
    CLOSEBRAC       reduce using rule 48 (func_call -> func_call_id openpar func_call_params closepar .)
    HASTA           reduce using rule 48 (func_call -> func_call_id openpar func_call_params closepar .)
    HACER           reduce using rule 48 (func_call -> func_call_id openpar func_call_params closepar .)


state 160

    (50) func_call_params -> func_call_params COMMA . func_call_params
    (50) func_call_params -> . func_call_params COMMA func_call_params
    (51) func_call_params -> . empty
    (52) func_call_params -> . megaexp
    (113) empty -> .
    (68) megaexp -> . superexp
    (69) megaexp -> . megaexp boolean_op superexp
    (70) superexp -> . exp
    (71) superexp -> . superexp logical_op exp
    (72) exp -> . termino
    (73) exp -> . exp sums termino
    (74) termino -> . factor
    (75) termino -> . termino multdiv factor
    (76) factor -> . vcte
    (77) factor -> . openpar megaexp closepar
    (78) factor -> . unary_ops vcte
    (79) factor -> . unary_ops openpar megaexp closepar
    (82) vcte -> . id
    (90) vcte -> . func_call
    (91) vcte -> . CTEI
    (92) vcte -> . CTEF
    (93) vcte -> . TRUE
    (94) vcte -> . FALSE
    (95) vcte -> . CTEC
    (80) openpar -> . OPENPAR
    (108) unary_ops -> . MINUS
    (109) unary_ops -> . PLUS
    (110) unary_ops -> . DETERM
    (111) unary_ops -> . TRANSPOSE
    (112) unary_ops -> . INVERSE
    (83) id -> . variable
    (84) id -> . variable dimensions_offset
    (85) id -> . variable dimensions_offset dimensions_offset
    (48) func_call -> . func_call_id openpar func_call_params closepar
    (86) variable -> . ID
    (49) func_call_id -> . ID

    COMMA           reduce using rule 113 (empty -> .)
    CLOSEPAR        reduce using rule 113 (empty -> .)
    CTEI            shift and go to state 103
    CTEF            shift and go to state 104
    TRUE            shift and go to state 105
    FALSE           shift and go to state 106
    CTEC            shift and go to state 107
    OPENPAR         shift and go to state 92
    MINUS           shift and go to state 108
    PLUS            shift and go to state 109
    DETERM          shift and go to state 110
    TRANSPOSE       shift and go to state 111
    INVERSE         shift and go to state 112
    ID              shift and go to state 113

    func_call_params               shift and go to state 178
    empty                          shift and go to state 126
    megaexp                        shift and go to state 127
    superexp                       shift and go to state 94
    exp                            shift and go to state 95
    termino                        shift and go to state 96
    factor                         shift and go to state 97
    vcte                           shift and go to state 98
    openpar                        shift and go to state 99
    unary_ops                      shift and go to state 100
    id                             shift and go to state 101
    func_call                      shift and go to state 102
    variable                       shift and go to state 79
    func_call_id                   shift and go to state 73

state 161

    (81) closepar -> CLOSEPAR .

    SEMICOLON       reduce using rule 81 (closepar -> CLOSEPAR .)
    TIMES           reduce using rule 81 (closepar -> CLOSEPAR .)
    DIVIDE          reduce using rule 81 (closepar -> CLOSEPAR .)
    MINUS           reduce using rule 81 (closepar -> CLOSEPAR .)
    PLUS            reduce using rule 81 (closepar -> CLOSEPAR .)
    GT              reduce using rule 81 (closepar -> CLOSEPAR .)
    GTE             reduce using rule 81 (closepar -> CLOSEPAR .)
    LT              reduce using rule 81 (closepar -> CLOSEPAR .)
    LTE             reduce using rule 81 (closepar -> CLOSEPAR .)
    NEQ             reduce using rule 81 (closepar -> CLOSEPAR .)
    EQ              reduce using rule 81 (closepar -> CLOSEPAR .)
    OR              reduce using rule 81 (closepar -> CLOSEPAR .)
    AND             reduce using rule 81 (closepar -> CLOSEPAR .)
    CLOSEPAR        reduce using rule 81 (closepar -> CLOSEPAR .)
    COMMA           reduce using rule 81 (closepar -> CLOSEPAR .)
    CLOSEBRAC       reduce using rule 81 (closepar -> CLOSEPAR .)
    HASTA           reduce using rule 81 (closepar -> CLOSEPAR .)
    HACER           reduce using rule 81 (closepar -> CLOSEPAR .)


state 162

    (69) megaexp -> megaexp boolean_op superexp .
    (71) superexp -> superexp . logical_op exp
    (98) logical_op -> . GT
    (99) logical_op -> . GTE
    (100) logical_op -> . LT
    (101) logical_op -> . LTE
    (102) logical_op -> . NEQ
    (103) logical_op -> . EQ

    SEMICOLON       reduce using rule 69 (megaexp -> megaexp boolean_op superexp .)
    OR              reduce using rule 69 (megaexp -> megaexp boolean_op superexp .)
    AND             reduce using rule 69 (megaexp -> megaexp boolean_op superexp .)
    CLOSEPAR        reduce using rule 69 (megaexp -> megaexp boolean_op superexp .)
    COMMA           reduce using rule 69 (megaexp -> megaexp boolean_op superexp .)
    GT              shift and go to state 133
    GTE             shift and go to state 134
    LT              shift and go to state 135
    LTE             shift and go to state 136
    NEQ             shift and go to state 137
    EQ              shift and go to state 138

    logical_op                     shift and go to state 132

state 163

    (71) superexp -> superexp logical_op exp .
    (73) exp -> exp . sums termino
    (104) sums -> . MINUS
    (105) sums -> . PLUS

    GT              reduce using rule 71 (superexp -> superexp logical_op exp .)
    GTE             reduce using rule 71 (superexp -> superexp logical_op exp .)
    LT              reduce using rule 71 (superexp -> superexp logical_op exp .)
    LTE             reduce using rule 71 (superexp -> superexp logical_op exp .)
    NEQ             reduce using rule 71 (superexp -> superexp logical_op exp .)
    EQ              reduce using rule 71 (superexp -> superexp logical_op exp .)
    SEMICOLON       reduce using rule 71 (superexp -> superexp logical_op exp .)
    OR              reduce using rule 71 (superexp -> superexp logical_op exp .)
    AND             reduce using rule 71 (superexp -> superexp logical_op exp .)
    CLOSEPAR        reduce using rule 71 (superexp -> superexp logical_op exp .)
    COMMA           reduce using rule 71 (superexp -> superexp logical_op exp .)
    MINUS           shift and go to state 140
    PLUS            shift and go to state 141

    sums                           shift and go to state 139

state 164

    (73) exp -> exp sums termino .
    (75) termino -> termino . multdiv factor
    (106) multdiv -> . TIMES
    (107) multdiv -> . DIVIDE

    MINUS           reduce using rule 73 (exp -> exp sums termino .)
    PLUS            reduce using rule 73 (exp -> exp sums termino .)
    GT              reduce using rule 73 (exp -> exp sums termino .)
    GTE             reduce using rule 73 (exp -> exp sums termino .)
    LT              reduce using rule 73 (exp -> exp sums termino .)
    LTE             reduce using rule 73 (exp -> exp sums termino .)
    NEQ             reduce using rule 73 (exp -> exp sums termino .)
    EQ              reduce using rule 73 (exp -> exp sums termino .)
    SEMICOLON       reduce using rule 73 (exp -> exp sums termino .)
    OR              reduce using rule 73 (exp -> exp sums termino .)
    AND             reduce using rule 73 (exp -> exp sums termino .)
    CLOSEPAR        reduce using rule 73 (exp -> exp sums termino .)
    COMMA           reduce using rule 73 (exp -> exp sums termino .)
    CLOSEBRAC       reduce using rule 73 (exp -> exp sums termino .)
    HASTA           reduce using rule 73 (exp -> exp sums termino .)
    HACER           reduce using rule 73 (exp -> exp sums termino .)
    TIMES           shift and go to state 143
    DIVIDE          shift and go to state 144

    multdiv                        shift and go to state 142

state 165

    (75) termino -> termino multdiv factor .

    TIMES           reduce using rule 75 (termino -> termino multdiv factor .)
    DIVIDE          reduce using rule 75 (termino -> termino multdiv factor .)
    MINUS           reduce using rule 75 (termino -> termino multdiv factor .)
    PLUS            reduce using rule 75 (termino -> termino multdiv factor .)
    GT              reduce using rule 75 (termino -> termino multdiv factor .)
    GTE             reduce using rule 75 (termino -> termino multdiv factor .)
    LT              reduce using rule 75 (termino -> termino multdiv factor .)
    LTE             reduce using rule 75 (termino -> termino multdiv factor .)
    NEQ             reduce using rule 75 (termino -> termino multdiv factor .)
    EQ              reduce using rule 75 (termino -> termino multdiv factor .)
    SEMICOLON       reduce using rule 75 (termino -> termino multdiv factor .)
    OR              reduce using rule 75 (termino -> termino multdiv factor .)
    AND             reduce using rule 75 (termino -> termino multdiv factor .)
    CLOSEPAR        reduce using rule 75 (termino -> termino multdiv factor .)
    COMMA           reduce using rule 75 (termino -> termino multdiv factor .)
    CLOSEBRAC       reduce using rule 75 (termino -> termino multdiv factor .)
    HASTA           reduce using rule 75 (termino -> termino multdiv factor .)
    HACER           reduce using rule 75 (termino -> termino multdiv factor .)


state 166

    (77) factor -> openpar megaexp closepar .

    TIMES           reduce using rule 77 (factor -> openpar megaexp closepar .)
    DIVIDE          reduce using rule 77 (factor -> openpar megaexp closepar .)
    MINUS           reduce using rule 77 (factor -> openpar megaexp closepar .)
    PLUS            reduce using rule 77 (factor -> openpar megaexp closepar .)
    GT              reduce using rule 77 (factor -> openpar megaexp closepar .)
    GTE             reduce using rule 77 (factor -> openpar megaexp closepar .)
    LT              reduce using rule 77 (factor -> openpar megaexp closepar .)
    LTE             reduce using rule 77 (factor -> openpar megaexp closepar .)
    NEQ             reduce using rule 77 (factor -> openpar megaexp closepar .)
    EQ              reduce using rule 77 (factor -> openpar megaexp closepar .)
    SEMICOLON       reduce using rule 77 (factor -> openpar megaexp closepar .)
    OR              reduce using rule 77 (factor -> openpar megaexp closepar .)
    AND             reduce using rule 77 (factor -> openpar megaexp closepar .)
    CLOSEPAR        reduce using rule 77 (factor -> openpar megaexp closepar .)
    COMMA           reduce using rule 77 (factor -> openpar megaexp closepar .)
    CLOSEBRAC       reduce using rule 77 (factor -> openpar megaexp closepar .)
    HASTA           reduce using rule 77 (factor -> openpar megaexp closepar .)
    HACER           reduce using rule 77 (factor -> openpar megaexp closepar .)


state 167

    (79) factor -> unary_ops openpar megaexp . closepar
    (69) megaexp -> megaexp . boolean_op superexp
    (81) closepar -> . CLOSEPAR
    (96) boolean_op -> . OR
    (97) boolean_op -> . AND

    CLOSEPAR        shift and go to state 161
    OR              shift and go to state 130
    AND             shift and go to state 131

    closepar                       shift and go to state 179
    boolean_op                     shift and go to state 129

state 168

    (53) escribe -> QUACKOUT OPENPAR print_options CLOSEPAR . SEMICOLON

    SEMICOLON       shift and go to state 180


state 169

    (54) print_options -> print_options COMMA . printable
    (56) printable -> . megaexp
    (57) printable -> . CTES
    (68) megaexp -> . superexp
    (69) megaexp -> . megaexp boolean_op superexp
    (70) superexp -> . exp
    (71) superexp -> . superexp logical_op exp
    (72) exp -> . termino
    (73) exp -> . exp sums termino
    (74) termino -> . factor
    (75) termino -> . termino multdiv factor
    (76) factor -> . vcte
    (77) factor -> . openpar megaexp closepar
    (78) factor -> . unary_ops vcte
    (79) factor -> . unary_ops openpar megaexp closepar
    (82) vcte -> . id
    (90) vcte -> . func_call
    (91) vcte -> . CTEI
    (92) vcte -> . CTEF
    (93) vcte -> . TRUE
    (94) vcte -> . FALSE
    (95) vcte -> . CTEC
    (80) openpar -> . OPENPAR
    (108) unary_ops -> . MINUS
    (109) unary_ops -> . PLUS
    (110) unary_ops -> . DETERM
    (111) unary_ops -> . TRANSPOSE
    (112) unary_ops -> . INVERSE
    (83) id -> . variable
    (84) id -> . variable dimensions_offset
    (85) id -> . variable dimensions_offset dimensions_offset
    (48) func_call -> . func_call_id openpar func_call_params closepar
    (86) variable -> . ID
    (49) func_call_id -> . ID

    CTES            shift and go to state 151
    CTEI            shift and go to state 103
    CTEF            shift and go to state 104
    TRUE            shift and go to state 105
    FALSE           shift and go to state 106
    CTEC            shift and go to state 107
    OPENPAR         shift and go to state 92
    MINUS           shift and go to state 108
    PLUS            shift and go to state 109
    DETERM          shift and go to state 110
    TRANSPOSE       shift and go to state 111
    INVERSE         shift and go to state 112
    ID              shift and go to state 113

    printable                      shift and go to state 181
    megaexp                        shift and go to state 150
    superexp                       shift and go to state 94
    exp                            shift and go to state 95
    termino                        shift and go to state 96
    factor                         shift and go to state 97
    vcte                           shift and go to state 98
    openpar                        shift and go to state 99
    unary_ops                      shift and go to state 100
    id                             shift and go to state 101
    func_call                      shift and go to state 102
    variable                       shift and go to state 79
    func_call_id                   shift and go to state 73

state 170

    (58) lee -> QUACKIN OPENPAR read_options CLOSEPAR . SEMICOLON

    SEMICOLON       shift and go to state 182


state 171

    (59) read_options -> read_options COMMA . id
    (83) id -> . variable
    (84) id -> . variable dimensions_offset
    (85) id -> . variable dimensions_offset dimensions_offset
    (86) variable -> . ID

    ID              shift and go to state 117

    id                             shift and go to state 183
    variable                       shift and go to state 79

state 172

    (62) desde -> DESDE id ASSIGN exp . hasta exp hacer bloque
    (73) exp -> exp . sums termino
    (63) hasta -> . HASTA
    (104) sums -> . MINUS
    (105) sums -> . PLUS

    HASTA           shift and go to state 185
    MINUS           shift and go to state 140
    PLUS            shift and go to state 141

    hasta                          shift and go to state 184
    sums                           shift and go to state 139

state 173

    (65) mientras_estatuto -> mientras OPENPAR megaexp CLOSEPAR . haz bloque
    (67) haz -> . HAZ

    HAZ             shift and go to state 187

    haz                            shift and go to state 186

state 174

    (87) dimensions_offset -> openbrac exp closebrac .

    OPENBRAC        reduce using rule 87 (dimensions_offset -> openbrac exp closebrac .)
    ASSIGN          reduce using rule 87 (dimensions_offset -> openbrac exp closebrac .)
    TIMES           reduce using rule 87 (dimensions_offset -> openbrac exp closebrac .)
    DIVIDE          reduce using rule 87 (dimensions_offset -> openbrac exp closebrac .)
    MINUS           reduce using rule 87 (dimensions_offset -> openbrac exp closebrac .)
    PLUS            reduce using rule 87 (dimensions_offset -> openbrac exp closebrac .)
    GT              reduce using rule 87 (dimensions_offset -> openbrac exp closebrac .)
    GTE             reduce using rule 87 (dimensions_offset -> openbrac exp closebrac .)
    LT              reduce using rule 87 (dimensions_offset -> openbrac exp closebrac .)
    LTE             reduce using rule 87 (dimensions_offset -> openbrac exp closebrac .)
    NEQ             reduce using rule 87 (dimensions_offset -> openbrac exp closebrac .)
    EQ              reduce using rule 87 (dimensions_offset -> openbrac exp closebrac .)
    SEMICOLON       reduce using rule 87 (dimensions_offset -> openbrac exp closebrac .)
    OR              reduce using rule 87 (dimensions_offset -> openbrac exp closebrac .)
    AND             reduce using rule 87 (dimensions_offset -> openbrac exp closebrac .)
    CLOSEPAR        reduce using rule 87 (dimensions_offset -> openbrac exp closebrac .)
    COMMA           reduce using rule 87 (dimensions_offset -> openbrac exp closebrac .)
    CLOSEBRAC       reduce using rule 87 (dimensions_offset -> openbrac exp closebrac .)
    HASTA           reduce using rule 87 (dimensions_offset -> openbrac exp closebrac .)
    HACER           reduce using rule 87 (dimensions_offset -> openbrac exp closebrac .)


state 175

    (89) closebrac -> CLOSEBRAC .

    OPENBRAC        reduce using rule 89 (closebrac -> CLOSEBRAC .)
    ASSIGN          reduce using rule 89 (closebrac -> CLOSEBRAC .)
    TIMES           reduce using rule 89 (closebrac -> CLOSEBRAC .)
    DIVIDE          reduce using rule 89 (closebrac -> CLOSEBRAC .)
    MINUS           reduce using rule 89 (closebrac -> CLOSEBRAC .)
    PLUS            reduce using rule 89 (closebrac -> CLOSEBRAC .)
    GT              reduce using rule 89 (closebrac -> CLOSEBRAC .)
    GTE             reduce using rule 89 (closebrac -> CLOSEBRAC .)
    LT              reduce using rule 89 (closebrac -> CLOSEBRAC .)
    LTE             reduce using rule 89 (closebrac -> CLOSEBRAC .)
    NEQ             reduce using rule 89 (closebrac -> CLOSEBRAC .)
    EQ              reduce using rule 89 (closebrac -> CLOSEBRAC .)
    SEMICOLON       reduce using rule 89 (closebrac -> CLOSEBRAC .)
    OR              reduce using rule 89 (closebrac -> CLOSEBRAC .)
    AND             reduce using rule 89 (closebrac -> CLOSEBRAC .)
    CLOSEPAR        reduce using rule 89 (closebrac -> CLOSEBRAC .)
    COMMA           reduce using rule 89 (closebrac -> CLOSEBRAC .)
    CLOSEBRAC       reduce using rule 89 (closebrac -> CLOSEBRAC .)
    HASTA           reduce using rule 89 (closebrac -> CLOSEBRAC .)
    HACER           reduce using rule 89 (closebrac -> CLOSEBRAC .)


state 176

    (42) condicion -> SI OPENPAR megaexp CLOSEPAR entonces . bloque_entonces
    (44) bloque_entonces -> . bloque bloque_sino
    (30) bloque -> . LCURLYB estatutos_rec RCURLYB

    LCURLYB         shift and go to state 190

    bloque_entonces                shift and go to state 188
    bloque                         shift and go to state 189

state 177

    (43) entonces -> ENTONCES .

    LCURLYB         reduce using rule 43 (entonces -> ENTONCES .)


state 178

    (50) func_call_params -> func_call_params COMMA func_call_params .
    (50) func_call_params -> func_call_params . COMMA func_call_params

    COMMA           reduce using rule 50 (func_call_params -> func_call_params COMMA func_call_params .)
    CLOSEPAR        reduce using rule 50 (func_call_params -> func_call_params COMMA func_call_params .)

  ! COMMA           [ shift and go to state 160 ]


state 179

    (79) factor -> unary_ops openpar megaexp closepar .

    TIMES           reduce using rule 79 (factor -> unary_ops openpar megaexp closepar .)
    DIVIDE          reduce using rule 79 (factor -> unary_ops openpar megaexp closepar .)
    MINUS           reduce using rule 79 (factor -> unary_ops openpar megaexp closepar .)
    PLUS            reduce using rule 79 (factor -> unary_ops openpar megaexp closepar .)
    GT              reduce using rule 79 (factor -> unary_ops openpar megaexp closepar .)
    GTE             reduce using rule 79 (factor -> unary_ops openpar megaexp closepar .)
    LT              reduce using rule 79 (factor -> unary_ops openpar megaexp closepar .)
    LTE             reduce using rule 79 (factor -> unary_ops openpar megaexp closepar .)
    NEQ             reduce using rule 79 (factor -> unary_ops openpar megaexp closepar .)
    EQ              reduce using rule 79 (factor -> unary_ops openpar megaexp closepar .)
    SEMICOLON       reduce using rule 79 (factor -> unary_ops openpar megaexp closepar .)
    OR              reduce using rule 79 (factor -> unary_ops openpar megaexp closepar .)
    AND             reduce using rule 79 (factor -> unary_ops openpar megaexp closepar .)
    CLOSEPAR        reduce using rule 79 (factor -> unary_ops openpar megaexp closepar .)
    COMMA           reduce using rule 79 (factor -> unary_ops openpar megaexp closepar .)
    CLOSEBRAC       reduce using rule 79 (factor -> unary_ops openpar megaexp closepar .)
    HASTA           reduce using rule 79 (factor -> unary_ops openpar megaexp closepar .)
    HACER           reduce using rule 79 (factor -> unary_ops openpar megaexp closepar .)


state 180

    (53) escribe -> QUACKOUT OPENPAR print_options CLOSEPAR SEMICOLON .

    SI              reduce using rule 53 (escribe -> QUACKOUT OPENPAR print_options CLOSEPAR SEMICOLON .)
    RETORNA         reduce using rule 53 (escribe -> QUACKOUT OPENPAR print_options CLOSEPAR SEMICOLON .)
    QUACKOUT        reduce using rule 53 (escribe -> QUACKOUT OPENPAR print_options CLOSEPAR SEMICOLON .)
    QUACKIN         reduce using rule 53 (escribe -> QUACKOUT OPENPAR print_options CLOSEPAR SEMICOLON .)
    DESDE           reduce using rule 53 (escribe -> QUACKOUT OPENPAR print_options CLOSEPAR SEMICOLON .)
    ID              reduce using rule 53 (escribe -> QUACKOUT OPENPAR print_options CLOSEPAR SEMICOLON .)
    MIENTRAS        reduce using rule 53 (escribe -> QUACKOUT OPENPAR print_options CLOSEPAR SEMICOLON .)
    RCURLYB         reduce using rule 53 (escribe -> QUACKOUT OPENPAR print_options CLOSEPAR SEMICOLON .)


state 181

    (54) print_options -> print_options COMMA printable .

    CLOSEPAR        reduce using rule 54 (print_options -> print_options COMMA printable .)
    COMMA           reduce using rule 54 (print_options -> print_options COMMA printable .)


state 182

    (58) lee -> QUACKIN OPENPAR read_options CLOSEPAR SEMICOLON .

    SI              reduce using rule 58 (lee -> QUACKIN OPENPAR read_options CLOSEPAR SEMICOLON .)
    RETORNA         reduce using rule 58 (lee -> QUACKIN OPENPAR read_options CLOSEPAR SEMICOLON .)
    QUACKOUT        reduce using rule 58 (lee -> QUACKIN OPENPAR read_options CLOSEPAR SEMICOLON .)
    QUACKIN         reduce using rule 58 (lee -> QUACKIN OPENPAR read_options CLOSEPAR SEMICOLON .)
    DESDE           reduce using rule 58 (lee -> QUACKIN OPENPAR read_options CLOSEPAR SEMICOLON .)
    ID              reduce using rule 58 (lee -> QUACKIN OPENPAR read_options CLOSEPAR SEMICOLON .)
    MIENTRAS        reduce using rule 58 (lee -> QUACKIN OPENPAR read_options CLOSEPAR SEMICOLON .)
    RCURLYB         reduce using rule 58 (lee -> QUACKIN OPENPAR read_options CLOSEPAR SEMICOLON .)


state 183

    (59) read_options -> read_options COMMA id .

    CLOSEPAR        reduce using rule 59 (read_options -> read_options COMMA id .)
    COMMA           reduce using rule 59 (read_options -> read_options COMMA id .)


state 184

    (62) desde -> DESDE id ASSIGN exp hasta . exp hacer bloque
    (72) exp -> . termino
    (73) exp -> . exp sums termino
    (74) termino -> . factor
    (75) termino -> . termino multdiv factor
    (76) factor -> . vcte
    (77) factor -> . openpar megaexp closepar
    (78) factor -> . unary_ops vcte
    (79) factor -> . unary_ops openpar megaexp closepar
    (82) vcte -> . id
    (90) vcte -> . func_call
    (91) vcte -> . CTEI
    (92) vcte -> . CTEF
    (93) vcte -> . TRUE
    (94) vcte -> . FALSE
    (95) vcte -> . CTEC
    (80) openpar -> . OPENPAR
    (108) unary_ops -> . MINUS
    (109) unary_ops -> . PLUS
    (110) unary_ops -> . DETERM
    (111) unary_ops -> . TRANSPOSE
    (112) unary_ops -> . INVERSE
    (83) id -> . variable
    (84) id -> . variable dimensions_offset
    (85) id -> . variable dimensions_offset dimensions_offset
    (48) func_call -> . func_call_id openpar func_call_params closepar
    (86) variable -> . ID
    (49) func_call_id -> . ID

    CTEI            shift and go to state 103
    CTEF            shift and go to state 104
    TRUE            shift and go to state 105
    FALSE           shift and go to state 106
    CTEC            shift and go to state 107
    OPENPAR         shift and go to state 92
    MINUS           shift and go to state 108
    PLUS            shift and go to state 109
    DETERM          shift and go to state 110
    TRANSPOSE       shift and go to state 111
    INVERSE         shift and go to state 112
    ID              shift and go to state 113

    id                             shift and go to state 101
    exp                            shift and go to state 191
    termino                        shift and go to state 96
    factor                         shift and go to state 97
    vcte                           shift and go to state 98
    openpar                        shift and go to state 99
    unary_ops                      shift and go to state 100
    func_call                      shift and go to state 102
    variable                       shift and go to state 79
    func_call_id                   shift and go to state 73

state 185

    (63) hasta -> HASTA .

    CTEI            reduce using rule 63 (hasta -> HASTA .)
    CTEF            reduce using rule 63 (hasta -> HASTA .)
    TRUE            reduce using rule 63 (hasta -> HASTA .)
    FALSE           reduce using rule 63 (hasta -> HASTA .)
    CTEC            reduce using rule 63 (hasta -> HASTA .)
    OPENPAR         reduce using rule 63 (hasta -> HASTA .)
    MINUS           reduce using rule 63 (hasta -> HASTA .)
    PLUS            reduce using rule 63 (hasta -> HASTA .)
    DETERM          reduce using rule 63 (hasta -> HASTA .)
    TRANSPOSE       reduce using rule 63 (hasta -> HASTA .)
    INVERSE         reduce using rule 63 (hasta -> HASTA .)
    ID              reduce using rule 63 (hasta -> HASTA .)


state 186

    (65) mientras_estatuto -> mientras OPENPAR megaexp CLOSEPAR haz . bloque
    (30) bloque -> . LCURLYB estatutos_rec RCURLYB

    LCURLYB         shift and go to state 190

    bloque                         shift and go to state 192

state 187

    (67) haz -> HAZ .

    LCURLYB         reduce using rule 67 (haz -> HAZ .)


state 188

    (42) condicion -> SI OPENPAR megaexp CLOSEPAR entonces bloque_entonces .

    SI              reduce using rule 42 (condicion -> SI OPENPAR megaexp CLOSEPAR entonces bloque_entonces .)
    RETORNA         reduce using rule 42 (condicion -> SI OPENPAR megaexp CLOSEPAR entonces bloque_entonces .)
    QUACKOUT        reduce using rule 42 (condicion -> SI OPENPAR megaexp CLOSEPAR entonces bloque_entonces .)
    QUACKIN         reduce using rule 42 (condicion -> SI OPENPAR megaexp CLOSEPAR entonces bloque_entonces .)
    DESDE           reduce using rule 42 (condicion -> SI OPENPAR megaexp CLOSEPAR entonces bloque_entonces .)
    ID              reduce using rule 42 (condicion -> SI OPENPAR megaexp CLOSEPAR entonces bloque_entonces .)
    MIENTRAS        reduce using rule 42 (condicion -> SI OPENPAR megaexp CLOSEPAR entonces bloque_entonces .)
    RCURLYB         reduce using rule 42 (condicion -> SI OPENPAR megaexp CLOSEPAR entonces bloque_entonces .)


state 189

    (44) bloque_entonces -> bloque . bloque_sino
    (45) bloque_sino -> . sino bloque
    (46) bloque_sino -> . empty
    (47) sino -> . SINO
    (113) empty -> .

    SINO            shift and go to state 196
    SI              reduce using rule 113 (empty -> .)
    RETORNA         reduce using rule 113 (empty -> .)
    QUACKOUT        reduce using rule 113 (empty -> .)
    QUACKIN         reduce using rule 113 (empty -> .)
    DESDE           reduce using rule 113 (empty -> .)
    ID              reduce using rule 113 (empty -> .)
    MIENTRAS        reduce using rule 113 (empty -> .)
    RCURLYB         reduce using rule 113 (empty -> .)

    bloque_sino                    shift and go to state 193
    sino                           shift and go to state 194
    empty                          shift and go to state 195

state 190

    (30) bloque -> LCURLYB . estatutos_rec RCURLYB
    (31) estatutos_rec -> . estatuto estatutos_rec
    (32) estatutos_rec -> . empty
    (33) estatuto -> . asignacion SEMICOLON
    (34) estatuto -> . condicion
    (35) estatuto -> . func_call SEMICOLON
    (36) estatuto -> . retorna
    (37) estatuto -> . escribe
    (38) estatuto -> . lee
    (39) estatuto -> . desde
    (40) estatuto -> . mientras_estatuto
    (113) empty -> .
    (41) asignacion -> . id ASSIGN megaexp
    (42) condicion -> . SI OPENPAR megaexp CLOSEPAR entonces bloque_entonces
    (48) func_call -> . func_call_id openpar func_call_params closepar
    (61) retorna -> . RETORNA megaexp SEMICOLON
    (53) escribe -> . QUACKOUT OPENPAR print_options CLOSEPAR SEMICOLON
    (58) lee -> . QUACKIN OPENPAR read_options CLOSEPAR SEMICOLON
    (62) desde -> . DESDE id ASSIGN exp hasta exp hacer bloque
    (65) mientras_estatuto -> . mientras OPENPAR megaexp CLOSEPAR haz bloque
    (83) id -> . variable
    (84) id -> . variable dimensions_offset
    (85) id -> . variable dimensions_offset dimensions_offset
    (49) func_call_id -> . ID
    (66) mientras -> . MIENTRAS
    (86) variable -> . ID

    RCURLYB         reduce using rule 113 (empty -> .)
    SI              shift and go to state 72
    RETORNA         shift and go to state 74
    QUACKOUT        shift and go to state 75
    QUACKIN         shift and go to state 76
    DESDE           shift and go to state 77
    ID              shift and go to state 80
    MIENTRAS        shift and go to state 81

    estatutos_rec                  shift and go to state 197
    estatuto                       shift and go to state 61
    empty                          shift and go to state 62
    asignacion                     shift and go to state 63
    condicion                      shift and go to state 64
    func_call                      shift and go to state 65
    retorna                        shift and go to state 66
    escribe                        shift and go to state 67
    lee                            shift and go to state 68
    desde                          shift and go to state 69
    mientras_estatuto              shift and go to state 70
    id                             shift and go to state 71
    func_call_id                   shift and go to state 73
    mientras                       shift and go to state 78
    variable                       shift and go to state 79

state 191

    (62) desde -> DESDE id ASSIGN exp hasta exp . hacer bloque
    (73) exp -> exp . sums termino
    (64) hacer -> . HACER
    (104) sums -> . MINUS
    (105) sums -> . PLUS

    HACER           shift and go to state 199
    MINUS           shift and go to state 140
    PLUS            shift and go to state 141

    hacer                          shift and go to state 198
    sums                           shift and go to state 139

state 192

    (65) mientras_estatuto -> mientras OPENPAR megaexp CLOSEPAR haz bloque .

    SI              reduce using rule 65 (mientras_estatuto -> mientras OPENPAR megaexp CLOSEPAR haz bloque .)
    RETORNA         reduce using rule 65 (mientras_estatuto -> mientras OPENPAR megaexp CLOSEPAR haz bloque .)
    QUACKOUT        reduce using rule 65 (mientras_estatuto -> mientras OPENPAR megaexp CLOSEPAR haz bloque .)
    QUACKIN         reduce using rule 65 (mientras_estatuto -> mientras OPENPAR megaexp CLOSEPAR haz bloque .)
    DESDE           reduce using rule 65 (mientras_estatuto -> mientras OPENPAR megaexp CLOSEPAR haz bloque .)
    ID              reduce using rule 65 (mientras_estatuto -> mientras OPENPAR megaexp CLOSEPAR haz bloque .)
    MIENTRAS        reduce using rule 65 (mientras_estatuto -> mientras OPENPAR megaexp CLOSEPAR haz bloque .)
    RCURLYB         reduce using rule 65 (mientras_estatuto -> mientras OPENPAR megaexp CLOSEPAR haz bloque .)


state 193

    (44) bloque_entonces -> bloque bloque_sino .

    SI              reduce using rule 44 (bloque_entonces -> bloque bloque_sino .)
    RETORNA         reduce using rule 44 (bloque_entonces -> bloque bloque_sino .)
    QUACKOUT        reduce using rule 44 (bloque_entonces -> bloque bloque_sino .)
    QUACKIN         reduce using rule 44 (bloque_entonces -> bloque bloque_sino .)
    DESDE           reduce using rule 44 (bloque_entonces -> bloque bloque_sino .)
    ID              reduce using rule 44 (bloque_entonces -> bloque bloque_sino .)
    MIENTRAS        reduce using rule 44 (bloque_entonces -> bloque bloque_sino .)
    RCURLYB         reduce using rule 44 (bloque_entonces -> bloque bloque_sino .)


state 194

    (45) bloque_sino -> sino . bloque
    (30) bloque -> . LCURLYB estatutos_rec RCURLYB

    LCURLYB         shift and go to state 190

    bloque                         shift and go to state 200

state 195

    (46) bloque_sino -> empty .

    SI              reduce using rule 46 (bloque_sino -> empty .)
    RETORNA         reduce using rule 46 (bloque_sino -> empty .)
    QUACKOUT        reduce using rule 46 (bloque_sino -> empty .)
    QUACKIN         reduce using rule 46 (bloque_sino -> empty .)
    DESDE           reduce using rule 46 (bloque_sino -> empty .)
    ID              reduce using rule 46 (bloque_sino -> empty .)
    MIENTRAS        reduce using rule 46 (bloque_sino -> empty .)
    RCURLYB         reduce using rule 46 (bloque_sino -> empty .)


state 196

    (47) sino -> SINO .

    LCURLYB         reduce using rule 47 (sino -> SINO .)


state 197

    (30) bloque -> LCURLYB estatutos_rec . RCURLYB

    RCURLYB         shift and go to state 201


state 198

    (62) desde -> DESDE id ASSIGN exp hasta exp hacer . bloque
    (30) bloque -> . LCURLYB estatutos_rec RCURLYB

    LCURLYB         shift and go to state 190

    bloque                         shift and go to state 202

state 199

    (64) hacer -> HACER .

    LCURLYB         reduce using rule 64 (hacer -> HACER .)


state 200

    (45) bloque_sino -> sino bloque .

    SI              reduce using rule 45 (bloque_sino -> sino bloque .)
    RETORNA         reduce using rule 45 (bloque_sino -> sino bloque .)
    QUACKOUT        reduce using rule 45 (bloque_sino -> sino bloque .)
    QUACKIN         reduce using rule 45 (bloque_sino -> sino bloque .)
    DESDE           reduce using rule 45 (bloque_sino -> sino bloque .)
    ID              reduce using rule 45 (bloque_sino -> sino bloque .)
    MIENTRAS        reduce using rule 45 (bloque_sino -> sino bloque .)
    RCURLYB         reduce using rule 45 (bloque_sino -> sino bloque .)


state 201

    (30) bloque -> LCURLYB estatutos_rec RCURLYB .

    SINO            reduce using rule 30 (bloque -> LCURLYB estatutos_rec RCURLYB .)
    SI              reduce using rule 30 (bloque -> LCURLYB estatutos_rec RCURLYB .)
    RETORNA         reduce using rule 30 (bloque -> LCURLYB estatutos_rec RCURLYB .)
    QUACKOUT        reduce using rule 30 (bloque -> LCURLYB estatutos_rec RCURLYB .)
    QUACKIN         reduce using rule 30 (bloque -> LCURLYB estatutos_rec RCURLYB .)
    DESDE           reduce using rule 30 (bloque -> LCURLYB estatutos_rec RCURLYB .)
    ID              reduce using rule 30 (bloque -> LCURLYB estatutos_rec RCURLYB .)
    MIENTRAS        reduce using rule 30 (bloque -> LCURLYB estatutos_rec RCURLYB .)
    RCURLYB         reduce using rule 30 (bloque -> LCURLYB estatutos_rec RCURLYB .)


state 202

    (62) desde -> DESDE id ASSIGN exp hasta exp hacer bloque .

    SI              reduce using rule 62 (desde -> DESDE id ASSIGN exp hasta exp hacer bloque .)
    RETORNA         reduce using rule 62 (desde -> DESDE id ASSIGN exp hasta exp hacer bloque .)
    QUACKOUT        reduce using rule 62 (desde -> DESDE id ASSIGN exp hasta exp hacer bloque .)
    QUACKIN         reduce using rule 62 (desde -> DESDE id ASSIGN exp hasta exp hacer bloque .)
    DESDE           reduce using rule 62 (desde -> DESDE id ASSIGN exp hasta exp hacer bloque .)
    ID              reduce using rule 62 (desde -> DESDE id ASSIGN exp hasta exp hacer bloque .)
    MIENTRAS        reduce using rule 62 (desde -> DESDE id ASSIGN exp hasta exp hacer bloque .)
    RCURLYB         reduce using rule 62 (desde -> DESDE id ASSIGN exp hasta exp hacer bloque .)

